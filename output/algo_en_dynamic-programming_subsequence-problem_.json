{
    "url": "https://labuladong.online/algo/en/dynamic-programming/subsequence-problem/",
    "title": "Subsequence Problem Patterns for DP | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Subsequence Problem Patterns for DP</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3872 words</span><meta property=\"wordCount\" content=\"3872\"></span></div><hr></div> <h1><!---->Subsequence Problem Patterns for DP</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3872 words</span><meta property=\"wordCount\" content=\"3872\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3872 words</span><meta property=\"wordCount\" content=\"3872\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 3872 words</span> <meta property=\"wordCount\" content=\"3872\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1312. Minimum Insertion Steps to Make a String Palindrome https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome </h3><h3 tabindex=\"-1\"> 516. Longest Palindromic Subsequence https://leetcode.com/problems/longest-palindromic-subsequence </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li></ul></div><p>Subsequence problems are common algorithmic challenges and can be quite tricky to solve.</p><p>Firstly, subsequence problems are inherently more difficult than substring or subarray problems. This is because subsequences are non-continuous sequences, whereas substrings and subarrays are continuous. Even exhaustive enumeration can be challenging, let alone solving related algorithmic problems.</p><p>Moreover, subsequence problems often involve two strings, such as in the previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\">Longest Common Subsequence</a>. Without some experience in handling these, it can be hard to come up with a solution. So, let's dive into the patterns of subsequence problems. There are essentially two templates. If you think along these two lines, you'll be pretty confident in solving related problems.</p><p>Generally, these problems ask you to find the <strong>longest subsequence</strong>, because the shortest subsequence is just a single character, which isn't much of a question. Once it involves subsequences and optimization (like finding the maximum or minimum), it's almost certain that the problem is testing your <strong>dynamic programming skills, with a time complexity typically around O(n^2)</strong>.</p><p>The reason is simple: think about a string and how many possible subsequences it can have. It's at least exponential. In such cases, without using dynamic programming, what other approach could be effective?</p><p>Since we're using dynamic programming, we need to define a <code>dp</code> array and find the state transition relations. The two thinking templates we mentioned are essentially about how to define the <code>dp</code> array. Different problems may require different <code>dp</code> array definitions to solve.</p><h2 id=\"i-two-approaches\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#i-two-approaches\"><span>I. Two Approaches</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_2-longest-palindromic-subsequence\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-longest-palindromic-subsequence\"><span>2. Longest Palindromic Subsequence</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_3-code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-code-implementation\"><span>3. Code Implementation</span></a></h2><h2 class=\"hidden-for-toc\" id=\"section-4-further-expansion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#section-4-further-expansion\"><span>Section 4: Further Expansion</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1312. Minimum Insertion Steps to Make a String Palindrome https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome </h3><h3 tabindex=\"-1\"> 516. Longest Palindromic Subsequence https://leetcode.com/problems/longest-palindromic-subsequence </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li></ul></div><p>Subsequence problems are common algorithmic challenges and can be quite tricky to solve.</p><p>Firstly, subsequence problems are inherently more difficult than substring or subarray problems. This is because subsequences are non-continuous sequences, whereas substrings and subarrays are continuous. Even exhaustive enumeration can be challenging, let alone solving related algorithmic problems.</p><p>Moreover, subsequence problems often involve two strings, such as in the previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\">Longest Common Subsequence</a>. Without some experience in handling these, it can be hard to come up with a solution. So, let's dive into the patterns of subsequence problems. There are essentially two templates. If you think along these two lines, you'll be pretty confident in solving related problems.</p><p>Generally, these problems ask you to find the <strong>longest subsequence</strong>, because the shortest subsequence is just a single character, which isn't much of a question. Once it involves subsequences and optimization (like finding the maximum or minimum), it's almost certain that the problem is testing your <strong>dynamic programming skills, with a time complexity typically around O(n^2)</strong>.</p><p>The reason is simple: think about a string and how many possible subsequences it can have. It's at least exponential. In such cases, without using dynamic programming, what other approach could be effective?</p><p>Since we're using dynamic programming, we need to define a <code>dp</code> array and find the state transition relations. The two thinking templates we mentioned are essentially about how to define the <code>dp</code> array. Different problems may require different <code>dp</code> array definitions to solve.</p><h2 id=\"i-two-approaches\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#i-two-approaches\"><span>I. Two Approaches</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_2-longest-palindromic-subsequence\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-longest-palindromic-subsequence\"><span>2. Longest Palindromic Subsequence</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_3-code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-code-implementation\"><span>3. Code Implementation</span></a></h2><h2 class=\"hidden-for-toc\" id=\"section-4-further-expansion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#section-4-further-expansion\"><span>Section 4: Further Expansion</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 1312. Minimum Insertion Steps to Make a String Palindrome https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome </h3><h3 tabindex=\"-1\"> 516. Longest Palindromic Subsequence https://leetcode.com/problems/longest-palindromic-subsequence </h3></div> <h3 tabindex=\"-1\"> 1312. Minimum Insertion Steps to Make a String Palindrome https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome </h3> <h3 tabindex=\"-1\"> 516. Longest Palindromic Subsequence https://leetcode.com/problems/longest-palindromic-subsequence </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div> <p class=\"hint-container-title\">This article will resolve</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">Difficulty</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a></td> <a href=\"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/\" target=\"_blank\" rel=\"noopener noreferrer\">1312. Minimum Insertion Steps to Make a String Palindrome</a> <td style=\"text-align:center;\">ðŸ”´</td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a></td> <a href=\"https://leetcode.com/problems/longest-palindromic-subsequence/\" target=\"_blank\" rel=\"noopener noreferrer\">516. Longest Palindromic Subsequence</a> <td style=\"text-align:center;\">ðŸŸ </td> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li></ul></div> <p class=\"hint-container-title\">Prerequisites</p> <p>Before reading this article, you should learn:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a> <p>Subsequence problems are common algorithmic challenges and can be quite tricky to solve.</p> <p>Firstly, subsequence problems are inherently more difficult than substring or subarray problems. This is because subsequences are non-continuous sequences, whereas substrings and subarrays are continuous. Even exhaustive enumeration can be challenging, let alone solving related algorithmic problems.</p> <p>Moreover, subsequence problems often involve two strings, such as in the previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\">Longest Common Subsequence</a>. Without some experience in handling these, it can be hard to come up with a solution. So, let's dive into the patterns of subsequence problems. There are essentially two templates. If you think along these two lines, you'll be pretty confident in solving related problems.</p> <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\">Longest Common Subsequence</a> <p>Generally, these problems ask you to find the <strong>longest subsequence</strong>, because the shortest subsequence is just a single character, which isn't much of a question. Once it involves subsequences and optimization (like finding the maximum or minimum), it's almost certain that the problem is testing your <strong>dynamic programming skills, with a time complexity typically around O(n^2)</strong>.</p> <strong>longest subsequence</strong> <strong>dynamic programming skills, with a time complexity typically around O(n^2)</strong> <p>The reason is simple: think about a string and how many possible subsequences it can have. It's at least exponential. In such cases, without using dynamic programming, what other approach could be effective?</p> <p>Since we're using dynamic programming, we need to define a <code>dp</code> array and find the state transition relations. The two thinking templates we mentioned are essentially about how to define the <code>dp</code> array. Different problems may require different <code>dp</code> array definitions to solve.</p> <code>dp</code> <code>dp</code> <code>dp</code> <h2 id=\"i-two-approaches\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#i-two-approaches\"><span>I. Two Approaches</span></a></h2> <a class=\"header-anchor\" href=\"#i-two-approaches\"><span>I. Two Approaches</span></a> <span>I. Two Approaches</span> <h2 class=\"hidden-for-toc\" id=\"_2-longest-palindromic-subsequence\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-longest-palindromic-subsequence\"><span>2. Longest Palindromic Subsequence</span></a></h2> <a class=\"header-anchor\" href=\"#_2-longest-palindromic-subsequence\"><span>2. Longest Palindromic Subsequence</span></a> <span>2. Longest Palindromic Subsequence</span> <h2 class=\"hidden-for-toc\" id=\"_3-code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-code-implementation\"><span>3. Code Implementation</span></a></h2> <a class=\"header-anchor\" href=\"#_3-code-implementation\"><span>3. Code Implementation</span></a> <span>3. Code Implementation</span> <h2 class=\"hidden-for-toc\" id=\"section-4-further-expansion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#section-4-further-expansion\"><span>Section 4: Further Expansion</span></a></h2> <a class=\"header-anchor\" href=\"#section-4-further-expansion\"><span>Section 4: Further Expansion</span></a> <span>Section 4: Further Expansion</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\" aria-label=\"Classic DP: Longest Common Subsequence\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Classic DP: Longest Common Subsequence</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/dynamic-programming/knapsack1/\" aria-label=\"Classic DP: 0-1 Knapsack Problem\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Classic DP: 0-1 Knapsack Problem<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/dynamic-programming/longest-common-subsequence/\" aria-label=\"Classic DP: Longest Common Subsequence\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Classic DP: Longest Common Subsequence</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Classic DP: Longest Common Subsequence</div> <a class=\"route-link auto-link next\" href=\"/algo/en/dynamic-programming/knapsack1/\" aria-label=\"Classic DP: 0-1 Knapsack Problem\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Classic DP: 0-1 Knapsack Problem<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Classic DP: 0-1 Knapsack Problem<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}