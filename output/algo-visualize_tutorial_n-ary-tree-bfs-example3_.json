{
    "url": "https://labuladong.online/algo-visualize/tutorial/n-ary-tree-bfs-example3/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: ''\n    } class State {\n    constructor(node, depth) {\n        this.node = node;\n        this.depth = depth;\n        this.val = node.val;\n    }\n}\n\nvar levelOrderTraverse = function(root) {\n    if (root === null) {\n        return;\n    }\n    let q = [];\n    // 记录当前遍历到的层数（根节点视为第 1 层）\n    q.push(new State(root, 1));\n\n    while (q.length !== 0) {\n        let state = q.shift();\n        let cur = state.node;\n        let depth = state.depth;\n        // @visualize color *cur #b????a depth\n        // 访问 cur 节点，同时知道它所在的层数\n        console.log(\"depth = \" + depth + \", val = \" + cur.val);\n\n        for (let i = 0; i < cur.children.length; i++) {\n            q.push(new State(cur.children[i], depth + 1));\n        }\n    }\n}\n\nlet _allRoot = NTree.createRoot([1,null,3,2,4,null,5,6]);\nlevelOrderTraverse(_allRoot);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}