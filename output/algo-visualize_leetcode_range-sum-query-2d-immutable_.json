{
    "url": "https://labuladong.online/algo-visualize/leetcode/range-sum-query-2d-immutable/",
    "title": "二维区域和检索 - 矩阵不可变 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: ''\n    } class PrefixSum2D {\n    constructor(matrix) {\n        let m = matrix.length, n = matrix[0].length;\n        // preSum[i][j] 记录矩阵 [0, 0, i-1, j-1] 的元素和\n        // @visualize global\n        let preSum = Array.from({ length: m + 1 }, () => Array(n + 1).fill(0));\n        if (m === 0 || n === 0) return;\n        // 构造前缀和矩阵\n        for (let i = 1; i <= m; i++) {\n            for (let j = 1; j <= n; j++) {\n                // @visualize color *preSum[i-1][j] *preSum[i][j-1] #9542ac\n                // @visualize color *preSum[i-1][j-1] *matrix[i-1][j-1] #9542ac\n                // @visualize color *preSum[i][j] #289c2c\n                // 计算每个矩阵 [0, 0, i, j] 的元素和\n                preSum[i][j] = preSum[i - 1][j] + preSum[i][j - 1] \n                                + matrix[i - 1][j - 1] - preSum[i - 1][j - 1];\n                // @visualize color *preSum[i-1][j] *preSum[i][j-1] #unset\n                // @visualize color *preSum[i-1][j-1] *matrix[i-1][j-1] #unset\n                // @visualize color *preSum[i][j] #unset\n            }\n        }\n        this.preSum = preSum;\n    }\n\n    // 计算子矩阵 [x1, y1, x2, y2] 的元素和\n    // 目标矩阵之和由四个相邻矩阵运算获得\n    sumRegion(x1, y1, x2, y2) {\n        // @visualize color *this.preSum[x1][y1] *this.preSum[x2+1][y2+1] #7e???? x1\n        return this.preSum[x2 + 1][y2 + 1] - this.preSum[x1][y2 + 1] \n            - this.preSum[x2 + 1][y1] + this.preSum[x1][y1];\n    }\n}\n\nlet matrix = [\n    [3, 0, 1, 4, 2],\n    [5, 6, 3, 2, 1],\n    [1, 2, 0, 1, 5],\n    [4, 1, 0, 1, 7],\n    [1, 0, 3, 0, 5]\n];\n\n// @visualize hide\nlet sum = new PrefixSum2D(matrix);\nconsole.log(sum.sumRegion(2, 1, 4, 3));\nconsole.log(sum.sumRegion(1, 1, 3, 2));\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}