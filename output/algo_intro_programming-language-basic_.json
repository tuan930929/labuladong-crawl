{
    "url": "https://labuladong.online/algo/intro/programming-language-basic/",
    "title": "本章导读 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->本章导读</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1327 字</span><meta property=\"wordCount\" content=\"1327\"></span></div><hr></div> <h1><!---->本章导读</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1327 字</span><meta property=\"wordCount\" content=\"1327\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1327 字</span><meta property=\"wordCount\" content=\"1327\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 1327 字</span> <meta property=\"wordCount\" content=\"1327\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><p>本站以及配套插件中的所有代码都同时支持 Java/C++/Golang/Python/JavaScript 这几种编程语言，所以本章会分别介绍这几种编程语言的用法，以便没有编程基础的读者能够快速上手开始刷题。</p><h2 id=\"本章面向的读者\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E9%9D%A2%E5%90%91%E7%9A%84%E8%AF%BB%E8%80%85\"><span>本章面向的读者</span></a></h2><p>本章内容面向的读者是<strong>没有编程经验的纯编程小白，可以任选一门编程语言，以便学习数据结构和算法</strong>。</p><p>如果你已经有一些刷题经验，那么可以跳过本章的内容。</p><p>如果你有熟悉的编程语言，但是从来没有刷过算法题，那么只需要阅读本章的 <a class=\"route-link\" href=\"/algo/intro/leetcode/\">LeetCode/力扣 解题须知</a>，了解刷题平台的基本用法即可学习下一章的内容。</p><p>如果你希望借助 <a class=\"route-link\" href=\"/algo/intro/visualize/\">算法可视化面板</a> 来验证自己的算法，但又不熟悉 JavaScript，可以阅读 <a class=\"route-link\" href=\"/algo/intro/js/\">JavaScript 基础</a>。</p><h2 id=\"本章内容\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\"><span>本章内容</span></a></h2><p>本章内容是<strong>针对刷算法题</strong>这个场景定制的编程语言基础。</p><p>看完这个基础章节，肯定不能说让你精通这门编程语言，但可以确保你能够开始用这门语言在 力扣/LeetCode 上刷题了。</p><p>算法这个东西，本来就和编程语言关系不大，更多的是一种思维方法，甚至说你直接在纸上写字，依然能描述一个精妙的算法实现。</p><p>所以刷算法题对于编程语言的要求非常低，只要会用标准库，会用控制语句（if else 这种），代码能跑起来没有语法错误，就可以开始刷题了。</p><p>本章包含的内容：编程语言的基本语法、控制语句、标准库的常用数据结构，然后带你使用这门语言去力扣上解决一些简单的算法题作为实践。</p><p>至于编程语言的高级用法、语言特性、常用框架、项目开发等内容，都是比较大的话题，不会包含在本章中。</p><h2 id=\"本章学习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span>本章学习方法</span></a></h2><p>因为本站的所有代码同时支持 C++/Java/Python/Golang/JavaScript 这几门语言，所以本章会分别介绍这几门语言的基础用法，你可以选择你未来想要使用的语言进行学习。</p><p>对于编程小白，本章介绍的编程语言<strong>任选一种入门即可</strong>，然后快速开始学习数据结构的原理和算法的解题技巧，这部分才是本站的重点。</p><div class=\"hint-container note\"><p class=\"hint-container-title\">为什么没有 C 语言</p><p>经常有读者问我，大家上学时应该都学过 C 语言，为啥网站不添加 C 语言的代码呢？</p><p>主要是 C 语言的标准库太简单了，连一些基本的常用数据结构都没有提供，这对于刷算法题来说是非常不友好的。</p><p>因为对于复杂算法，它本身就比较抽象，不容易理解，如果还混杂进去一些底层的编程细节，会进一步增加学习的难度，这对于算法教程来说就舍本逐末了。</p><p>如果你非要用 C 语言，可以选择 C++ 作为替代。C++ 是 C 语言的超集，兼容标准的 C 语言，同时也提供了丰富的标准库支持，常见数据结构都有开箱即用的实现，兼顾了性能和实用性，做算法题非常方便。</p></div><h2 id=\"编程语言的选择\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%80%89%E6%8B%A9\"><span>编程语言的选择</span></a></h2><p>考虑到本章面向的是纯小白，所以简单介绍一下几种编程语言的特点，以及不同编程语言在实际开发中的侧重点。</p><p>首先，技术岗可以分为<strong>前端</strong>和<strong>后端</strong>两大类，简单说，前端就是和用户直接交互的界面，后端就是处理数据、逻辑的服务端。</p><p>对于前端，JavaScript 是必须掌握的，因为它是 Web 前端开发的主力军，也是浏览器的标准脚本语言。</p><p>对于后端，技术栈就有很多了，C++/Java/Python/Golang 都是比较常见的选择，JavaScript 其实也可以用 node.js 开发框架来做后端。</p><p>比如对于 Web 开发，Java/node.js/Python 后端都是比较常见的选择，云原生开发主要用 Golang，高性能的系统主要用 C++，AI 和数据分析领域，Python 是主流语言。</p><p>不过实际工作中，基本上大家都会同时用到多种语言，何况当你跳槽后，新公司和老公司的的技术栈大概率不一样，到时候也得重新学习，所以编程语言只是一个工具，你的职业生涯肯定会涉及到多种语言的。</p><p>对于第一门语言，如果你未来想要做前端相关的工作，那么 JavaScript 是必须要学的，你可以选择 JavaScript；如果你未来想要做后端相关的工作，那么要去看看你想从事的细分领域，来选择合适的编程语言。</p><p><strong>如果你还没想好，那么我会建议先选择 Python</strong>，因为 Python 上手快，实用，平时你需要写个什么自动化脚本之类的，都很方便。</p><p>而且还有很重要的一点，目前各种 AI 平台都对 Python 有良好的支持，你让 AI 帮你写 Python 相关的脚本会更方便一些。</p></div><!----><!----><!----></div> <div id=\"markdown-content\"><p>本站以及配套插件中的所有代码都同时支持 Java/C++/Golang/Python/JavaScript 这几种编程语言，所以本章会分别介绍这几种编程语言的用法，以便没有编程基础的读者能够快速上手开始刷题。</p><h2 id=\"本章面向的读者\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E9%9D%A2%E5%90%91%E7%9A%84%E8%AF%BB%E8%80%85\"><span>本章面向的读者</span></a></h2><p>本章内容面向的读者是<strong>没有编程经验的纯编程小白，可以任选一门编程语言，以便学习数据结构和算法</strong>。</p><p>如果你已经有一些刷题经验，那么可以跳过本章的内容。</p><p>如果你有熟悉的编程语言，但是从来没有刷过算法题，那么只需要阅读本章的 <a class=\"route-link\" href=\"/algo/intro/leetcode/\">LeetCode/力扣 解题须知</a>，了解刷题平台的基本用法即可学习下一章的内容。</p><p>如果你希望借助 <a class=\"route-link\" href=\"/algo/intro/visualize/\">算法可视化面板</a> 来验证自己的算法，但又不熟悉 JavaScript，可以阅读 <a class=\"route-link\" href=\"/algo/intro/js/\">JavaScript 基础</a>。</p><h2 id=\"本章内容\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\"><span>本章内容</span></a></h2><p>本章内容是<strong>针对刷算法题</strong>这个场景定制的编程语言基础。</p><p>看完这个基础章节，肯定不能说让你精通这门编程语言，但可以确保你能够开始用这门语言在 力扣/LeetCode 上刷题了。</p><p>算法这个东西，本来就和编程语言关系不大，更多的是一种思维方法，甚至说你直接在纸上写字，依然能描述一个精妙的算法实现。</p><p>所以刷算法题对于编程语言的要求非常低，只要会用标准库，会用控制语句（if else 这种），代码能跑起来没有语法错误，就可以开始刷题了。</p><p>本章包含的内容：编程语言的基本语法、控制语句、标准库的常用数据结构，然后带你使用这门语言去力扣上解决一些简单的算法题作为实践。</p><p>至于编程语言的高级用法、语言特性、常用框架、项目开发等内容，都是比较大的话题，不会包含在本章中。</p><h2 id=\"本章学习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span>本章学习方法</span></a></h2><p>因为本站的所有代码同时支持 C++/Java/Python/Golang/JavaScript 这几门语言，所以本章会分别介绍这几门语言的基础用法，你可以选择你未来想要使用的语言进行学习。</p><p>对于编程小白，本章介绍的编程语言<strong>任选一种入门即可</strong>，然后快速开始学习数据结构的原理和算法的解题技巧，这部分才是本站的重点。</p><div class=\"hint-container note\"><p class=\"hint-container-title\">为什么没有 C 语言</p><p>经常有读者问我，大家上学时应该都学过 C 语言，为啥网站不添加 C 语言的代码呢？</p><p>主要是 C 语言的标准库太简单了，连一些基本的常用数据结构都没有提供，这对于刷算法题来说是非常不友好的。</p><p>因为对于复杂算法，它本身就比较抽象，不容易理解，如果还混杂进去一些底层的编程细节，会进一步增加学习的难度，这对于算法教程来说就舍本逐末了。</p><p>如果你非要用 C 语言，可以选择 C++ 作为替代。C++ 是 C 语言的超集，兼容标准的 C 语言，同时也提供了丰富的标准库支持，常见数据结构都有开箱即用的实现，兼顾了性能和实用性，做算法题非常方便。</p></div><h2 id=\"编程语言的选择\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%80%89%E6%8B%A9\"><span>编程语言的选择</span></a></h2><p>考虑到本章面向的是纯小白，所以简单介绍一下几种编程语言的特点，以及不同编程语言在实际开发中的侧重点。</p><p>首先，技术岗可以分为<strong>前端</strong>和<strong>后端</strong>两大类，简单说，前端就是和用户直接交互的界面，后端就是处理数据、逻辑的服务端。</p><p>对于前端，JavaScript 是必须掌握的，因为它是 Web 前端开发的主力军，也是浏览器的标准脚本语言。</p><p>对于后端，技术栈就有很多了，C++/Java/Python/Golang 都是比较常见的选择，JavaScript 其实也可以用 node.js 开发框架来做后端。</p><p>比如对于 Web 开发，Java/node.js/Python 后端都是比较常见的选择，云原生开发主要用 Golang，高性能的系统主要用 C++，AI 和数据分析领域，Python 是主流语言。</p><p>不过实际工作中，基本上大家都会同时用到多种语言，何况当你跳槽后，新公司和老公司的的技术栈大概率不一样，到时候也得重新学习，所以编程语言只是一个工具，你的职业生涯肯定会涉及到多种语言的。</p><p>对于第一门语言，如果你未来想要做前端相关的工作，那么 JavaScript 是必须要学的，你可以选择 JavaScript；如果你未来想要做后端相关的工作，那么要去看看你想从事的细分领域，来选择合适的编程语言。</p><p><strong>如果你还没想好，那么我会建议先选择 Python</strong>，因为 Python 上手快，实用，平时你需要写个什么自动化脚本之类的，都很方便。</p><p>而且还有很重要的一点，目前各种 AI 平台都对 Python 有良好的支持，你让 AI 帮你写 Python 相关的脚本会更方便一些。</p></div> <p>本站以及配套插件中的所有代码都同时支持 Java/C++/Golang/Python/JavaScript 这几种编程语言，所以本章会分别介绍这几种编程语言的用法，以便没有编程基础的读者能够快速上手开始刷题。</p> <h2 id=\"本章面向的读者\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E9%9D%A2%E5%90%91%E7%9A%84%E8%AF%BB%E8%80%85\"><span>本章面向的读者</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E9%9D%A2%E5%90%91%E7%9A%84%E8%AF%BB%E8%80%85\"><span>本章面向的读者</span></a> <span>本章面向的读者</span> <p>本章内容面向的读者是<strong>没有编程经验的纯编程小白，可以任选一门编程语言，以便学习数据结构和算法</strong>。</p> <strong>没有编程经验的纯编程小白，可以任选一门编程语言，以便学习数据结构和算法</strong> <p>如果你已经有一些刷题经验，那么可以跳过本章的内容。</p> <p>如果你有熟悉的编程语言，但是从来没有刷过算法题，那么只需要阅读本章的 <a class=\"route-link\" href=\"/algo/intro/leetcode/\">LeetCode/力扣 解题须知</a>，了解刷题平台的基本用法即可学习下一章的内容。</p> <a class=\"route-link\" href=\"/algo/intro/leetcode/\">LeetCode/力扣 解题须知</a> <p>如果你希望借助 <a class=\"route-link\" href=\"/algo/intro/visualize/\">算法可视化面板</a> 来验证自己的算法，但又不熟悉 JavaScript，可以阅读 <a class=\"route-link\" href=\"/algo/intro/js/\">JavaScript 基础</a>。</p> <a class=\"route-link\" href=\"/algo/intro/visualize/\">算法可视化面板</a> <a class=\"route-link\" href=\"/algo/intro/js/\">JavaScript 基础</a> <h2 id=\"本章内容\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\"><span>本章内容</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\"><span>本章内容</span></a> <span>本章内容</span> <p>本章内容是<strong>针对刷算法题</strong>这个场景定制的编程语言基础。</p> <strong>针对刷算法题</strong> <p>看完这个基础章节，肯定不能说让你精通这门编程语言，但可以确保你能够开始用这门语言在 力扣/LeetCode 上刷题了。</p> <p>算法这个东西，本来就和编程语言关系不大，更多的是一种思维方法，甚至说你直接在纸上写字，依然能描述一个精妙的算法实现。</p> <p>所以刷算法题对于编程语言的要求非常低，只要会用标准库，会用控制语句（if else 这种），代码能跑起来没有语法错误，就可以开始刷题了。</p> <p>本章包含的内容：编程语言的基本语法、控制语句、标准库的常用数据结构，然后带你使用这门语言去力扣上解决一些简单的算法题作为实践。</p> <p>至于编程语言的高级用法、语言特性、常用框架、项目开发等内容，都是比较大的话题，不会包含在本章中。</p> <h2 id=\"本章学习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span>本章学习方法</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%9C%AC%E7%AB%A0%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span>本章学习方法</span></a> <span>本章学习方法</span> <p>因为本站的所有代码同时支持 C++/Java/Python/Golang/JavaScript 这几门语言，所以本章会分别介绍这几门语言的基础用法，你可以选择你未来想要使用的语言进行学习。</p> <p>对于编程小白，本章介绍的编程语言<strong>任选一种入门即可</strong>，然后快速开始学习数据结构的原理和算法的解题技巧，这部分才是本站的重点。</p> <strong>任选一种入门即可</strong> <div class=\"hint-container note\"><p class=\"hint-container-title\">为什么没有 C 语言</p><p>经常有读者问我，大家上学时应该都学过 C 语言，为啥网站不添加 C 语言的代码呢？</p><p>主要是 C 语言的标准库太简单了，连一些基本的常用数据结构都没有提供，这对于刷算法题来说是非常不友好的。</p><p>因为对于复杂算法，它本身就比较抽象，不容易理解，如果还混杂进去一些底层的编程细节，会进一步增加学习的难度，这对于算法教程来说就舍本逐末了。</p><p>如果你非要用 C 语言，可以选择 C++ 作为替代。C++ 是 C 语言的超集，兼容标准的 C 语言，同时也提供了丰富的标准库支持，常见数据结构都有开箱即用的实现，兼顾了性能和实用性，做算法题非常方便。</p></div> <p class=\"hint-container-title\">为什么没有 C 语言</p> <p>经常有读者问我，大家上学时应该都学过 C 语言，为啥网站不添加 C 语言的代码呢？</p> <p>主要是 C 语言的标准库太简单了，连一些基本的常用数据结构都没有提供，这对于刷算法题来说是非常不友好的。</p> <p>因为对于复杂算法，它本身就比较抽象，不容易理解，如果还混杂进去一些底层的编程细节，会进一步增加学习的难度，这对于算法教程来说就舍本逐末了。</p> <p>如果你非要用 C 语言，可以选择 C++ 作为替代。C++ 是 C 语言的超集，兼容标准的 C 语言，同时也提供了丰富的标准库支持，常见数据结构都有开箱即用的实现，兼顾了性能和实用性，做算法题非常方便。</p> <h2 id=\"编程语言的选择\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%80%89%E6%8B%A9\"><span>编程语言的选择</span></a></h2> <a class=\"header-anchor\" href=\"#%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E9%80%89%E6%8B%A9\"><span>编程语言的选择</span></a> <span>编程语言的选择</span> <p>考虑到本章面向的是纯小白，所以简单介绍一下几种编程语言的特点，以及不同编程语言在实际开发中的侧重点。</p> <p>首先，技术岗可以分为<strong>前端</strong>和<strong>后端</strong>两大类，简单说，前端就是和用户直接交互的界面，后端就是处理数据、逻辑的服务端。</p> <strong>前端</strong> <strong>后端</strong> <p>对于前端，JavaScript 是必须掌握的，因为它是 Web 前端开发的主力军，也是浏览器的标准脚本语言。</p> <p>对于后端，技术栈就有很多了，C++/Java/Python/Golang 都是比较常见的选择，JavaScript 其实也可以用 node.js 开发框架来做后端。</p> <p>比如对于 Web 开发，Java/node.js/Python 后端都是比较常见的选择，云原生开发主要用 Golang，高性能的系统主要用 C++，AI 和数据分析领域，Python 是主流语言。</p> <p>不过实际工作中，基本上大家都会同时用到多种语言，何况当你跳槽后，新公司和老公司的的技术栈大概率不一样，到时候也得重新学习，所以编程语言只是一个工具，你的职业生涯肯定会涉及到多种语言的。</p> <p>对于第一门语言，如果你未来想要做前端相关的工作，那么 JavaScript 是必须要学的，你可以选择 JavaScript；如果你未来想要做后端相关的工作，那么要去看看你想从事的细分领域，来选择合适的编程语言。</p> <p><strong>如果你还没想好，那么我会建议先选择 Python</strong>，因为 Python 上手快，实用，平时你需要写个什么自动化脚本之类的，都很方便。</p> <strong>如果你还没想好，那么我会建议先选择 Python</strong> <p>而且还有很重要的一点，目前各种 AI 平台都对 Python 有良好的支持，你让 AI 帮你写 Python 相关的脚本会更方便一些。</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/intro/how-to-practice/\" aria-label=\"习题章节的练习/复习方法\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->习题章节的练习/复习方法</div></a><a class=\"route-link auto-link next\" href=\"/algo/programming-language-basic/cpp/\" aria-label=\"C++ 语言基础\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">C++ 语言基础<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/intro/how-to-practice/\" aria-label=\"习题章节的练习/复习方法\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->习题章节的练习/复习方法</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->习题章节的练习/复习方法</div> <a class=\"route-link auto-link next\" href=\"/algo/programming-language-basic/cpp/\" aria-label=\"C++ 语言基础\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">C++ 语言基础<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">C++ 语言基础<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}