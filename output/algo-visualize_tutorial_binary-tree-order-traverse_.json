{
    "url": "https://labuladong.online/algo-visualize/tutorial/binary-tree-order-traverse/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } let preorderResult = [];\nlet inorderResult = [];\nlet postorderResult = [];\n\nfunction traverse(root) {\n    if (root == null) {\n        return;\n    }\n    // 前序遍历\n    // @visualize color *root #7ed67e\n    preorderResult.push(root.val);\n    // 递归遍历左子树\n    traverse(root.left);\n    // 中序遍历\n    // @visualize color *root #6ccff9\n    inorderResult.push(root.val);\n    // 递归遍历右子树\n    traverse(root.right);\n    // 后序遍历\n    // @visualize color *root #d22d64\n    postorderResult.push(root.val);\n}\n\nlet _allRoot = BTree.createRoot([1, 2, 3, null, 4, 5, 6]);\ntraverse(_allRoot);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}