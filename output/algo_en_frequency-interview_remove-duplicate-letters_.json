{
    "url": "https://labuladong.online/algo/en/frequency-interview/remove-duplicate-letters/",
    "title": "Removing Duplicates from an Array (Hard Version) | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Removing Duplicates from an Array (Hard Version)</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 2929 words</span><meta property=\"wordCount\" content=\"2929\"></span></div><hr></div> <h1><!---->Removing Duplicates from an Array (Hard Version)</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 2929 words</span><meta property=\"wordCount\" content=\"2929\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 2929 words</span><meta property=\"wordCount\" content=\"2929\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 2929 words</span> <meta property=\"wordCount\" content=\"2929\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h2 id=\"\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#\"><span></span></a></h2></div><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1081. Smallest Subsequence of Distinct Characters https://leetcode.com/problems/smallest-subsequence-of-distinct-characters </h3><h3 tabindex=\"-1\"> 316. Remove Duplicate Letters https://leetcode.com/problems/remove-duplicate-letters </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a></li></ul></div><p>The de-duplication algorithm shouldn't be too difficult; just insert items into a hash set, right?</p><p>At most, you might be asked to remove duplicates in-place from a sorted array, which we discussed in a previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/array-two-pointers-summary/\">Double Pointer Techniques to Solve Array Problems</a>.</p><p>The problem discussed in this article is likely the most challenging among de-duplication algorithms. Understanding this problem will make array de-duplication issues trivial for you.</p><p>This is LeetCode problem 316 \"<a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">Remove Duplicate Letters</a>,\" and the problem is as follows:</p><details class=\"hint-container details\" open><summary><strong>316. Remove Duplicate Letters</strong>Â | <!----><span><a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> |</span> Â ðŸŸ </summary><div><p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p>\n\n\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"bcabc\"\n<strong>Output:</strong> \"abc\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"cbacdcbc\"\n<strong>Output:</strong> \"acdb\"\n</pre>\n\n\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n\n\n<p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n</div><strong style=\"font-size:small;\">The problem is from <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">LeetCode 316. Remove Duplicate Letters</a>.</strong></details><p>The solution to this problem is identical to problem 1081 \"Smallest Subsequence of Distinct Characters.\" You can directly apply the solution of this problem to solve problem 1081 as well.</p><p>The requirements of the problem can be summarized into three points:</p><p>Requirement one, <strong>remove duplicates</strong>.</p><p>Requirement two, the character order in the deduplicated string <strong>must not disrupt the relative order of characters in <code>s</code></strong>.</p><p>Requirement three, among all deduplicated strings that meet the above requirement, the one with the <strong>smallest lexicographical order</strong> should be the final result.</p><p>Among the above three requirements, requirement three might be a bit hard to understand, so let's illustrate with an example.</p><p>For instance, given the input string <code>s = \"babc\"</code>, there are two deduplicated strings that maintain the relative position, <code>\"bac\"</code> and <code>\"abc\"</code>. However, our algorithm should return <code>\"abc\"</code> because it has a smaller lexicographical order.</p><p>Logically, if we want an ordered result, we should sort the original string, but sorting would disrupt the character order in <code>s</code>, which seems contradictory.</p><p>In fact, we will use the idea of a \"monotonic stack,\" as mentioned in the previous article <a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Monotonic Stack Problem-Solving Framework</a>. It's fine if you haven't read it; you'll understand shortly.</p><p><strong>Let's temporarily ignore requirement three and use a \"stack\" to achieve requirements one and two</strong>. The reason for using a stack will become clear later:</p><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h2 id=\"\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#\"><span></span></a></h2></div><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1081. Smallest Subsequence of Distinct Characters https://leetcode.com/problems/smallest-subsequence-of-distinct-characters </h3><h3 tabindex=\"-1\"> 316. Remove Duplicate Letters https://leetcode.com/problems/remove-duplicate-letters </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a></li></ul></div><p>The de-duplication algorithm shouldn't be too difficult; just insert items into a hash set, right?</p><p>At most, you might be asked to remove duplicates in-place from a sorted array, which we discussed in a previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/array-two-pointers-summary/\">Double Pointer Techniques to Solve Array Problems</a>.</p><p>The problem discussed in this article is likely the most challenging among de-duplication algorithms. Understanding this problem will make array de-duplication issues trivial for you.</p><p>This is LeetCode problem 316 \"<a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">Remove Duplicate Letters</a>,\" and the problem is as follows:</p><details class=\"hint-container details\" open><summary><strong>316. Remove Duplicate Letters</strong>Â | <!----><span><a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> |</span> Â ðŸŸ </summary><div><p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p>\n\n\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"bcabc\"\n<strong>Output:</strong> \"abc\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"cbacdcbc\"\n<strong>Output:</strong> \"acdb\"\n</pre>\n\n\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n\n\n<p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n</div><strong style=\"font-size:small;\">The problem is from <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">LeetCode 316. Remove Duplicate Letters</a>.</strong></details><p>The solution to this problem is identical to problem 1081 \"Smallest Subsequence of Distinct Characters.\" You can directly apply the solution of this problem to solve problem 1081 as well.</p><p>The requirements of the problem can be summarized into three points:</p><p>Requirement one, <strong>remove duplicates</strong>.</p><p>Requirement two, the character order in the deduplicated string <strong>must not disrupt the relative order of characters in <code>s</code></strong>.</p><p>Requirement three, among all deduplicated strings that meet the above requirement, the one with the <strong>smallest lexicographical order</strong> should be the final result.</p><p>Among the above three requirements, requirement three might be a bit hard to understand, so let's illustrate with an example.</p><p>For instance, given the input string <code>s = \"babc\"</code>, there are two deduplicated strings that maintain the relative position, <code>\"bac\"</code> and <code>\"abc\"</code>. However, our algorithm should return <code>\"abc\"</code> because it has a smaller lexicographical order.</p><p>Logically, if we want an ordered result, we should sort the original string, but sorting would disrupt the character order in <code>s</code>, which seems contradictory.</p><p>In fact, we will use the idea of a \"monotonic stack,\" as mentioned in the previous article <a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Monotonic Stack Problem-Solving Framework</a>. It's fine if you haven't read it; you'll understand shortly.</p><p><strong>Let's temporarily ignore requirement three and use a \"stack\" to achieve requirements one and two</strong>. The reason for using a stack will become clear later:</p><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h2 id=\"\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#\"><span></span></a></h2></div> <h2 id=\"\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#\"><span></span></a></h2> <a class=\"header-anchor\" href=\"#\"><span></span></a> <span></span> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 1081. Smallest Subsequence of Distinct Characters https://leetcode.com/problems/smallest-subsequence-of-distinct-characters </h3><h3 tabindex=\"-1\"> 316. Remove Duplicate Letters https://leetcode.com/problems/remove-duplicate-letters </h3></div> <h3 tabindex=\"-1\"> 1081. Smallest Subsequence of Distinct Characters https://leetcode.com/problems/smallest-subsequence-of-distinct-characters </h3> <h3 tabindex=\"-1\"> 316. Remove Duplicate Letters https://leetcode.com/problems/remove-duplicate-letters </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div> <p class=\"hint-container-title\">This article will resolve</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">Difficulty</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a></td> <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\" rel=\"noopener noreferrer\">1081. Smallest Subsequence of Distinct Characters</a> <td style=\"text-align:center;\">ðŸŸ </td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a></td> <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">316. Remove Duplicate Letters</a> <td style=\"text-align:center;\">ðŸŸ </td> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a></li></ul></div> <p class=\"hint-container-title\">Prerequisite Knowledge</p> <p>Before reading this article, you should first learn:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/queue-stack-basic/\">Principles of Queue/Stack</a> <li><a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Principles and Implementation of Monotonic Stack</a> <p>The de-duplication algorithm shouldn't be too difficult; just insert items into a hash set, right?</p> <p>At most, you might be asked to remove duplicates in-place from a sorted array, which we discussed in a previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/array-two-pointers-summary/\">Double Pointer Techniques to Solve Array Problems</a>.</p> <a class=\"route-link\" href=\"/algo/en/essential-technique/array-two-pointers-summary/\">Double Pointer Techniques to Solve Array Problems</a> <p>The problem discussed in this article is likely the most challenging among de-duplication algorithms. Understanding this problem will make array de-duplication issues trivial for you.</p> <p>This is LeetCode problem 316 \"<a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">Remove Duplicate Letters</a>,\" and the problem is as follows:</p> <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\" rel=\"noopener noreferrer\">Remove Duplicate Letters</a> <details class=\"hint-container details\" open><summary><strong>316. Remove Duplicate Letters</strong>Â | <!----><span><a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> |</span> Â ðŸŸ </summary><div><p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p>\n\n\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"bcabc\"\n<strong>Output:</strong> \"abc\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"cbacdcbc\"\n<strong>Output:</strong> \"acdb\"\n</pre>\n\n\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n\n\n<p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n</div><strong style=\"font-size:small;\">The problem is from <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">LeetCode 316. Remove Duplicate Letters</a>.</strong></details> <summary><strong>316. Remove Duplicate Letters</strong>Â | <!----><span><a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> |</span> Â ðŸŸ </summary> <strong>316. Remove Duplicate Letters</strong> <span><a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> |</span> <a target=\"_blank\" href=\"https://leetcode.com/problems/remove-duplicate-letters/\" rel=\"noopener noreferrer\">LeetCode<!----></a> <div><p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p>\n\n\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"bcabc\"\n<strong>Output:</strong> \"abc\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = \"cbacdcbc\"\n<strong>Output:</strong> \"acdb\"\n</pre>\n\n\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n\n\n<p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n</div> <p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p> <code>s</code> <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> <strong>the smallest in lexicographical order</strong> <p><strong class=\"example\">Example 1:</strong></p> <strong class=\"example\">Example 1:</strong> <pre>\n<strong>Input:</strong> s = \"bcabc\"\n<strong>Output:</strong> \"abc\"\n</pre> <strong>Input:</strong> <strong>Output:</strong> <p><strong class=\"example\">Example 2:</strong></p> <strong class=\"example\">Example 2:</strong> <pre>\n<strong>Input:</strong> s = \"cbacdcbc\"\n<strong>Output:</strong> \"acdb\"\n</pre> <strong>Input:</strong> <strong>Output:</strong> <p><strong>Constraints:</strong></p> <strong>Constraints:</strong> <ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <code>1 &lt;= s.length &lt;= 10<sup>4</sup></code> <sup>4</sup> <li><code>s</code> consists of lowercase English letters.</li> <code>s</code> <p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p> <strong>Note:</strong> <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a> <strong style=\"font-size:small;\">The problem is from <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">LeetCode 316. Remove Duplicate Letters</a>.</strong> <a href=\"https://leetcode.com/problems/remove-duplicate-letters/\" target=\"_blank\">LeetCode 316. Remove Duplicate Letters</a> <p>The solution to this problem is identical to problem 1081 \"Smallest Subsequence of Distinct Characters.\" You can directly apply the solution of this problem to solve problem 1081 as well.</p> <p>The requirements of the problem can be summarized into three points:</p> <p>Requirement one, <strong>remove duplicates</strong>.</p> <strong>remove duplicates</strong> <p>Requirement two, the character order in the deduplicated string <strong>must not disrupt the relative order of characters in <code>s</code></strong>.</p> <strong>must not disrupt the relative order of characters in <code>s</code></strong> <code>s</code> <p>Requirement three, among all deduplicated strings that meet the above requirement, the one with the <strong>smallest lexicographical order</strong> should be the final result.</p> <strong>smallest lexicographical order</strong> <p>Among the above three requirements, requirement three might be a bit hard to understand, so let's illustrate with an example.</p> <p>For instance, given the input string <code>s = \"babc\"</code>, there are two deduplicated strings that maintain the relative position, <code>\"bac\"</code> and <code>\"abc\"</code>. However, our algorithm should return <code>\"abc\"</code> because it has a smaller lexicographical order.</p> <code>s = \"babc\"</code> <code>\"bac\"</code> <code>\"abc\"</code> <code>\"abc\"</code> <p>Logically, if we want an ordered result, we should sort the original string, but sorting would disrupt the character order in <code>s</code>, which seems contradictory.</p> <code>s</code> <p>In fact, we will use the idea of a \"monotonic stack,\" as mentioned in the previous article <a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Monotonic Stack Problem-Solving Framework</a>. It's fine if you haven't read it; you'll understand shortly.</p> <a class=\"route-link\" href=\"/algo/en/data-structure/monotonic-stack/\">Monotonic Stack Problem-Solving Framework</a> <p><strong>Let's temporarily ignore requirement three and use a \"stack\" to achieve requirements one and two</strong>. The reason for using a stack will become clear later:</p> <strong>Let's temporarily ignore requirement three and use a \"stack\" to achieve requirements one and two</strong> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/practice-in-action/find-median-from-data-stream/\" aria-label=\"Implementing Median Algorithm with Two Binary Heaps\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Implementing Median Algorithm with Two Binary Heaps</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/data-structure/bipartite-graph/\" aria-label=\"How to Determine a Bipartite Graph\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">How to Determine a Bipartite Graph<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/practice-in-action/find-median-from-data-stream/\" aria-label=\"Implementing Median Algorithm with Two Binary Heaps\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Implementing Median Algorithm with Two Binary Heaps</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Implementing Median Algorithm with Two Binary Heaps</div> <a class=\"route-link auto-link next\" href=\"/algo/en/data-structure/bipartite-graph/\" aria-label=\"How to Determine a Bipartite Graph\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">How to Determine a Bipartite Graph<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">How to Determine a Bipartite Graph<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}