{
    "url": "https://labuladong.online/algo/en/game/life-game/",
    "title": "Game of Life | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Game of Life</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3038 words</span><meta property=\"wordCount\" content=\"3038\"></span></div><hr></div> <h1><!---->Game of Life</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3038 words</span><meta property=\"wordCount\" content=\"3038\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 3038 words</span><meta property=\"wordCount\" content=\"3038\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 3038 words</span> <meta property=\"wordCount\" content=\"3038\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><p>The Game of Life (Conway's Game of Life) is a very classic <strong>zero-player</strong> game. It was invented by British mathematician John Horton Conway in 1970.</p><p>It is called a \"zero-player\" game because it evolves by itself using simple rules, and can create very complex patterns automatically.</p><p>The game happens on a 2D grid. Each cell on the grid can be alive or dead.</p><p>The state of each cell is decided by its eight neighbors (up, down, left, right, and four diagonals). The rules are:</p><ol><li><strong>Loneliness Death</strong>: If a live cell has fewer than 2 neighbors, it dies from loneliness.</li><li><strong>Survival</strong>: If a live cell has 2 or 3 neighbors, it stays alive in the next generation.</li><li><strong>Overcrowding Death</strong>: If a live cell has more than 3 neighbors, it dies from overcrowding.</li><li><strong>Reproduction</strong>: If a dead cell has exactly 3 neighbors, it becomes a live cell.</li></ol><p>With these simple rules, if you give an initial state, the game can keep evolving by itself. The cells on the board will keep living and dying. In the end, the board may reach a stable state (the number of live cells does not change), or it may keep creating new cells forever.</p><p>On the website's game panel, your task is to finish the most important part of the Game of Life: write an algorithm to calculate the result of each evolution step using the rules above.</p><!----><p>After you submit the correct code, the game should evolve by itself. The game has several classic starting states. You can choose different presets from the dropdown, click the start button, and watch how they evolve.</p><h2 class=\"hidden-for-toc\" id=\"explanation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#explanation\"><span>Explanation</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><p>The Game of Life (Conway's Game of Life) is a very classic <strong>zero-player</strong> game. It was invented by British mathematician John Horton Conway in 1970.</p><p>It is called a \"zero-player\" game because it evolves by itself using simple rules, and can create very complex patterns automatically.</p><p>The game happens on a 2D grid. Each cell on the grid can be alive or dead.</p><p>The state of each cell is decided by its eight neighbors (up, down, left, right, and four diagonals). The rules are:</p><ol><li><strong>Loneliness Death</strong>: If a live cell has fewer than 2 neighbors, it dies from loneliness.</li><li><strong>Survival</strong>: If a live cell has 2 or 3 neighbors, it stays alive in the next generation.</li><li><strong>Overcrowding Death</strong>: If a live cell has more than 3 neighbors, it dies from overcrowding.</li><li><strong>Reproduction</strong>: If a dead cell has exactly 3 neighbors, it becomes a live cell.</li></ol><p>With these simple rules, if you give an initial state, the game can keep evolving by itself. The cells on the board will keep living and dying. In the end, the board may reach a stable state (the number of live cells does not change), or it may keep creating new cells forever.</p><p>On the website's game panel, your task is to finish the most important part of the Game of Life: write an algorithm to calculate the result of each evolution step using the rules above.</p><!----><p>After you submit the correct code, the game should evolve by itself. The game has several classic starting states. You can choose different presets from the dropdown, click the start button, and watch how they evolve.</p><h2 class=\"hidden-for-toc\" id=\"explanation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#explanation\"><span>Explanation</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <p>The Game of Life (Conway's Game of Life) is a very classic <strong>zero-player</strong> game. It was invented by British mathematician John Horton Conway in 1970.</p> <strong>zero-player</strong> <p>It is called a \"zero-player\" game because it evolves by itself using simple rules, and can create very complex patterns automatically.</p> <p>The game happens on a 2D grid. Each cell on the grid can be alive or dead.</p> <p>The state of each cell is decided by its eight neighbors (up, down, left, right, and four diagonals). The rules are:</p> <ol><li><strong>Loneliness Death</strong>: If a live cell has fewer than 2 neighbors, it dies from loneliness.</li><li><strong>Survival</strong>: If a live cell has 2 or 3 neighbors, it stays alive in the next generation.</li><li><strong>Overcrowding Death</strong>: If a live cell has more than 3 neighbors, it dies from overcrowding.</li><li><strong>Reproduction</strong>: If a dead cell has exactly 3 neighbors, it becomes a live cell.</li></ol> <li><strong>Loneliness Death</strong>: If a live cell has fewer than 2 neighbors, it dies from loneliness.</li> <strong>Loneliness Death</strong> <li><strong>Survival</strong>: If a live cell has 2 or 3 neighbors, it stays alive in the next generation.</li> <strong>Survival</strong> <li><strong>Overcrowding Death</strong>: If a live cell has more than 3 neighbors, it dies from overcrowding.</li> <strong>Overcrowding Death</strong> <li><strong>Reproduction</strong>: If a dead cell has exactly 3 neighbors, it becomes a live cell.</li> <strong>Reproduction</strong> <p>With these simple rules, if you give an initial state, the game can keep evolving by itself. The cells on the board will keep living and dying. In the end, the board may reach a stable state (the number of live cells does not change), or it may keep creating new cells forever.</p> <p>On the website's game panel, your task is to finish the most important part of the Game of Life: write an algorithm to calculate the result of each evolution step using the rules above.</p> <p>After you submit the correct code, the game should evolve by itself. The game has several classic starting states. You can choose different presets from the dropdown, click the start button, and watch how they evolve.</p> <h2 class=\"hidden-for-toc\" id=\"explanation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#explanation\"><span>Explanation</span></a></h2> <a class=\"header-anchor\" href=\"#explanation\"><span>Explanation</span></a> <span>Explanation</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/problem-set/array-two-pointers/\" aria-label=\"Exercise: Two Pointer Techniques for Array\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Exercise: Two Pointer Techniques for Array</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/practice-in-action/nsum/\" aria-label=\"One Trick to Solve All N-Sum Problems\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">One Trick to Solve All N-Sum Problems<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/problem-set/array-two-pointers/\" aria-label=\"Exercise: Two Pointer Techniques for Array\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Exercise: Two Pointer Techniques for Array</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Exercise: Two Pointer Techniques for Array</div> <a class=\"route-link auto-link next\" href=\"/algo/en/practice-in-action/nsum/\" aria-label=\"One Trick to Solve All N-Sum Problems\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">One Trick to Solve All N-Sum Problems<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">One Trick to Solve All N-Sum Problems<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}