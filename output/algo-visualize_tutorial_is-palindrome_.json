{
    "url": "https://labuladong.online/algo-visualize/tutorial/is-palindrome/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var isPalindrome = function(head) {\n    let left = head;\n    let res = true;\n\n    // 先利用递归函数让 right 指向链表末端\n    function traverse(right) {\n        if (right === null) {\n            return;\n        }\n        traverse(right.next);\n        // 然后让 right 退栈，和 left 比较\n        if (left.val !== right.val) {\n            res = false;\n        }\n        // @visualize color *left #4b93ae\n        // @visualize color *right #9f435d\n        left = left.next;\n    }\n\n    traverse(head);\n    return res;\n};\n\nlet result = isPalindrome(LinkedList.createHead([1,3,2,4,4,2,3,1]));\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}