{
    "url": "https://labuladong.online/algo-visualize/tutorial/diff-array-example/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } class Difference {\n    constructor(nums) {\n        // 差分数组\n        // @visualize global\n        let diff = new Array(nums.length);\n        diff[0] = nums[0];\n        for (let i = 1; i < nums.length; i++) {\n            // @visualize color *nums[i] *nums[i-1] #9542ac\n            // @visualize color *diff[i] #289c2c\n            // 构造差分数组\n            diff[i] = nums[i] - nums[i - 1];\n            // @visualize color *nums[i] *nums[i-1] *diff[i] #unset\n        }\n        this.diff = diff;\n    }\n\n    increment(i, j, val) {\n        // @visualize color *this.diff[i] *this.diff[j+1] #7e???? i\n        // 给闭区间 [i, j] 增加 val（可以是负数）\n        this.diff[i] += val;\n        if (j + 1 < this.diff.length) {\n            this.diff[j + 1] -= val;\n        }\n    }\n\n    result() {\n        let res = new Array(this.diff.length);\n        res[0] = this.diff[0];\n        for (let i = 1; i < this.diff.length; i++) {\n            // 根据差分数组构造结果数组\n            res[i] = res[i - 1] + this.diff[i];\n        }\n        return res;\n    }\n}\n\nlet nums = [1, 1, 1, 1, 1, 1];\n// @visualize hide\nlet df = new Difference(nums);\n// 区间 [1, 3] 增加 2\ndf.increment(1, 3, 2);\n// 区间 [2, 4] 增加 3\ndf.increment(2, 4, 3);\n// 区间 [0, 2] 减 2\ndf.increment(0, 2, -2);\n// 得到最终结果\nlet result = df.result();\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}