{
    "url": "https://labuladong.online/algo-visualize/leetcode/all-paths-from-source-to-target/",
    "title": "所有可能的路径 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: ''\n    } var allPathsSourceTarget = function (graph) {\n    // 记录所有路径\n    let res = [];\n    let path = [];\n\n    // 遍历图的所有路径（不包含环）\n    // @visualize status(s)\n    // @visualize return(path.concat(s))\n    var traverse = function (graph, s) {\n        // 添加节点 s 到路径\n        path.push(s);\n        // @visualize color *graph._v(s) #58d77c\n\n        let n = graph.size();\n        // 点击下面这一行判断语句，即可看到递归搜索的过程\n        if (s === n - 1) {\n            // 到达终点\n            res.push([...path]);\n            // @visualize color *graph._v(s) #unset\n            path.pop();\n            return;\n        }\n\n        // 递归遍历每个相邻节点\n        for (let v of graph.neighbors(s)) {\n            // @visualize color *graph._e(s,v) #58d77c\n            traverse(graph, v);\n            // @visualize color *graph._e(s,v) #unset\n        }\n\n        // 从路径移出节点 s\n        path.pop();\n        // @visualize color *graph._v(s) #unset\n    };\n\n    traverse(graph, 0);\n    return res;\n};\n\nlet graph = Graph.createDirectedGraphFromAdjList(\n    [[4, 3, 1], [3, 2, 4], [3], [4], []]\n);\nlet result = allPathsSourceTarget(graph);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}