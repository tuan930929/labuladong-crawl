{
    "url": "https://labuladong.online/algo-visualize/tutorial/select-sort/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } // 选择排序算法代码实现\nfunction sort(nums) {\n    const n = nums.length;\n    // sortedIndex 是一个分割线\n    // 索引 < sortedIndex 的元素都是已排序的\n    // 索引 >= sortedIndex 的元素都是未排序的\n    // 初始化为 0，表示整个数组都是未排序的\n    let sortedIndex = 0;\n    // @visualize bind nums[sortedIndex]\n    while (sortedIndex < n) {\n        // 找到未排序部分 [sortedIndex, n) 中最小值的索引\n        let minIndex = sortedIndex;\n        // @visualize color nums[minIndex] #8ec7dd\n        for (let i = sortedIndex + 1; i < n; i++) {\n            if (nums[i] < nums[minIndex]) {\n                minIndex = i;\n            }\n        }\n        // 交换最小值和 sortedIndex 处的元素\n        [nums[sortedIndex], nums[minIndex]] = [nums[minIndex], nums[sortedIndex]];\n        // @visualize color *nums[sortedIndex] #7cd930\n\n        // sortedIndex 后移一位\n        sortedIndex++;\n    }\n}\n\nlet nums = [3, 4, 1, 5, 9, 2, 1, 6];\n// @visualize shape nums rect\nsort(nums);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}