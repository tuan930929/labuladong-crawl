{
    "url": "https://labuladong.online/algo-visualize/tutorial/binary-heap-display-array/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } // 创建一个空的小顶堆（堆顶是最小的元素）\nlet minHeap = Heap.createMin();\n\n// 可视化面板以数组的形式显示二叉堆内的元素\nminHeap.showArray(\"_items\");\n\n// 添加若干元素，注意看堆内元素的位置，小顶堆的性质保持不变\nminHeap.push(3);\nminHeap.push(5);\nminHeap.push(1);\nminHeap.push(6);\nminHeap.push(4);\nminHeap.push(9);\nminHeap.push(2);\n\n// 从堆顶删除元素，小顶堆的性质保持不变\n// output: 1 2 3 4 5 6 9\nwhile (minHeap.size() > 0) {\n    console.log(minHeap.pop())\n}\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}