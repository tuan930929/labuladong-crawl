{
    "url": "https://labuladong.online/algo/en/dynamic-programming/two-views-of-dp/",
    "title": "Two Perspectives of Dynamic Programming Enumeration | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Two Perspectives of Dynamic Programming Enumeration</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 4961 words</span><meta property=\"wordCount\" content=\"4961\"></span></div><hr></div> <h1><!---->Two Perspectives of Dynamic Programming Enumeration</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 4961 words</span><meta property=\"wordCount\" content=\"4961\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 4961 words</span><meta property=\"wordCount\" content=\"4961\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 4961 words</span> <meta property=\"wordCount\" content=\"4961\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 115. Distinct Subsequences https://leetcode.com/problems/distinct-subsequences </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a></li></ul></div><p>In this article, we will review a series of problem-solving techniques related to dynamic programming and then focus on discussing the issue of different perspectives during brute-force in dynamic programming.</p><h2 id=\"dynamic-programming-problem-solving-techniques\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#dynamic-programming-problem-solving-techniques\"><span>Dynamic Programming Problem-Solving Techniques</span></a></h2><p>Firstly, as mentioned in <a class=\"route-link\" href=\"/algo/en/essential-technique/algorithm-summary/\">My Algorithm Practice Notes</a>, the essence of algorithm problems we practice is \"brute-force,\" and dynamic programming problems are no exception. You must find a way to exhaust all possible solutions and then filter out the solutions that meet the requirements.</p><p>Moreover, during the brute-force process of dynamic programming problems, overlapping subproblems may lead to redundant calculations. Therefore, the previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Techniques Framework</a> explains how to optimize the brute-force solution into a more efficient dynamic programming solution step by step.</p><p>However, writing a brute-force solution requires a state transition equation, which is the core of solving dynamic programming problems and is not easy to conceive. The previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-increasing-subsequence/\">Dynamic Programming Design: Mathematical Induction</a> guides you on a basic method to think about state transition equations, which is mathematical induction. This involves clearly defining the <code>dp</code> function or array and then using this definition to deduce unknown \"states\" from known \"states.\"</p><p><strong>The focus of this article is the issue that even if the definition of the <code>dp</code> function/array is the same, if you use different \"perspectives\" to perform brute-force, the efficiency may not be the same.</strong></p><p>Regarding the issue of brute-force \"perspectives,\" the previous article <a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a> discussed how different brute-force perspectives in backtracking algorithms lead to different solutions. This perspective shift also exists in dynamic programming problems. The example of permutations in the previous article greatly aids in understanding the issue of brute-force perspectives, and we will briefly mention it here again.</p><h2 class=\"hidden-for-toc\" id=\"two-ways-to-look-at-permutation-problems\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#two-ways-to-look-at-permutation-problems\"><span>Two Ways to Look at Permutation Problems</span></a></h2><h2 class=\"hidden-for-toc\" id=\"example-problem-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example-problem-analysis\"><span>Example Problem Analysis</span></a></h2><h2 class=\"hidden-for-toc\" id=\"perspective-1-brute-force-from-t-s-point-of-view\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#perspective-1-brute-force-from-t-s-point-of-view\"><span>Perspective 1: Brute-force from <code>t</code>'s Point of View</span></a></h2><h2 class=\"hidden-for-toc\" id=\"another-perspective-brute-force-from-s\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#another-perspective-brute-force-from-s\"><span>Another Perspective: Brute-Force from <code>s</code></span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 115. Distinct Subsequences https://leetcode.com/problems/distinct-subsequences </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a></li></ul></div><p>In this article, we will review a series of problem-solving techniques related to dynamic programming and then focus on discussing the issue of different perspectives during brute-force in dynamic programming.</p><h2 id=\"dynamic-programming-problem-solving-techniques\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#dynamic-programming-problem-solving-techniques\"><span>Dynamic Programming Problem-Solving Techniques</span></a></h2><p>Firstly, as mentioned in <a class=\"route-link\" href=\"/algo/en/essential-technique/algorithm-summary/\">My Algorithm Practice Notes</a>, the essence of algorithm problems we practice is \"brute-force,\" and dynamic programming problems are no exception. You must find a way to exhaust all possible solutions and then filter out the solutions that meet the requirements.</p><p>Moreover, during the brute-force process of dynamic programming problems, overlapping subproblems may lead to redundant calculations. Therefore, the previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Techniques Framework</a> explains how to optimize the brute-force solution into a more efficient dynamic programming solution step by step.</p><p>However, writing a brute-force solution requires a state transition equation, which is the core of solving dynamic programming problems and is not easy to conceive. The previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-increasing-subsequence/\">Dynamic Programming Design: Mathematical Induction</a> guides you on a basic method to think about state transition equations, which is mathematical induction. This involves clearly defining the <code>dp</code> function or array and then using this definition to deduce unknown \"states\" from known \"states.\"</p><p><strong>The focus of this article is the issue that even if the definition of the <code>dp</code> function/array is the same, if you use different \"perspectives\" to perform brute-force, the efficiency may not be the same.</strong></p><p>Regarding the issue of brute-force \"perspectives,\" the previous article <a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a> discussed how different brute-force perspectives in backtracking algorithms lead to different solutions. This perspective shift also exists in dynamic programming problems. The example of permutations in the previous article greatly aids in understanding the issue of brute-force perspectives, and we will briefly mention it here again.</p><h2 class=\"hidden-for-toc\" id=\"two-ways-to-look-at-permutation-problems\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#two-ways-to-look-at-permutation-problems\"><span>Two Ways to Look at Permutation Problems</span></a></h2><h2 class=\"hidden-for-toc\" id=\"example-problem-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example-problem-analysis\"><span>Example Problem Analysis</span></a></h2><h2 class=\"hidden-for-toc\" id=\"perspective-1-brute-force-from-t-s-point-of-view\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#perspective-1-brute-force-from-t-s-point-of-view\"><span>Perspective 1: Brute-force from <code>t</code>'s Point of View</span></a></h2><h2 class=\"hidden-for-toc\" id=\"another-perspective-brute-force-from-s\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#another-perspective-brute-force-from-s\"><span>Another Perspective: Brute-Force from <code>s</code></span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 115. Distinct Subsequences https://leetcode.com/problems/distinct-subsequences </h3></div> <h3 tabindex=\"-1\"> 115. Distinct Subsequences https://leetcode.com/problems/distinct-subsequences </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr></tbody></table></div> <p class=\"hint-container-title\">This article will resolve</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">Difficulty</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td><td style=\"text-align:center;\">ðŸ”´</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a></td> <a href=\"https://leetcode.com/problems/distinct-subsequences/\" target=\"_blank\" rel=\"noopener noreferrer\">115. Distinct Subsequences</a> <td style=\"text-align:center;\">ðŸ”´</td> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a></li></ul></div> <p class=\"hint-container-title\">Prerequisites</p> <p>Before reading this article, you should first learn:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Algorithms (Overview)</a> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Framework</a> <li><a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a></li> <a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a> <p>In this article, we will review a series of problem-solving techniques related to dynamic programming and then focus on discussing the issue of different perspectives during brute-force in dynamic programming.</p> <h2 id=\"dynamic-programming-problem-solving-techniques\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#dynamic-programming-problem-solving-techniques\"><span>Dynamic Programming Problem-Solving Techniques</span></a></h2> <a class=\"header-anchor\" href=\"#dynamic-programming-problem-solving-techniques\"><span>Dynamic Programming Problem-Solving Techniques</span></a> <span>Dynamic Programming Problem-Solving Techniques</span> <p>Firstly, as mentioned in <a class=\"route-link\" href=\"/algo/en/essential-technique/algorithm-summary/\">My Algorithm Practice Notes</a>, the essence of algorithm problems we practice is \"brute-force,\" and dynamic programming problems are no exception. You must find a way to exhaust all possible solutions and then filter out the solutions that meet the requirements.</p> <a class=\"route-link\" href=\"/algo/en/essential-technique/algorithm-summary/\">My Algorithm Practice Notes</a> <p>Moreover, during the brute-force process of dynamic programming problems, overlapping subproblems may lead to redundant calculations. Therefore, the previous article <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Techniques Framework</a> explains how to optimize the brute-force solution into a more efficient dynamic programming solution step by step.</p> <a class=\"route-link\" href=\"/algo/en/essential-technique/dynamic-programming-framework/\">Dynamic Programming Core Techniques Framework</a> <p>However, writing a brute-force solution requires a state transition equation, which is the core of solving dynamic programming problems and is not easy to conceive. The previous article <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-increasing-subsequence/\">Dynamic Programming Design: Mathematical Induction</a> guides you on a basic method to think about state transition equations, which is mathematical induction. This involves clearly defining the <code>dp</code> function or array and then using this definition to deduce unknown \"states\" from known \"states.\"</p> <a class=\"route-link\" href=\"/algo/en/dynamic-programming/longest-increasing-subsequence/\">Dynamic Programming Design: Mathematical Induction</a> <code>dp</code> <p><strong>The focus of this article is the issue that even if the definition of the <code>dp</code> function/array is the same, if you use different \"perspectives\" to perform brute-force, the efficiency may not be the same.</strong></p> <strong>The focus of this article is the issue that even if the definition of the <code>dp</code> function/array is the same, if you use different \"perspectives\" to perform brute-force, the efficiency may not be the same.</strong> <code>dp</code> <p>Regarding the issue of brute-force \"perspectives,\" the previous article <a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a> discussed how different brute-force perspectives in backtracking algorithms lead to different solutions. This perspective shift also exists in dynamic programming problems. The example of permutations in the previous article greatly aids in understanding the issue of brute-force perspectives, and we will briefly mention it here again.</p> <a class=\"route-link\" href=\"/algo/en/practice-in-action/two-views-of-backtrack/\">Ball and Box Model: Two Perspectives of Backtracking</a> <h2 class=\"hidden-for-toc\" id=\"two-ways-to-look-at-permutation-problems\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#two-ways-to-look-at-permutation-problems\"><span>Two Ways to Look at Permutation Problems</span></a></h2> <a class=\"header-anchor\" href=\"#two-ways-to-look-at-permutation-problems\"><span>Two Ways to Look at Permutation Problems</span></a> <span>Two Ways to Look at Permutation Problems</span> <h2 class=\"hidden-for-toc\" id=\"example-problem-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example-problem-analysis\"><span>Example Problem Analysis</span></a></h2> <a class=\"header-anchor\" href=\"#example-problem-analysis\"><span>Example Problem Analysis</span></a> <span>Example Problem Analysis</span> <h2 class=\"hidden-for-toc\" id=\"perspective-1-brute-force-from-t-s-point-of-view\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#perspective-1-brute-force-from-t-s-point-of-view\"><span>Perspective 1: Brute-force from <code>t</code>'s Point of View</span></a></h2> <a class=\"header-anchor\" href=\"#perspective-1-brute-force-from-t-s-point-of-view\"><span>Perspective 1: Brute-force from <code>t</code>'s Point of View</span></a> <span>Perspective 1: Brute-force from <code>t</code>'s Point of View</span> <code>t</code> <h2 class=\"hidden-for-toc\" id=\"another-perspective-brute-force-from-s\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#another-perspective-brute-force-from-s\"><span>Another Perspective: Brute-Force from <code>s</code></span></a></h2> <a class=\"header-anchor\" href=\"#another-perspective-brute-force-from-s\"><span>Another Perspective: Brute-Force from <code>s</code></span></a> <span>Another Perspective: Brute-Force from <code>s</code></span> <code>s</code> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/dynamic-programming/memo-fundamental/\" aria-label=\"How to Determine the Base Case and Initial Values for Memoization?\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->How to Determine the Base Case and Initial Values for Memoization?</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/dynamic-programming/word-break/\" aria-label=\"How to Convert Backtracking to Dynamic Programming\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">How to Convert Backtracking to Dynamic Programming<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/dynamic-programming/memo-fundamental/\" aria-label=\"How to Determine the Base Case and Initial Values for Memoization?\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->How to Determine the Base Case and Initial Values for Memoization?</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->How to Determine the Base Case and Initial Values for Memoization?</div> <a class=\"route-link auto-link next\" href=\"/algo/en/dynamic-programming/word-break/\" aria-label=\"How to Convert Backtracking to Dynamic Programming\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">How to Convert Backtracking to Dynamic Programming<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">How to Convert Backtracking to Dynamic Programming<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}