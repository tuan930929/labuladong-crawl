{
    "url": "https://labuladong.online/algo-visualize/leetcode/insert-into-a-binary-search-tree/",
    "title": "二叉搜索树中的插入操作 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var insertIntoBST = function(root, val) {\n    // 找到空位置插入新节点\n    if (root === null) {\n        let newNode = new TreeNode(val);\n        // @visualize color *newNode #259939\n        return newNode;\n    }\n    // if (root.val == val)\n    // BST 中一般不会插入已存在元素\n    if (root.val < val) {\n        root.right = insertIntoBST(root.right, val);\n    }\n    if (root.val > val) {\n        root.left = insertIntoBST(root.left, val);\n    }\n    return root;\n};\n\nlet _allRoot = BTree.createRoot([40,20,60,10,30,50,70]);\nlet result = insertIntoBST(_allRoot, 25);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}