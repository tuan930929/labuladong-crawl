{
    "url": "https://labuladong.online/algo-visualize/leetcode/middle-of-the-linked-list/",
    "title": "链表的中间结点 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var middleNode = function(head) {\n    // 快慢指针初始化指向 head\n    let slow = head, fast = head;\n    // 快指针走到末尾时停止\n    while (fast !== null && fast.next !== null) {\n        // 慢指针走一步，快指针走两步\n        // @visualize color *fast *fast.next #d92e70\n        // @visualize color *slow #4e9c21\n        slow = slow.next;\n        fast = fast.next.next;\n    }\n    // 慢指针指向中点\n    return slow;\n};\n\nlet head = LinkedList.createHead([1,3,5,7,2,4])\nlet result = middleNode(head)\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}