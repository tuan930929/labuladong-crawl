{
    "url": "https://labuladong.online/algo/data-structure-basic/insertion-sort/",
    "title": "运用逆向思维：插入排序 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->运用逆向思维：插入排序</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1715 字</span><meta property=\"wordCount\" content=\"1715\"></span></div><hr></div> <h1><!---->运用逆向思维：插入排序</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1715 字</span><meta property=\"wordCount\" content=\"1715\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1715 字</span><meta property=\"wordCount\" content=\"1715\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 1715 字</span> <meta property=\"wordCount\" content=\"1715\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>插入排序是基于 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序</a> 的一种优化，将 <code>nums[sortedIndex]</code> 插入到左侧的有序数组中。对于有序度较高的数组，插入排序的效率比较高。</p><p>你可以点开可视化面板，点击播放按钮，然后点击加速/减速按钮调节速度，即可直观感受插入排序的过程：</p><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>前文 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a> 中分析了选择排序遇到的几个问题，然后逐步优化写出了 <a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">冒泡排序</a>，使得排序算法具有稳定性，且能够在输入数组的有序度较高时提前终止，提升效率。</p><p>回顾一下，冒泡排序的关键点在于对下面这段代码的优化：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-37-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-37-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_select-sort-with-stability\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><p>为了避免 while 内存在两个 for 循环，我们使用了一种类似冒泡的方式逐步交换 <code>nums[sortedIndex..]</code> 中的逆序对，将最小值换到 <code>nums[sortedIndex]</code> 的位置。</p><p>好的，先停在这一步，让我们忘记冒泡排序的优化方法，你来思考一下，是否还有其他方法能够优化上述代码，把 while 循环中的两个 for 循环优化成一个 for 循环？</p><h2 id=\"反向思维\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%8F%8D%E5%90%91%E6%80%9D%E7%BB%B4\"><span>反向思维</span></a></h2><p>上面的算法思路是：在 <code>nums[sortedIndex..]</code> 中找到最小值，然后将其插入到 <code>nums[sortedIndex]</code> 的位置。</p><p><strong>那么我们能不能反过来想，在 <code>nums[0..sortedIndex-1]</code> 这个部分有序的数组中，找到 <code>nums[sortedIndex]</code> 应该插入的位置，然后进行插入呢</strong>？</p><p>当年我思考如何对插入排序进行优化时，是想到过这个思路的，因为我想利用数组的有序性呀：既然 <code>nums[0..sortedIndex-1]</code> 这部分是已经排好序的，那么我就可以用二分搜索来寻找 <code>nums[sortedIndex]</code> 应该插入的位置。</p><p>这样一来，上述代码中的内层第一个 for 循环，我可以给他优化成对数级别的复杂度。</p><p>但是仔细想想，用二分搜索好像是多此一举的。因为就算我用二分搜索找到了 <code>nums[sortedIndex]</code> 应该插入的位置，我还是需要搬移元素进行插入，那还不如一边遍历一遍交换元素的方法简单高效呢：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-79-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-79-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><div class=\"hint-container info\"><p class=\"hint-container-title\">插入排序</p><p>这个算法的名字叫做<strong>插入排序</strong>，它的执行过程就像是打扑克牌时，将新抓到的牌插入到手中已经排好序的牌中。</p><p>插入排序的空间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，是原地排序算法。时间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，具体的操作次数和选择排序类似，是一个等差数列求和，大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> 次。</p><p>插入排序是一种稳定排序，因为只有在 <code>nums[i] &lt; nums[i - 1]</code> 的情况下才会交换元素，所以相同元素的相对位置不会发生改变。</p></div><h2 id=\"初始有序度越高-效率越高\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%88%9D%E5%A7%8B%E6%9C%89%E5%BA%8F%E5%BA%A6%E8%B6%8A%E9%AB%98-%E6%95%88%E7%8E%87%E8%B6%8A%E9%AB%98\"><span>初始有序度越高，效率越高</span></a></h2><p>显然，插入排序的效率和输入数组的有序度有很大关系，可以举极端例子来理解：</p><p>如果输入数组已经有序，或者仅有个别元素逆序，那么插入排序的内层 for 循环几乎不需要执行元素交换，所以时间复杂度接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。</p><p>如果输入的数组是完全逆序的，那么插入排序的效率就会很低，内层 for 循环每次都要对 <code>nums[0..sortedIndex-1]</code> 的所有元素进行交换，算法的总时间复杂度就接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p><p>如果对比插入排序和冒泡排序，<strong>插入排序的综合性能应该要高于冒泡排序</strong>。</p><p>直观地说，插入排序的内层 for 循环，只需要对 <code>sortedIndex</code> 左侧 <code>nums[0..sortedIndex-1]</code> 这部分有序数组进行遍历和元素交换，大部分非极端情况下，可能不需要遍历完 <code>nums[0..sortedIndex-1]</code> 的所有元素；而冒泡排序的内层 for 循环，每次都需要遍历<code>sortedIndex</code> 右侧 <code>nums[sortedIndex..]</code> 的所有元素。</p><p>所以冒泡排序的操作数大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>，而插入排序的操作数会小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>。</p><p>你可以把插入排序的代码拿去力扣第 912 题「<a href=\"https://leetcode.cn/problems/sort-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">排序数组</a>」提交，它最终依然会超时，但可以说明算法代码的逻辑是正确的。之后的文章我们继续探讨如何对排序算法进行优化。</p></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>插入排序是基于 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序</a> 的一种优化，将 <code>nums[sortedIndex]</code> 插入到左侧的有序数组中。对于有序度较高的数组，插入排序的效率比较高。</p><p>你可以点开可视化面板，点击播放按钮，然后点击加速/减速按钮调节速度，即可直观感受插入排序的过程：</p><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>前文 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a> 中分析了选择排序遇到的几个问题，然后逐步优化写出了 <a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">冒泡排序</a>，使得排序算法具有稳定性，且能够在输入数组的有序度较高时提前终止，提升效率。</p><p>回顾一下，冒泡排序的关键点在于对下面这段代码的优化：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-37-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-37-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_select-sort-with-stability\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><p>为了避免 while 内存在两个 for 循环，我们使用了一种类似冒泡的方式逐步交换 <code>nums[sortedIndex..]</code> 中的逆序对，将最小值换到 <code>nums[sortedIndex]</code> 的位置。</p><p>好的，先停在这一步，让我们忘记冒泡排序的优化方法，你来思考一下，是否还有其他方法能够优化上述代码，把 while 循环中的两个 for 循环优化成一个 for 循环？</p><h2 id=\"反向思维\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%8F%8D%E5%90%91%E6%80%9D%E7%BB%B4\"><span>反向思维</span></a></h2><p>上面的算法思路是：在 <code>nums[sortedIndex..]</code> 中找到最小值，然后将其插入到 <code>nums[sortedIndex]</code> 的位置。</p><p><strong>那么我们能不能反过来想，在 <code>nums[0..sortedIndex-1]</code> 这个部分有序的数组中，找到 <code>nums[sortedIndex]</code> 应该插入的位置，然后进行插入呢</strong>？</p><p>当年我思考如何对插入排序进行优化时，是想到过这个思路的，因为我想利用数组的有序性呀：既然 <code>nums[0..sortedIndex-1]</code> 这部分是已经排好序的，那么我就可以用二分搜索来寻找 <code>nums[sortedIndex]</code> 应该插入的位置。</p><p>这样一来，上述代码中的内层第一个 for 循环，我可以给他优化成对数级别的复杂度。</p><p>但是仔细想想，用二分搜索好像是多此一举的。因为就算我用二分搜索找到了 <code>nums[sortedIndex]</code> 应该插入的位置，我还是需要搬移元素进行插入，那还不如一边遍历一遍交换元素的方法简单高效呢：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-79-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-79-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><div class=\"hint-container info\"><p class=\"hint-container-title\">插入排序</p><p>这个算法的名字叫做<strong>插入排序</strong>，它的执行过程就像是打扑克牌时，将新抓到的牌插入到手中已经排好序的牌中。</p><p>插入排序的空间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，是原地排序算法。时间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，具体的操作次数和选择排序类似，是一个等差数列求和，大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> 次。</p><p>插入排序是一种稳定排序，因为只有在 <code>nums[i] &lt; nums[i - 1]</code> 的情况下才会交换元素，所以相同元素的相对位置不会发生改变。</p></div><h2 id=\"初始有序度越高-效率越高\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%88%9D%E5%A7%8B%E6%9C%89%E5%BA%8F%E5%BA%A6%E8%B6%8A%E9%AB%98-%E6%95%88%E7%8E%87%E8%B6%8A%E9%AB%98\"><span>初始有序度越高，效率越高</span></a></h2><p>显然，插入排序的效率和输入数组的有序度有很大关系，可以举极端例子来理解：</p><p>如果输入数组已经有序，或者仅有个别元素逆序，那么插入排序的内层 for 循环几乎不需要执行元素交换，所以时间复杂度接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。</p><p>如果输入的数组是完全逆序的，那么插入排序的效率就会很低，内层 for 循环每次都要对 <code>nums[0..sortedIndex-1]</code> 的所有元素进行交换，算法的总时间复杂度就接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p><p>如果对比插入排序和冒泡排序，<strong>插入排序的综合性能应该要高于冒泡排序</strong>。</p><p>直观地说，插入排序的内层 for 循环，只需要对 <code>sortedIndex</code> 左侧 <code>nums[0..sortedIndex-1]</code> 这部分有序数组进行遍历和元素交换，大部分非极端情况下，可能不需要遍历完 <code>nums[0..sortedIndex-1]</code> 的所有元素；而冒泡排序的内层 for 循环，每次都需要遍历<code>sortedIndex</code> 右侧 <code>nums[sortedIndex..]</code> 的所有元素。</p><p>所以冒泡排序的操作数大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>，而插入排序的操作数会小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>。</p><p>你可以把插入排序的代码拿去力扣第 912 题「<a href=\"https://leetcode.cn/problems/sort-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">排序数组</a>」提交，它最终依然会超时，但可以说明算法代码的逻辑是正确的。之后的文章我们继续探讨如何对排序算法进行优化。</p></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组的增删查改操作</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">拥有稳定性：冒泡排序</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>插入排序是基于 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序</a> 的一种优化，将 <code>nums[sortedIndex]</code> 插入到左侧的有序数组中。对于有序度较高的数组，插入排序的效率比较高。</p><p>你可以点开可视化面板，点击播放按钮，然后点击加速/减速按钮调节速度，即可直观感受插入排序的过程：</p><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div> <p class=\"hint-container-title\">一句话总结</p> <p>插入排序是基于 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序</a> 的一种优化，将 <code>nums[sortedIndex]</code> 插入到左侧的有序数组中。对于有序度较高的数组，插入排序的效率比较高。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序</a> <code>nums[sortedIndex]</code> <p>你可以点开可视化面板，点击播放按钮，然后点击加速/减速按钮调节速度，即可直观感受插入排序的过程：</p> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>算法可视化面板</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <p>前文 <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a> 中分析了选择排序遇到的几个问题，然后逐步优化写出了 <a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">冒泡排序</a>，使得排序算法具有稳定性，且能够在输入数组的有序度较高时提前终止，提升效率。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/select-sort/\">选择排序所面临的问题</a> <a class=\"route-link\" href=\"/algo/data-structure-basic/bubble-sort/\">冒泡排序</a> <p>回顾一下，冒泡排序的关键点在于对下面这段代码的优化：</p> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-37-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-37-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-37-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-37-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-37-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-37-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-37-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[minIndex]) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 交换最小值和 sortedIndex 处的元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // int tmp = nums[sortedIndex];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[sortedIndex] = nums[minIndex];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // nums[minIndex] = tmp;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[minIndex];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = minIndex; i &gt; sortedIndex; i--) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-37-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minIndex = sortedIndex;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex]) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> minVal = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[minIndex];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = minIndex; i &gt; sortedIndex; i--) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[sortedIndex] = minVal;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-37-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进行第一波优化，获得了稳定性</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sortedIndex = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex &lt; n:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 在未排序部分中找到最小值 nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minIndex = sortedIndex</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sortedIndex + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[minIndex]:</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                minIndex = i</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        minVal = nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 数组搬移数据的操作</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(minIndex, sortedIndex, -</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            nums[i] = nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        nums[sortedIndex] = minVal</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex += </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-37-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        minVal</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-37-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进行第一波优化，获得了稳定性</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 在未排序部分中找到最小值 nums[minIndex]</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 优化：将 nums[minIndex] 插入到 nums[sortedIndex] 的位置</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex..minIndex] 的元素整体向后移动一位</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> minVal</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 数组搬移数据的操作</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">minVal</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_select-sort-with-stability\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details open id=\"div_select-sort-with-stability\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>算法可视化面板</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_select-sort-with-stability\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <p>为了避免 while 内存在两个 for 循环，我们使用了一种类似冒泡的方式逐步交换 <code>nums[sortedIndex..]</code> 中的逆序对，将最小值换到 <code>nums[sortedIndex]</code> 的位置。</p> <code>nums[sortedIndex..]</code> <code>nums[sortedIndex]</code> <p>好的，先停在这一步，让我们忘记冒泡排序的优化方法，你来思考一下，是否还有其他方法能够优化上述代码，把 while 循环中的两个 for 循环优化成一个 for 循环？</p> <h2 id=\"反向思维\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%8F%8D%E5%90%91%E6%80%9D%E7%BB%B4\"><span>反向思维</span></a></h2> <a class=\"header-anchor\" href=\"#%E5%8F%8D%E5%90%91%E6%80%9D%E7%BB%B4\"><span>反向思维</span></a> <span>反向思维</span> <p>上面的算法思路是：在 <code>nums[sortedIndex..]</code> 中找到最小值，然后将其插入到 <code>nums[sortedIndex]</code> 的位置。</p> <code>nums[sortedIndex..]</code> <code>nums[sortedIndex]</code> <p><strong>那么我们能不能反过来想，在 <code>nums[0..sortedIndex-1]</code> 这个部分有序的数组中，找到 <code>nums[sortedIndex]</code> 应该插入的位置，然后进行插入呢</strong>？</p> <strong>那么我们能不能反过来想，在 <code>nums[0..sortedIndex-1]</code> 这个部分有序的数组中，找到 <code>nums[sortedIndex]</code> 应该插入的位置，然后进行插入呢</strong> <code>nums[0..sortedIndex-1]</code> <code>nums[sortedIndex]</code> <p>当年我思考如何对插入排序进行优化时，是想到过这个思路的，因为我想利用数组的有序性呀：既然 <code>nums[0..sortedIndex-1]</code> 这部分是已经排好序的，那么我就可以用二分搜索来寻找 <code>nums[sortedIndex]</code> 应该插入的位置。</p> <code>nums[0..sortedIndex-1]</code> <code>nums[sortedIndex]</code> <p>这样一来，上述代码中的内层第一个 for 循环，我可以给他优化成对数级别的复杂度。</p> <p>但是仔细想想，用二分搜索好像是多此一举的。因为就算我用二分搜索找到了 <code>nums[sortedIndex]</code> 应该插入的位置，我还是需要搬移元素进行插入，那还不如一边遍历一遍交换元素的方法简单高效呢：</p> <code>nums[sortedIndex]</code> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-79-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-79-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-79-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-79-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-79-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-79-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-79-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = sortedIndex; i &gt; </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (nums[i] &lt; nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">                int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = nums[i];</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-79-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">size</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">();</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sortedIndex = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (sortedIndex &lt; n) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = sortedIndex; i &gt; </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i--) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> tmp = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i];</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sortedIndex++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-79-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 对选择排序进一步优化，向左侧有序数组中插入元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 这个算法有另一个名字，叫做插入排序</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    n = </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(nums)</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    # 维护 [0, sorted_index) 是有序数组</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    sorted_index = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> sorted_index &lt; n:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将 nums[sorted_index] 插入到有序数组 [0, sorted_index) 中</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(sorted_index, </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, -</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> nums[i] &lt; nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # swap(nums[i], nums[i - 1])</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                tmp = nums[i]</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i] = nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                nums[i - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = tmp</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            else</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        sorted_index += </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-79-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">len</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-- {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                tmp</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">-</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-79-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 对选择排序进一步优化，向左侧有序数组中插入元素</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 这个算法有另一个名字，叫做插入排序</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 维护 [0, sortedIndex) 是有序数组</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    while</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将 nums[sortedIndex] 插入到有序数组 [0, sortedIndex) 中</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &gt; </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">--) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // swap(nums[i], nums[i - 1])</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">                let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> tmp</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> - </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            } </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">else</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                break</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        sortedIndex</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details open id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details open id=\"div_insertion-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>算法可视化面板</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_insertion-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <div class=\"hint-container info\"><p class=\"hint-container-title\">插入排序</p><p>这个算法的名字叫做<strong>插入排序</strong>，它的执行过程就像是打扑克牌时，将新抓到的牌插入到手中已经排好序的牌中。</p><p>插入排序的空间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，是原地排序算法。时间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，具体的操作次数和选择排序类似，是一个等差数列求和，大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> 次。</p><p>插入排序是一种稳定排序，因为只有在 <code>nums[i] &lt; nums[i - 1]</code> 的情况下才会交换元素，所以相同元素的相对位置不会发生改变。</p></div> <p class=\"hint-container-title\">插入排序</p> <p>这个算法的名字叫做<strong>插入排序</strong>，它的执行过程就像是打扑克牌时，将新抓到的牌插入到手中已经排好序的牌中。</p> <strong>插入排序</strong> <p>插入排序的空间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，是原地排序算法。时间复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，具体的操作次数和选择排序类似，是一个等差数列求和，大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> 次。</p> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <mn>1</mn> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(1)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord\">1</span> <span class=\"mclose\">)</span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <msup><mi>n</mi><mn>2</mn></msup> <mi>n</mi> <mn>2</mn> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(n^2)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\">n</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mclose\">)</span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math> <semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics> <mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow> <msup><mi>n</mi><mn>2</mn></msup> <mi>n</mi> <mn>2</mn> <mi mathvariant=\"normal\">/</mi> <mn>2</mn> <annotation encoding=\"application/x-tex\">n^2/2</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\">n</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mord\">/2</span> <p>插入排序是一种稳定排序，因为只有在 <code>nums[i] &lt; nums[i - 1]</code> 的情况下才会交换元素，所以相同元素的相对位置不会发生改变。</p> <code>nums[i] &lt; nums[i - 1]</code> <h2 id=\"初始有序度越高-效率越高\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%88%9D%E5%A7%8B%E6%9C%89%E5%BA%8F%E5%BA%A6%E8%B6%8A%E9%AB%98-%E6%95%88%E7%8E%87%E8%B6%8A%E9%AB%98\"><span>初始有序度越高，效率越高</span></a></h2> <a class=\"header-anchor\" href=\"#%E5%88%9D%E5%A7%8B%E6%9C%89%E5%BA%8F%E5%BA%A6%E8%B6%8A%E9%AB%98-%E6%95%88%E7%8E%87%E8%B6%8A%E9%AB%98\"><span>初始有序度越高，效率越高</span></a> <span>初始有序度越高，效率越高</span> <p>显然，插入排序的效率和输入数组的有序度有很大关系，可以举极端例子来理解：</p> <p>如果输入数组已经有序，或者仅有个别元素逆序，那么插入排序的内层 for 循环几乎不需要执行元素交换，所以时间复杂度接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。</p> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <mi>n</mi> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(n)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord mathnormal\">n</span> <span class=\"mclose\">)</span> <p>如果输入的数组是完全逆序的，那么插入排序的效率就会很低，内层 for 循环每次都要对 <code>nums[0..sortedIndex-1]</code> 的所有元素进行交换，算法的总时间复杂度就接近 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p> <code>nums[0..sortedIndex-1]</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <msup><mi>n</mi><mn>2</mn></msup> <mi>n</mi> <mn>2</mn> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(n^2)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\">n</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mclose\">)</span> <p>如果对比插入排序和冒泡排序，<strong>插入排序的综合性能应该要高于冒泡排序</strong>。</p> <strong>插入排序的综合性能应该要高于冒泡排序</strong> <p>直观地说，插入排序的内层 for 循环，只需要对 <code>sortedIndex</code> 左侧 <code>nums[0..sortedIndex-1]</code> 这部分有序数组进行遍历和元素交换，大部分非极端情况下，可能不需要遍历完 <code>nums[0..sortedIndex-1]</code> 的所有元素；而冒泡排序的内层 for 循环，每次都需要遍历<code>sortedIndex</code> 右侧 <code>nums[sortedIndex..]</code> 的所有元素。</p> <code>sortedIndex</code> <code>nums[0..sortedIndex-1]</code> <code>nums[0..sortedIndex-1]</code> <code>sortedIndex</code> <code>nums[sortedIndex..]</code> <p>所以冒泡排序的操作数大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>，而插入排序的操作数会小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span>。</p> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math> <semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics> <mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow> <msup><mi>n</mi><mn>2</mn></msup> <mi>n</mi> <mn>2</mn> <mi mathvariant=\"normal\">/</mi> <mn>2</mn> <annotation encoding=\"application/x-tex\">n^2/2</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\">n</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mord\">/2</span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics></math> <semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n^2/2</annotation></semantics> <mrow><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow> <msup><mi>n</mi><mn>2</mn></msup> <mi>n</mi> <mn>2</mn> <mi mathvariant=\"normal\">/</mi> <mn>2</mn> <annotation encoding=\"application/x-tex\">n^2/2</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/2</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\">n</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mord\">/2</span> <p>你可以把插入排序的代码拿去力扣第 912 题「<a href=\"https://leetcode.cn/problems/sort-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">排序数组</a>」提交，它最终依然会超时，但可以说明算法代码的逻辑是正确的。之后的文章我们继续探讨如何对排序算法进行优化。</p> <a href=\"https://leetcode.cn/problems/sort-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">排序数组</a> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/data-structure-basic/bubble-sort/\" aria-label=\"拥有稳定性：冒泡排序\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->拥有稳定性：冒泡排序</div></a><a class=\"route-link auto-link next\" href=\"/algo/data-structure-basic/shell-sort/\" aria-label=\"突破 O(N^2)：希尔排序\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">突破 O(N^2)：希尔排序<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/data-structure-basic/bubble-sort/\" aria-label=\"拥有稳定性：冒泡排序\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->拥有稳定性：冒泡排序</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->拥有稳定性：冒泡排序</div> <a class=\"route-link auto-link next\" href=\"/algo/data-structure-basic/shell-sort/\" aria-label=\"突破 O(N^2)：希尔排序\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">突破 O(N^2)：希尔排序<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">突破 O(N^2)：希尔排序<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}