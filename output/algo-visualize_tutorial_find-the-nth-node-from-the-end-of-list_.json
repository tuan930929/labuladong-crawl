{
    "url": "https://labuladong.online/algo-visualize/tutorial/find-the-nth-node-from-the-end-of-list/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: 'H4sIAOI5UWgC/91aW28cSRX+K83wkrDjTd97esNKOI4TDI6zcpwF5ERWX2p6erq7uqcvc4sshQXEahXBkgWBWEACCe0KLSgvwPICf2ady7/YU9XdNV0z4/HYxC/xS4/PqXOp71zqdM08amU5SrLWO8Lho1Y+SRB8ar23f/f2/uadVltoZU5MaYe4CMO2ID4E2tAKC7ruyO/1ejJZ5rv0f6crIktvHbeFR0slawPbP3xvf/vevZ27e0QYWxFdqBtaW9A7Hd7G0ZFjW0OrYUWzHcl1zraytbm7y+nXFKLfnNdvZ8MMNfSjjtKRpFJ/revm9tbu5v7mQeXy0Er3Sq2tHrLc05Cyw9gJgJanBWo6ourgiCae6oht5U6Pj8mt+3tbnBmxLUhEQbfATu1L18furTSOtjF1ibB2blLlue7phGSlXhEhnNOIM9+D1rK4Hj+cYWJopqlbF8akdvYUQEwIvHlmXBxd0e214xKcxwFJlGCBKDddkGeWFUs13c66lhPpXKYlFRZI+nmS4cbu3a3vc0bAffmsGOqS7braurvwl+o/bRMmlJZkqk0XxJllVZJFzZyr2Frl6qYgi6AHpJuaK+NrAQNRVJcC00Rh6+7u3X0i5sRhnBLKNxXJNJFKiwNNCEWW5Q1ZU2gROQ7Ksvk4LQavCb7cMQw0l7y3tw+IYGz3kZPPq5sZwWiczxuYeuMJ5nDSDcDJUBsmu3anqyHe5CYAfHvvzvbewSkozWXxTL3M1C/1o84xU7NccS2bs5Tlc24WebIjieuS0sySKCuu+obmFEN1EerFnDpaI6uYwtVZ5em2FayVVfNGX3deMU+4vFrT6kUyq9HtjY5maOpry6yuFWaokbcSEhV97bNEPs9ZIpvEvCn/32eJctZZ0rVUtZ4HFgRXY6SKcFaoknrR6gNp7SLVV+AM5Y3iU2V9Q9X0czX08xa4qmsbqrlog6X3Ys5zJ7Yr2q5yeYeGJkG+aJKxWN7yWoU2C8VcwjIDosYMrDo2zK5oKe7ZG2W4rd5ogAZjl/NDgfrWFHNxo8qFN8r1MU02mIGlntS9xVFVy3kj62bVofW66obBuYjxYt1c5sF4euWol1s58wdjWTnrbJVhd9ZWe0q8Xu1ol1s7zBOuduqtvmHVs+pEeH2nTgXoIspLqke+xHZ8avXol1s98+24qp61tlpht3qrSRH18XrVY1xu9TBP+OqR38jqWXUuvK7qYYAuorykepRLbMinVk/nss8eviFX1bPGVhl2q7bKbpPPrh3zMmtn/la7qhzltVXO3BshQropztXCzft37vzoaH/74P7+3tI3QHaXLHfagq50zoqV0jHtrnbKO+AKO+e7Xr6gV8cPz32Zb4hqWzBk9SwL5WX+0drXxinKijA/74U+ucA2ROnMCcZ2UUcr20VZH6QUHs2+5CD/iNU9l1TdSsjwhBxqKfCEPbdUeIK5lgZPHZ4hwl5OAqrDFmfFRlSBL9UiWm1ccrMO2KrESmdnYlpTrFHCC4JlH5sJqrwgA2GJRTI+zAQVXpD1xwXBcmqfCcrzFquxZEGwfFGeCUq8IHsbWBCceIOOysJDr8XKABlqMwRytdw1e3qw/vKJHMSz5bS/0+XQg5cuH/lBNFtOumS5XDGXLQ9cZDjra+9qg4G9vvYkQO5wfe3DTqx21tfeH+jhZH3toSl1jHW0H1etpaq/1OtHOol3gV0EbQ7RvKuKhRxW0AIoJZK9ISnE1p5FO8dRPxJ7BNzWDgY5P59Q6igPMo9QNzgy/OXFNC0Ixwtj2wprsjWIx6T8W+/705pmW5NpVvakQeGnqKYXHalXLOnHhOcN8DQhvLvl8VuRp+M0HdKvEaFn536Ma8YoST26fjNNLeZkrPs9m+6yiGyU1uSxgiORnqJWmqFbYWwxA2Gkqz3G2sGMYUvDpEuHwjgOkcUMR1bfHxH6vTz1scf8GYaY9sp7k8iOGTyZaqg0PjetnOGQBZ6N6ffVgIGfMXqeaB4Ffx952+OkJidJ2qeR2k7TmO1ppDsmHfs2PS9FHqjn2LFldUshaBgcJ59OAo1asbDHC2X2sOeXDnRRirDDs6GvReXWJzi3xhyvP5g6U8I7gOTkOInXTygy9/d3OMa42/dpOnzvXnmaURu9wKZxvWNBxlfEruyhsMzVnEHrhFjJWAbcKLrdWcCHql+eips5IOxkNd3viQ5Np/s+zjtc6iA1dY3KBs9J+thwayFJ53iDwBelSmqOZaEsmNRiisyLDYZBbWyO1R1hiwJA03SOmeaipjOmrnLMTMZ4yja3FVpRglxuRaRoI9oEbvgeWTSnYKB7rl2xdxa4vTyX1CqVrfd9NKoZrplodhkylrNpoWsNVSz3cNqlx9M9xGjJ2OpRCH+ArKChYqqNFbumN9ZnRR5Pq+oZM++gjEyjSt2w0UD6uifS1bd8bIX+1CJNBOrLz/J0tvEkHqPaFChgO5Mwou66yIldBAnMgjuVxhrH2YqjJMZottdpEEs0vaGOeOFo4Igqx1kQDjJXog0cZY6VsA7h9bCTlO2eZ4xiJyuNDWe9eZRYmCLoZ7dIL2erp0NTHJaM+jgg9agXBs0OJ8YZ9LyajvNMGdOg9ay0yii+3Eai1emX+NmbWYYiO6yxrcdDrk/Xgx45NN7ehVDsAQwtfppbxqsHtuVy5Uy2jFePXct49WS1jFcPT5zz9YjEEetBiCdW4w5HrIcajliPLjxK1YDCEesxhCPWwwZHrEeKinjMRvcdGBXGdHyQ6I9pWJQeVkP7IffVTHO8bM6ozUG3OS2z+BJ1Zq2uhJKQJKWmlUhS2mwdBZJ6wrwrcaQ0taaVMFKaXtNKFCmN6StBJDSF6SsxpDSmr4SQ0pi+EkHyitcidUqwvHZNmPbeEV7+79cnn/7p1Sf/ffnnz1/8/qcnj58+/82zF198IQTCV1/+7eVHH7z44D8PMCxG+B0hRXmRYiHvISHIewIGVUIXTn5KQdgV4i79GELyPcDdatARGkPSFfK7pLYQXBUePcAC/IUoFxJJeFcgjOslrXINyCc/+/DlP5+BL8///lfGI54AL4qHKAMW/fUc2EiJTbKkG6fCFaLXB7XidXh8Wwjg8dZbzGql6TtDPytIL0UCfd0QvgV6q+uo2ULqXiK9Td5SKg+PG87Lpzr/9Anhnnz85Plv/0W2gYWN5VuxADpYSXYk5LGHAMNUKHDuh4SbIsvpwVYrkEvhUc8PkXAF2N94912BDMdrbE4Wyuu8i4BAtpnITRBWY1PjIAsvfvHs5A+fP3/y85OPf0Uyq4ShkV1NMGTIqpGQxHCmw45juukrVOJqlXHl+ioVExmsgsUHmMSChAH82fUx1ArpgG87AF6Ovgv0K4dSW24rbbWttfWHV6+XEuVdA8gs5qh89Xr5HhqRX+uRSiI3MjK5YTiU4a3GIFdPh5IMrzWSqtHPGrmyMcxVdJmIyhqVVcgln6JQjYqiw2dTWkXXNHhZ1gydfu7AZ12melQZ1qgapas6yKqmfup60hhS5BRpBqVJ3kV2yDl0SMgQw7S8AInc6nbKz0PaLU5++QQC+Orph88/enzy789efPb0+R8ff/XlT179+JOyd7z6y+9efPoPAhiVOUL0lDoYxcJ7JJaQzwfI6WF/UEAmkwotgySQKAkw/9ghiuhwm6A0gmzE9Ay6huAMhjqwwo28Fr8WUskN0mQ2ssAPw2wjK6LISifXynudjAwIZBsOxN6LU3qg5DBspaCodXx8/DU8Qd/QcysAAA=='\n    } // 返回链表的倒数第 k 个节点\nfunction findFromEnd(head, k) {\n    let p1 = head;\n    // p1 先走 k 步\n    for (let i = 0; i < k; i++) {\n        // @visualize color *p1 #3199e4\n        p1 = p1.next;\n    }\n    let p2 = head;\n    // p1 和 p2 同时走 n - k 步\n    while (p1 !== null) {\n        // @visualize color *p2 #unset\n        // @visualize color *p1 #3199e4\n        p2 = p2.next;\n        p1 = p1.next;\n    }\n    // p2 现在指向第 n - k 个节点\n    return p2;\n}\n\nlet head = LinkedList.createHead([1,2,3,4,5,6]);\nlet result = findFromEnd(head, 2);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}