{
    "url": "https://labuladong.online/algo/data-structure-basic/sort-basic/",
    "title": "排序算法的关键指标 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->排序算法的关键指标</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 860 字</span><meta property=\"wordCount\" content=\"860\"></span></div><hr></div> <h1><!---->排序算法的关键指标</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 860 字</span><meta property=\"wordCount\" content=\"860\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 860 字</span><meta property=\"wordCount\" content=\"860\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 860 字</span> <meta property=\"wordCount\" content=\"860\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li><li><a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a></li></ul></div><p>一般刷题和面试/笔试的时候不会直接让你手撕排序算法，不过考虑到知识的完整性，我这里还是开一个章节，结合 <a class=\"route-link\" href=\"/algo/intro/visualize/\">可视化面板</a> 讲解几种常见排序算法的原理、特点、时间复杂度和代码实现。</p><p>本文先介绍一下排序算法的几个关键指标，后面讲解到具体的排序算法时，都会根据这些指标来分析。</p><h2 id=\"时空复杂度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6\"><span>时空复杂度</span></a></h2><p>首先一个指标肯定是时间复杂度和空间复杂度。</p><p>正如 <a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a> 中所说，对于任意一个算法，其时间复杂度和空间复杂度都是越小越好的。</p><h2 id=\"排序稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>排序稳定性</span></a></h2><p>稳定性是排序算法的一个重要性质，我们可以简单总结为：</p><p><strong>对于序列中的相同元素，如果排序之后它们的相对位置没有发生改变，则称该排序算法为「稳定排序」，反之则为「不稳定排序」</strong>。</p><p>如果单单排序 int 数组，那么稳定性没有什么意义。但如果排序一些结构比较复杂的数据，那么稳定排序就会有一定的优势。</p><p>比如说现在你有若干订单数据，已经按照交易日期排好序了，现在你想对用户 ID 再进行排序，这样一来相同用户 ID 的订单就会聚集在一起，方便查看。稳定排序和不稳定排序的区别就体现在这里：</p><p><strong>如果你用稳定排序算法</strong>，那么排序完成后，相同用户 ID 的订单依然会按照交易日期有序排列：</p><div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>   Date    UserID</span></span>\n<span class=\"line\"><span>2020-02-01  1001</span></span>\n<span class=\"line\"><span>2020-02-02  1001</span></span>\n<span class=\"line\"><span>2020-02-03  1001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>2020-01-01  1002</span></span>\n<span class=\"line\"><span>2020-01-02  1002</span></span>\n<span class=\"line\"><span>2020-01-03  1002</span></span>\n<span class=\"line\"><span>...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>因为之前已经按照日期排好序了，对用户 ID 稳定排序之后，相同用户 ID 的订单的相对位置保持不变，所以在日期上依然是有序的。</p><p><strong>如果你用不稳定排序算法</strong>，相同用户 ID 的订单相对位置可能变化，所以对于相同用户 ID 的订单，交易日期的有序性会丧失，相当于你之前对日期的排序白做了。</p><p>可以看到，稳定性是个很重要的性质，所以你在使用排序算法时要特别注意，避免出现预期之外的结果。</p><h2 id=\"是否原地排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%98%AF%E5%90%A6%E5%8E%9F%E5%9C%B0%E6%8E%92%E5%BA%8F\"><span>是否原地排序</span></a></h2><p><strong>原地排序就是指排序过程中不需要额外的辅助空间，只需要常数级别的额外空间，直接操作原数组进行排序</strong>。</p><p>注意，关键是是否需要额外的空间，而不是是否返回一个新的数组。具体来说就是类似这样的区别：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>不难想到，对于大数据量的排序，原地排序算法是比较有优势的。</p><p>排序算法的几个关键指标就是这些，后面我会介绍几种常见的排序算法，都会根据这些指标来分析它们的优劣。</p></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li><li><a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a></li></ul></div><p>一般刷题和面试/笔试的时候不会直接让你手撕排序算法，不过考虑到知识的完整性，我这里还是开一个章节，结合 <a class=\"route-link\" href=\"/algo/intro/visualize/\">可视化面板</a> 讲解几种常见排序算法的原理、特点、时间复杂度和代码实现。</p><p>本文先介绍一下排序算法的几个关键指标，后面讲解到具体的排序算法时，都会根据这些指标来分析。</p><h2 id=\"时空复杂度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6\"><span>时空复杂度</span></a></h2><p>首先一个指标肯定是时间复杂度和空间复杂度。</p><p>正如 <a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a> 中所说，对于任意一个算法，其时间复杂度和空间复杂度都是越小越好的。</p><h2 id=\"排序稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>排序稳定性</span></a></h2><p>稳定性是排序算法的一个重要性质，我们可以简单总结为：</p><p><strong>对于序列中的相同元素，如果排序之后它们的相对位置没有发生改变，则称该排序算法为「稳定排序」，反之则为「不稳定排序」</strong>。</p><p>如果单单排序 int 数组，那么稳定性没有什么意义。但如果排序一些结构比较复杂的数据，那么稳定排序就会有一定的优势。</p><p>比如说现在你有若干订单数据，已经按照交易日期排好序了，现在你想对用户 ID 再进行排序，这样一来相同用户 ID 的订单就会聚集在一起，方便查看。稳定排序和不稳定排序的区别就体现在这里：</p><p><strong>如果你用稳定排序算法</strong>，那么排序完成后，相同用户 ID 的订单依然会按照交易日期有序排列：</p><div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>   Date    UserID</span></span>\n<span class=\"line\"><span>2020-02-01  1001</span></span>\n<span class=\"line\"><span>2020-02-02  1001</span></span>\n<span class=\"line\"><span>2020-02-03  1001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>2020-01-01  1002</span></span>\n<span class=\"line\"><span>2020-01-02  1002</span></span>\n<span class=\"line\"><span>2020-01-03  1002</span></span>\n<span class=\"line\"><span>...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>因为之前已经按照日期排好序了，对用户 ID 稳定排序之后，相同用户 ID 的订单的相对位置保持不变，所以在日期上依然是有序的。</p><p><strong>如果你用不稳定排序算法</strong>，相同用户 ID 的订单相对位置可能变化，所以对于相同用户 ID 的订单，交易日期的有序性会丧失，相当于你之前对日期的排序白做了。</p><p>可以看到，稳定性是个很重要的性质，所以你在使用排序算法时要特别注意，避免出现预期之外的结果。</p><h2 id=\"是否原地排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%98%AF%E5%90%A6%E5%8E%9F%E5%9C%B0%E6%8E%92%E5%BA%8F\"><span>是否原地排序</span></a></h2><p><strong>原地排序就是指排序过程中不需要额外的辅助空间，只需要常数级别的额外空间，直接操作原数组进行排序</strong>。</p><p>注意，关键是是否需要额外的空间，而不是是否返回一个新的数组。具体来说就是类似这样的区别：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>不难想到，对于大数据量的排序，原地排序算法是比较有优势的。</p><p>排序算法的几个关键指标就是这些，后面我会介绍几种常见的排序算法，都会根据这些指标来分析它们的优劣。</p></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li><li><a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li><li><a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a> <li><a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a></li> <a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a> <p>一般刷题和面试/笔试的时候不会直接让你手撕排序算法，不过考虑到知识的完整性，我这里还是开一个章节，结合 <a class=\"route-link\" href=\"/algo/intro/visualize/\">可视化面板</a> 讲解几种常见排序算法的原理、特点、时间复杂度和代码实现。</p> <a class=\"route-link\" href=\"/algo/intro/visualize/\">可视化面板</a> <p>本文先介绍一下排序算法的几个关键指标，后面讲解到具体的排序算法时，都会根据这些指标来分析。</p> <h2 id=\"时空复杂度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6\"><span>时空复杂度</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6\"><span>时空复杂度</span></a> <span>时空复杂度</span> <p>首先一个指标肯定是时间复杂度和空间复杂度。</p> <p>正如 <a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a> 中所说，对于任意一个算法，其时间复杂度和空间复杂度都是越小越好的。</p> <a class=\"route-link\" href=\"/algo/intro/complexity-basic/\">时空复杂度入门</a> <h2 id=\"排序稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>排序稳定性</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>排序稳定性</span></a> <span>排序稳定性</span> <p>稳定性是排序算法的一个重要性质，我们可以简单总结为：</p> <p><strong>对于序列中的相同元素，如果排序之后它们的相对位置没有发生改变，则称该排序算法为「稳定排序」，反之则为「不稳定排序」</strong>。</p> <strong>对于序列中的相同元素，如果排序之后它们的相对位置没有发生改变，则称该排序算法为「稳定排序」，反之则为「不稳定排序」</strong> <p>如果单单排序 int 数组，那么稳定性没有什么意义。但如果排序一些结构比较复杂的数据，那么稳定排序就会有一定的优势。</p> <p>比如说现在你有若干订单数据，已经按照交易日期排好序了，现在你想对用户 ID 再进行排序，这样一来相同用户 ID 的订单就会聚集在一起，方便查看。稳定排序和不稳定排序的区别就体现在这里：</p> <p><strong>如果你用稳定排序算法</strong>，那么排序完成后，相同用户 ID 的订单依然会按照交易日期有序排列：</p> <strong>如果你用稳定排序算法</strong> <div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>   Date    UserID</span></span>\n<span class=\"line\"><span>2020-02-01  1001</span></span>\n<span class=\"line\"><span>2020-02-02  1001</span></span>\n<span class=\"line\"><span>2020-02-03  1001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>2020-01-01  1002</span></span>\n<span class=\"line\"><span>2020-01-02  1002</span></span>\n<span class=\"line\"><span>2020-01-03  1002</span></span>\n<span class=\"line\"><span>...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>   Date    UserID</span></span>\n<span class=\"line\"><span>2020-02-01  1001</span></span>\n<span class=\"line\"><span>2020-02-02  1001</span></span>\n<span class=\"line\"><span>2020-02-03  1001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>2020-01-01  1002</span></span>\n<span class=\"line\"><span>2020-01-02  1002</span></span>\n<span class=\"line\"><span>2020-01-03  1002</span></span>\n<span class=\"line\"><span>...</span></span></code></pre> <code><span class=\"line\"><span>   Date    UserID</span></span>\n<span class=\"line\"><span>2020-02-01  1001</span></span>\n<span class=\"line\"><span>2020-02-02  1001</span></span>\n<span class=\"line\"><span>2020-02-03  1001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>2020-01-01  1002</span></span>\n<span class=\"line\"><span>2020-01-02  1002</span></span>\n<span class=\"line\"><span>2020-01-03  1002</span></span>\n<span class=\"line\"><span>...</span></span></code> <span class=\"line\"><span>   Date    UserID</span></span> <span>   Date    UserID</span> <span class=\"line\"><span>2020-02-01  1001</span></span> <span>2020-02-01  1001</span> <span class=\"line\"><span>2020-02-02  1001</span></span> <span>2020-02-02  1001</span> <span class=\"line\"><span>2020-02-03  1001</span></span> <span>2020-02-03  1001</span> <span class=\"line\"><span></span></span> <span></span> <span class=\"line\"><span>2020-01-01  1002</span></span> <span>2020-01-01  1002</span> <span class=\"line\"><span>2020-01-02  1002</span></span> <span>2020-01-02  1002</span> <span class=\"line\"><span>2020-01-03  1002</span></span> <span>2020-01-03  1002</span> <span class=\"line\"><span>...</span></span> <span>...</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>因为之前已经按照日期排好序了，对用户 ID 稳定排序之后，相同用户 ID 的订单的相对位置保持不变，所以在日期上依然是有序的。</p> <p><strong>如果你用不稳定排序算法</strong>，相同用户 ID 的订单相对位置可能变化，所以对于相同用户 ID 的订单，交易日期的有序性会丧失，相当于你之前对日期的排序白做了。</p> <strong>如果你用不稳定排序算法</strong> <p>可以看到，稳定性是个很重要的性质，所以你在使用排序算法时要特别注意，避免出现预期之外的结果。</p> <h2 id=\"是否原地排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%98%AF%E5%90%A6%E5%8E%9F%E5%9C%B0%E6%8E%92%E5%BA%8F\"><span>是否原地排序</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%98%AF%E5%90%A6%E5%8E%9F%E5%9C%B0%E6%8E%92%E5%BA%8F\"><span>是否原地排序</span></a> <span>是否原地排序</span> <p><strong>原地排序就是指排序过程中不需要额外的辅助空间，只需要常数级别的额外空间，直接操作原数组进行排序</strong>。</p> <strong>原地排序就是指排序过程中不需要额外的辅助空间，只需要常数级别的额外空间，直接操作原数组进行排序</strong> <p>注意，关键是是否需要额外的空间，而不是是否返回一个新的数组。具体来说就是类似这样的区别：</p> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 非原地排序</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 排序过程中需要额外的辅助数组，消耗 O(N) 的空间</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">tmp</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">length</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">];</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 对 nums 进行排序</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 原地排序</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">void</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> sort</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 直接操作 nums，不需要额外的辅助数组，消耗 O(1) 的空间</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> ...</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>不难想到，对于大数据量的排序，原地排序算法是比较有优势的。</p> <p>排序算法的几个关键指标就是这些，后面我会介绍几种常见的排序算法，都会根据这些指标来分析它们的优劣。</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/intro/sorting/\" aria-label=\"本章导读\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->本章导读</div></a><a class=\"route-link auto-link next\" href=\"/algo/data-structure-basic/select-sort/\" aria-label=\"选择排序所面临的问题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">选择排序所面临的问题<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/intro/sorting/\" aria-label=\"本章导读\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->本章导读</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->本章导读</div> <a class=\"route-link auto-link next\" href=\"/algo/data-structure-basic/select-sort/\" aria-label=\"选择排序所面临的问题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">选择排序所面临的问题<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">选择排序所面临的问题<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}