{
    "url": "https://labuladong.online/algo-visualize/tutorial/graph-example/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } // 创建一个有向无权图\n// 输入是若干条有向边\nlet graph = Graph.createDirectedGraphFromEdges([\n    [0, 4], [0, 3], [0, 1],\n    [1, 3], [1, 2], [1, 4],\n    [2, 3], [2, 4],\n    [3, 4],\n]);\n\n// 邻接矩阵的形式\nlet adjMatrix = graph.getAdjMatrix()\n\n// 邻接表的形式\nlet adjList = graph.getAdjList()\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}