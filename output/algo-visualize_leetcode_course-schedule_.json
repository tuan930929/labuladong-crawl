{
    "url": "https://labuladong.online/algo-visualize/leetcode/course-schedule/",
    "title": "课程表 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: ''\n    } var canFinish = function(numCourses, prerequisites) {\n    // 记录一次 traverse 递归经过的节点\n    let onPath = new Array(numCourses).fill(false);\n    // 记录遍历过的节点，防止走回头路\n    let visited = new Array(numCourses).fill(false);\n    // 记录图中是否有环\n    let hasCycle = false;\n\n    let graph = buildGraph(numCourses, prerequisites);\n    // @visualize hide prerequisites\n\n    for (let i = 0; i < numCourses; i++) {\n        // 遍历图中的所有节点\n        traverse(graph, i);\n    }\n    // 只要没有循环依赖可以完成所有课程\n    return !hasCycle;\n\n    function traverse(graph, s) {\n        if (onPath[s]) {\n            // 出现环\n            hasCycle = true;\n        }\n\n        if (visited[s]) {\n            // 已经遍历过的节点不用再遍历\n            return;\n        }\n\n        if (hasCycle) {\n            // 如果已经找到了环，也不用再遍历了\n            return;\n        }\n        // 前序代码位置\n        // @visualize color *graph._v(s) #7ed67e\n        visited[s] = true;\n        // @visualize color *graph._v(s) #e77427\n        onPath[s] = true;\n        for (let t of graph.neighbors(s)) {\n            // @visualize color *graph._e(s,t) #e77427\n            traverse(graph, t);\n            // @visualize color *graph._e(s,t) #unset\n        }\n        // 后序代码位置\n        // @visualize color *graph._v(s) #7ed67e\n        onPath[s] = false;\n    }\n\n    function buildGraph(numCourses, prerequisites) {\n        // 图中共有 numCourses 个节点\n        // @visualize skip\n        let adjList = new Array(numCourses).fill(0).map(() => []);\n        for (let edge of prerequisites) {\n            let from = edge[1];\n            let to = edge[0];\n            // 修完课程 from 才能修课程 to\n            // 在图中添加一条从 from 指向 to 的有向边\n            adjList[from].push(to);\n        }\n        return Graph.createDirectedGraphFromAdjList(adjList);\n    }\n};\n\nlet result = canFinish(7, [[6,1],[6,0],[3,1],[2,3],[6,4],[5,4],[3,5],[3,0],[4,3]]);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}