{
    "url": "https://labuladong.online/algo/en/data-structure-basic/binary-heap-implement/",
    "title": "Binary Heap/Priority Queue Code Implementation | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Binary Heap/Priority Queue Code Implementation</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7033 words</span><meta property=\"wordCount\" content=\"7033\"></span></div><hr></div> <h1><!---->Binary Heap/Priority Queue Code Implementation</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7033 words</span><meta property=\"wordCount\" content=\"7033\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7033 words</span><meta property=\"wordCount\" content=\"7033\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 7033 words</span> <meta property=\"wordCount\" content=\"7033\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a></li></ul></div><p>The previous article, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a>, introduced the fundamental properties, APIs, and common applications of binary heaps. In this article, we will guide you step-by-step to implement a priority queue using a <a class=\"route-link\" href=\"/algo/en/intro/visualize/\">visualization panel</a>.</p><p>We'll start by creating a simplified version of a priority queue to help you understand the core operations of a binary heap, namely <code>sink</code> and <code>swim</code>. Finally, I'll provide a more complete code implementation.</p><h2 class=\"hidden-for-toc\" id=\"simplified-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simplified-priority-queue\"><span>Simplified Priority Queue</span></a></h2><h3 class=\"hidden-for-toc\" id=\"key-challenges\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key-challenges\"><span>Key Challenges</span></a></h3><h3 class=\"hidden-for-toc\" id=\"insertion-push-swim-method-for-adding-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#insertion-push-swim-method-for-adding-elements\"><span>Insertion: <code>push/swim</code> Method for Adding Elements</span></a></h3><h3 class=\"hidden-for-toc\" id=\"delete-pop-sink-method-for-removing-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#delete-pop-sink-method-for-removing-elements\"><span>Delete: <code>pop/sink</code> Method for Removing Elements</span></a></h3><h3 class=\"hidden-for-toc\" id=\"query-peek-method-to-view-the-heap-s-top-element\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#query-peek-method-to-view-the-heap-s-top-element\"><span>Query: <code>peek</code> Method to View the Heap's Top Element</span></a></h3><h3 class=\"hidden-for-toc\" id=\"simulating-a-binary-tree-with-an-array\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simulating-a-binary-tree-with-an-array\"><span>Simulating a Binary Tree with an Array</span></a></h3><h2 class=\"hidden-for-toc\" id=\"code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-implementation\"><span>Code Implementation</span></a></h2><h2 class=\"hidden-for-toc\" id=\"improved-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#improved-priority-queue\"><span>Improved Priority Queue</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a></li></ul></div><p>The previous article, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a>, introduced the fundamental properties, APIs, and common applications of binary heaps. In this article, we will guide you step-by-step to implement a priority queue using a <a class=\"route-link\" href=\"/algo/en/intro/visualize/\">visualization panel</a>.</p><p>We'll start by creating a simplified version of a priority queue to help you understand the core operations of a binary heap, namely <code>sink</code> and <code>swim</code>. Finally, I'll provide a more complete code implementation.</p><h2 class=\"hidden-for-toc\" id=\"simplified-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simplified-priority-queue\"><span>Simplified Priority Queue</span></a></h2><h3 class=\"hidden-for-toc\" id=\"key-challenges\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key-challenges\"><span>Key Challenges</span></a></h3><h3 class=\"hidden-for-toc\" id=\"insertion-push-swim-method-for-adding-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#insertion-push-swim-method-for-adding-elements\"><span>Insertion: <code>push/swim</code> Method for Adding Elements</span></a></h3><h3 class=\"hidden-for-toc\" id=\"delete-pop-sink-method-for-removing-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#delete-pop-sink-method-for-removing-elements\"><span>Delete: <code>pop/sink</code> Method for Removing Elements</span></a></h3><h3 class=\"hidden-for-toc\" id=\"query-peek-method-to-view-the-heap-s-top-element\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#query-peek-method-to-view-the-heap-s-top-element\"><span>Query: <code>peek</code> Method to View the Heap's Top Element</span></a></h3><h3 class=\"hidden-for-toc\" id=\"simulating-a-binary-tree-with-an-array\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simulating-a-binary-tree-with-an-array\"><span>Simulating a Binary Tree with an Array</span></a></h3><h2 class=\"hidden-for-toc\" id=\"code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-implementation\"><span>Code Implementation</span></a></h2><h2 class=\"hidden-for-toc\" id=\"improved-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#improved-priority-queue\"><span>Improved Priority Queue</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a></li></ul></div> <p class=\"hint-container-title\">Prerequisite Knowledge</p> <p>Before reading this article, you should first learn:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a> <p>The previous article, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a>, introduced the fundamental properties, APIs, and common applications of binary heaps. In this article, we will guide you step-by-step to implement a priority queue using a <a class=\"route-link\" href=\"/algo/en/intro/visualize/\">visualization panel</a>.</p> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\">The Basics of Binary Heaps</a> <a class=\"route-link\" href=\"/algo/en/intro/visualize/\">visualization panel</a> <p>We'll start by creating a simplified version of a priority queue to help you understand the core operations of a binary heap, namely <code>sink</code> and <code>swim</code>. Finally, I'll provide a more complete code implementation.</p> <code>sink</code> <code>swim</code> <h2 class=\"hidden-for-toc\" id=\"simplified-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simplified-priority-queue\"><span>Simplified Priority Queue</span></a></h2> <a class=\"header-anchor\" href=\"#simplified-priority-queue\"><span>Simplified Priority Queue</span></a> <span>Simplified Priority Queue</span> <h3 class=\"hidden-for-toc\" id=\"key-challenges\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key-challenges\"><span>Key Challenges</span></a></h3> <a class=\"header-anchor\" href=\"#key-challenges\"><span>Key Challenges</span></a> <span>Key Challenges</span> <h3 class=\"hidden-for-toc\" id=\"insertion-push-swim-method-for-adding-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#insertion-push-swim-method-for-adding-elements\"><span>Insertion: <code>push/swim</code> Method for Adding Elements</span></a></h3> <a class=\"header-anchor\" href=\"#insertion-push-swim-method-for-adding-elements\"><span>Insertion: <code>push/swim</code> Method for Adding Elements</span></a> <span>Insertion: <code>push/swim</code> Method for Adding Elements</span> <code>push/swim</code> <h3 class=\"hidden-for-toc\" id=\"delete-pop-sink-method-for-removing-elements\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#delete-pop-sink-method-for-removing-elements\"><span>Delete: <code>pop/sink</code> Method for Removing Elements</span></a></h3> <a class=\"header-anchor\" href=\"#delete-pop-sink-method-for-removing-elements\"><span>Delete: <code>pop/sink</code> Method for Removing Elements</span></a> <span>Delete: <code>pop/sink</code> Method for Removing Elements</span> <code>pop/sink</code> <h3 class=\"hidden-for-toc\" id=\"query-peek-method-to-view-the-heap-s-top-element\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#query-peek-method-to-view-the-heap-s-top-element\"><span>Query: <code>peek</code> Method to View the Heap's Top Element</span></a></h3> <a class=\"header-anchor\" href=\"#query-peek-method-to-view-the-heap-s-top-element\"><span>Query: <code>peek</code> Method to View the Heap's Top Element</span></a> <span>Query: <code>peek</code> Method to View the Heap's Top Element</span> <code>peek</code> <h3 class=\"hidden-for-toc\" id=\"simulating-a-binary-tree-with-an-array\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simulating-a-binary-tree-with-an-array\"><span>Simulating a Binary Tree with an Array</span></a></h3> <a class=\"header-anchor\" href=\"#simulating-a-binary-tree-with-an-array\"><span>Simulating a Binary Tree with an Array</span></a> <span>Simulating a Binary Tree with an Array</span> <h2 class=\"hidden-for-toc\" id=\"code-implementation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-implementation\"><span>Code Implementation</span></a></h2> <a class=\"header-anchor\" href=\"#code-implementation\"><span>Code Implementation</span></a> <span>Code Implementation</span> <h2 class=\"hidden-for-toc\" id=\"improved-priority-queue\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#improved-priority-queue\"><span>Improved Priority Queue</span></a></h2> <a class=\"header-anchor\" href=\"#improved-priority-queue\"><span>Improved Priority Queue</span></a> <span>Improved Priority Queue</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\" aria-label=\"Basic Concept of Binary Heap\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Basic Concept of Binary Heap</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/data-structure-basic/segment-tree-basic/\" aria-label=\"Segment Tree Basics and Visualization\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Segment Tree Basics and Visualization<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure-basic/binary-heap-basic/\" aria-label=\"Basic Concept of Binary Heap\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Basic Concept of Binary Heap</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Basic Concept of Binary Heap</div> <a class=\"route-link auto-link next\" href=\"/algo/en/data-structure-basic/segment-tree-basic/\" aria-label=\"Segment Tree Basics and Visualization\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Segment Tree Basics and Visualization<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Segment Tree Basics and Visualization<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}