{
    "url": "https://labuladong.online/algo/en/data-structure-basic/quick-sort/",
    "title": "Quick Sort and Binary Tree Preorder | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Quick Sort and Binary Tree Preorder</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 1708 words</span><meta property=\"wordCount\" content=\"1708\"></span></div><hr></div> <h1><!---->Quick Sort and Binary Tree Preorder</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 1708 words</span><meta property=\"wordCount\" content=\"1708\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 1708 words</span><meta property=\"wordCount\" content=\"1708\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 1708 words</span> <meta property=\"wordCount\" content=\"1708\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">Summary in One Sentence</p><p>The core idea of quicksort can be understood by combining it with <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Preorder Traversal of Binary Trees</a>: Position an element correctly in the preorder position during tree traversal, then recursively position the remaining elements.</p></div><div class=\"viz-template\"><!--[--><p>You can open this visualization panel, click the fullscreen button <iconify-icon class=\"font-icon icon\" height=\"1em\" icon=\"lets-icons:full-alt\" inline=\"true\" mode=\"style\" width=\"1em\"></iconify-icon>, and repeatedly click <code type=\"click\">let p = partition(nums, lo, hi)</code> to visually observe the recursive process and sorting effect of quicksort:</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_quick-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>Does this one-sentence summary leave beginners puzzled? How does array sorting relate to binary trees?</p><p>This illustrates that computer logic differs from human logic.</p><p>When a typical person sorts an array, they usually maintain a <code>sortedIndex</code>, ensuring <code>[0, sortedIndex)</code> is sorted, gradually moving <code>sortedIndex</code> to the right until the entire array is sorted. This process involves overcoming various challenges, as discussed in <a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Selection Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/bubble-sort/\">Bubble Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/insertion-sort/\">Insertion Sort</a>, and <a class=\"route-link\" href=\"/algo/en/data-structure-basic/shell-sort/\">Shell Sort</a>.</p><p><strong>However, the more efficient an algorithm is, the closer it aligns with computer logic, making it harder for the untrained to understand.</strong> Having studied the earlier basic sorting algorithms, you should now realize this: sorting algorithms that are easy to understand and derive have complexities of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. Breaking through the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> barrier involves algorithms that seem beyond human conception.</p><p>If someone casually says, \"Sorting an array is easy; just sort one element, then sort the remaining elements, and the whole array will be sorted,\" you might think they are a Trisolaran agent secretly residing on Earth. ðŸ˜ƒ</p><h2 class=\"hidden-for-toc\" id=\"core-concept-of-quicksort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#core-concept-of-quicksort\"><span>Core Concept of Quicksort</span></a></h2><h2 class=\"hidden-for-toc\" id=\"code-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-framework\"><span>Code Framework</span></a></h2><h2 class=\"hidden-for-toc\" id=\"time-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#time-complexity\"><span>Time Complexity</span></a></h2><h2 class=\"hidden-for-toc\" id=\"space-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#space-complexity\"><span>Space Complexity</span></a></h2><h2 class=\"hidden-for-toc\" id=\"stability\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stability\"><span>Stability</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">Summary in One Sentence</p><p>The core idea of quicksort can be understood by combining it with <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Preorder Traversal of Binary Trees</a>: Position an element correctly in the preorder position during tree traversal, then recursively position the remaining elements.</p></div><div class=\"viz-template\"><!--[--><p>You can open this visualization panel, click the fullscreen button <iconify-icon class=\"font-icon icon\" height=\"1em\" icon=\"lets-icons:full-alt\" inline=\"true\" mode=\"style\" width=\"1em\"></iconify-icon>, and repeatedly click <code type=\"click\">let p = partition(nums, lo, hi)</code> to visually observe the recursive process and sorting effect of quicksort:</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_quick-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>Does this one-sentence summary leave beginners puzzled? How does array sorting relate to binary trees?</p><p>This illustrates that computer logic differs from human logic.</p><p>When a typical person sorts an array, they usually maintain a <code>sortedIndex</code>, ensuring <code>[0, sortedIndex)</code> is sorted, gradually moving <code>sortedIndex</code> to the right until the entire array is sorted. This process involves overcoming various challenges, as discussed in <a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Selection Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/bubble-sort/\">Bubble Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/insertion-sort/\">Insertion Sort</a>, and <a class=\"route-link\" href=\"/algo/en/data-structure-basic/shell-sort/\">Shell Sort</a>.</p><p><strong>However, the more efficient an algorithm is, the closer it aligns with computer logic, making it harder for the untrained to understand.</strong> Having studied the earlier basic sorting algorithms, you should now realize this: sorting algorithms that are easy to understand and derive have complexities of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. Breaking through the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> barrier involves algorithms that seem beyond human conception.</p><p>If someone casually says, \"Sorting an array is easy; just sort one element, then sort the remaining elements, and the whole array will be sorted,\" you might think they are a Trisolaran agent secretly residing on Earth. ðŸ˜ƒ</p><h2 class=\"hidden-for-toc\" id=\"core-concept-of-quicksort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#core-concept-of-quicksort\"><span>Core Concept of Quicksort</span></a></h2><h2 class=\"hidden-for-toc\" id=\"code-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-framework\"><span>Code Framework</span></a></h2><h2 class=\"hidden-for-toc\" id=\"time-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#time-complexity\"><span>Time Complexity</span></a></h2><h2 class=\"hidden-for-toc\" id=\"space-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#space-complexity\"><span>Space Complexity</span></a></h2><h2 class=\"hidden-for-toc\" id=\"stability\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stability\"><span>Stability</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisite Knowledge</p><p>Before reading this article, you should first learn:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a></li></ul></div> <p class=\"hint-container-title\">Prerequisite Knowledge</p> <p>Before reading this article, you should first learn:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Problems with Selection Sort</a> <li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Binary Tree Traversal Basics</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">Summary in One Sentence</p><p>The core idea of quicksort can be understood by combining it with <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Preorder Traversal of Binary Trees</a>: Position an element correctly in the preorder position during tree traversal, then recursively position the remaining elements.</p></div> <p class=\"hint-container-title\">Summary in One Sentence</p> <p>The core idea of quicksort can be understood by combining it with <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Preorder Traversal of Binary Trees</a>: Position an element correctly in the preorder position during tree traversal, then recursively position the remaining elements.</p> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/binary-tree-traverse-basic/\">Preorder Traversal of Binary Trees</a> <div class=\"viz-template\"><!--[--><p>You can open this visualization panel, click the fullscreen button <iconify-icon class=\"font-icon icon\" height=\"1em\" icon=\"lets-icons:full-alt\" inline=\"true\" mode=\"style\" width=\"1em\"></iconify-icon>, and repeatedly click <code type=\"click\">let p = partition(nums, lo, hi)</code> to visually observe the recursive process and sorting effect of quicksort:</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_quick-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div> <p>You can open this visualization panel, click the fullscreen button <iconify-icon class=\"font-icon icon\" height=\"1em\" icon=\"lets-icons:full-alt\" inline=\"true\" mode=\"style\" width=\"1em\"></iconify-icon>, and repeatedly click <code type=\"click\">let p = partition(nums, lo, hi)</code> to visually observe the recursive process and sorting effect of quicksort:</p> <iconify-icon class=\"font-icon icon\" height=\"1em\" icon=\"lets-icons:full-alt\" inline=\"true\" mode=\"style\" width=\"1em\"></iconify-icon> <code type=\"click\">let p = partition(nums, lo, hi)</code> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_quick-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details id=\"div_quick-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> Â  <strong data-v-ee1a9bd0>Algorithm Visualization</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>Algorithm Visualization</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_quick-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <p>Does this one-sentence summary leave beginners puzzled? How does array sorting relate to binary trees?</p> <p>This illustrates that computer logic differs from human logic.</p> <p>When a typical person sorts an array, they usually maintain a <code>sortedIndex</code>, ensuring <code>[0, sortedIndex)</code> is sorted, gradually moving <code>sortedIndex</code> to the right until the entire array is sorted. This process involves overcoming various challenges, as discussed in <a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Selection Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/bubble-sort/\">Bubble Sort</a>, <a class=\"route-link\" href=\"/algo/en/data-structure-basic/insertion-sort/\">Insertion Sort</a>, and <a class=\"route-link\" href=\"/algo/en/data-structure-basic/shell-sort/\">Shell Sort</a>.</p> <code>sortedIndex</code> <code>[0, sortedIndex)</code> <code>sortedIndex</code> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/select-sort/\">Selection Sort</a> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/bubble-sort/\">Bubble Sort</a> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/insertion-sort/\">Insertion Sort</a> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/shell-sort/\">Shell Sort</a> <p><strong>However, the more efficient an algorithm is, the closer it aligns with computer logic, making it harder for the untrained to understand.</strong> Having studied the earlier basic sorting algorithms, you should now realize this: sorting algorithms that are easy to understand and derive have complexities of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. Breaking through the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> barrier involves algorithms that seem beyond human conception.</p> <strong>However, the more efficient an algorithm is, the closer it aligns with computer logic, making it harder for the untrained to understand.</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <msup><mi>N</mi><mn>2</mn></msup> <mi>N</mi> <mn>2</mn> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(N^2)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mclose\">)</span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <msup><mi>N</mi><mn>2</mn></msup> <mi>N</mi> <mn>2</mn> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(N^2)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span> <span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span> <span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span> <span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span> <span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span> <span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span> <span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span> <span class=\"pstrut\" style=\"height:2.7em;\"></span> <span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span> <span class=\"mord mtight\">2</span> <span class=\"mclose\">)</span> <p>If someone casually says, \"Sorting an array is easy; just sort one element, then sort the remaining elements, and the whole array will be sorted,\" you might think they are a Trisolaran agent secretly residing on Earth. ðŸ˜ƒ</p> <h2 class=\"hidden-for-toc\" id=\"core-concept-of-quicksort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#core-concept-of-quicksort\"><span>Core Concept of Quicksort</span></a></h2> <a class=\"header-anchor\" href=\"#core-concept-of-quicksort\"><span>Core Concept of Quicksort</span></a> <span>Core Concept of Quicksort</span> <h2 class=\"hidden-for-toc\" id=\"code-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#code-framework\"><span>Code Framework</span></a></h2> <a class=\"header-anchor\" href=\"#code-framework\"><span>Code Framework</span></a> <span>Code Framework</span> <h2 class=\"hidden-for-toc\" id=\"time-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#time-complexity\"><span>Time Complexity</span></a></h2> <a class=\"header-anchor\" href=\"#time-complexity\"><span>Time Complexity</span></a> <span>Time Complexity</span> <h2 class=\"hidden-for-toc\" id=\"space-complexity\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#space-complexity\"><span>Space Complexity</span></a></h2> <a class=\"header-anchor\" href=\"#space-complexity\"><span>Space Complexity</span></a> <span>Space Complexity</span> <h2 class=\"hidden-for-toc\" id=\"stability\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stability\"><span>Stability</span></a></h2> <a class=\"header-anchor\" href=\"#stability\"><span>Stability</span></a> <span>Stability</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure-basic/shell-sort/\" aria-label=\"Shell Sort - Better than O(N^2)\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Shell Sort - Better than O(N^2)</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/data-structure-basic/merge-sort/\" aria-label=\"Merge Sort and Binary Tree Postorder\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Merge Sort and Binary Tree Postorder<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure-basic/shell-sort/\" aria-label=\"Shell Sort - Better than O(N^2)\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Shell Sort - Better than O(N^2)</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Shell Sort - Better than O(N^2)</div> <a class=\"route-link auto-link next\" href=\"/algo/en/data-structure-basic/merge-sort/\" aria-label=\"Merge Sort and Binary Tree Postorder\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Merge Sort and Binary Tree Postorder<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Merge Sort and Binary Tree Postorder<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}