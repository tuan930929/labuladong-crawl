{
    "url": "https://labuladong.online/algo-visualize/leetcode/search-in-a-binary-search-tree/",
    "title": "二叉搜索树中的搜索 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var searchBST = function(root, target) {\n    // @visualize color *root #f4b541\n    if (root === null) {\n        return null;\n    }\n    // 去左子树搜索\n    if (root.val > target) {\n        return searchBST(root.left, target);\n    }\n    // 去右子树搜索\n    if (root.val < target) {\n        return searchBST(root.right, target);\n    }\n    // @visualize color *root #98d22d\n    return root;\n};\n\nlet _allRoot = BTree.createRoot([7, 4, 9, 1, 5, 8, 11]);\nlet result = searchBST(_allRoot, 8);\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}