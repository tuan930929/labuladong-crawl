{
    "url": "https://labuladong.online/algo-visualize/tutorial/binary-search-right-bound/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var right_bound = function(nums, target) {\n    // @visualize shape nums rect\n    let left = 0, right = nums.length - 1;\n    // @visualize bind nums[left]\n    // @visualize bind nums[right]\n    // @visualize color nums[left] nums[right] #bc4fa8\n    // @visualize color nums[mid] #b47f46\n\n    while (left <= right) {\n        let mid = left + Math.floor((right - left) / 2);\n        if (nums[mid] < target) {\n            left = mid + 1;\n        } else if (nums[mid] > target) {\n            right = mid - 1;\n        } else if (nums[mid] === target) {\n            // 这里改成收缩左侧边界即可\n            left = mid + 1;\n        }\n    }\n    // 这里改为检查 right 越界的情况，见下图\n    if (right < 0 || nums[right] !== target) {\n        return -1;\n    }\n    return right;\n};\n\nlet result = right_bound([1,2,3,3,3,3,3,8,9], 3)\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}