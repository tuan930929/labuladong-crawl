{
    "url": "https://labuladong.online/algo/frequency-interview/print-prime-number/",
    "title": "如何高效寻找素数 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->如何高效寻找素数</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1177 字</span><meta property=\"wordCount\" content=\"1177\"></span></div><hr></div> <h1><!---->如何高效寻找素数</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1177 字</span><meta property=\"wordCount\" content=\"1177\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 1177 字</span><meta property=\"wordCount\" content=\"1177\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 1177 字</span> <meta property=\"wordCount\" content=\"1177\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 204. 计数质数 https://leetcode.cn/problems/count-primes </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><p>素数的定义看起来很简单，如果一个数如果只能被 1 和它本身整除，那么这个数就是素数。</p><p>虽然素数的定义并不复杂，恐怕没多少人真的能把素数相关的算法写得高效。</p><p>比如力扣第 204 题「<a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">计数质数</a>」，让你写这样一个函数：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-42-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-42-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>你会如何写这个函数？我想大家应该会这样写：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-62-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-62-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>这样写的话时间复杂度 O(n^2)，问题很大。<strong>首先你用 <code>isPrime</code> 函数来辅助的思路就不够高效；而且就算你要用 <code>isPrime</code> 函数，这样写算法也是存在计算冗余的</strong>。</p><p>先来说下<strong>如果你要判断一个数是不是素数，应该如何写算法</strong>。只需稍微修改一下上面的 <code>isPrime</code> 代码中的 for 循环条件：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>换句话说，<code>i</code> 不需要遍历到 <code>n</code>，而只需要到 <code>sqrt(n)</code> 即可。为什么呢，我们举个例子，假设 <code>n = 12</code>。</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，后两个乘积就是前面两个反过来，反转临界点就在 <code>sqrt(n)</code>。</p><p>换句话说，如果在 <code>[2,sqrt(n)]</code> 这个区间之内没有发现可整除因子，就可以直接断定 <code>n</code> 是素数了，因为在区间 <code>[sqrt(n),n]</code> 也一定不会发现可整除因子。</p><p>现在，<code>isPrime</code> 函数的时间复杂度降为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span></span></span>，<strong>但是我们实现 <code>countPrimes</code> 函数其实并不需要这个函数</strong>，以上只是希望读者明白 <code>sqrt(n)</code> 的含义，因为等会还会用到。</p><h2 id=\"高效实现-countprimes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0-countprimes\"><span>高效实现 <code>countPrimes</code></span></a></h2><p>接下来介绍的方法叫做「素数筛选法」，这个方法是古希腊一位名叫埃拉托色尼的大佬发明的，我们在中学的教课书上见过他的大名，因为他就是第一个通过物体的影子正确计算地球周长的人，被推崇为「地理学之父」。</p><p>回到正题，素数筛选法的核心思路是和上面的常规思路反着来：</p><p>首先从 2 开始，我们知道 2 是一个素数，那么 2 × 2 = 4, 3 × 2 = 6, 4 × 2 = 8... 都不可能是素数了。</p><p>然后我们发现 3 也是素数，那么 3 × 2 = 6, 3 × 3 = 9, 3 × 4 = 12... 也都不可能是素数了。</p><p>Wikipedia 的这个 GIF 很形象：</p><div class=\"img-content\"><img src=\"/algo/images/prime/1.gif\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>看到这里，你是否有点明白这个排除法的逻辑了呢？先看我们的第一版代码：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-121-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-121-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>如果上面这段代码你能够理解，那么你已经掌握了整体思路，但是还有两个细微的地方可以优化。</p><p>首先，回想本文开头介绍的 <code>isPrime</code> 素数判定函数，由于因子的对称性，其中的 for 循环只需要遍历 <code>[2,sqrt(n)]</code> 就够了。这里也是类似的，我们外层的 for 循环也只需要遍历到 <code>sqrt(n)</code>：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>除此之外，很难注意到内层的 for 循环也可以优化。我们之前的做法是：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样可以把 <code>i</code> 的整数倍都标记为 <code>false</code>，但是仍然存在计算冗余。</p><p>比如 <code>n = 25</code>，<code>i = 5</code> 时算法会标记 5 × 2 = 10，5 × 3 = 15 等等数字，但是这两个数字已经被 <code>i = 2</code> 和 <code>i = 3</code> 的 2 × 5 和 3 × 5 标记了。</p><p>我们可以稍微优化一下，让 <code>j</code> 从 <code>i * i</code> 开始遍历，而不是从 <code>2 * i</code> 开始：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样，素数计数的算法就高效实现了，其实这个算法有一个名字，叫做 Sieve of Eratosthenes。看下完整的最终代码：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-162-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-162-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_count-primes\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><p><strong>该算法的时间复杂度比较难算</strong>，显然时间跟这两个嵌套的 for 循环有关，其操作数应该是：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>括号中是素数的倒数。其最终结果是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>，有兴趣的读者可以查一下该算法的时间复杂度证明。</p><p>以上就是素数算法相关的全部内容。怎么样，是不是看似简单的问题却有不少细节可以打磨呀？</p><hr><details class=\"hint-container details\"><summary><strong>引用本文的题目</strong></summary><p><strong>安装 <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> 点开下列题目可直接查看解题思路：</strong></p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></details><hr></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 204. 计数质数 https://leetcode.cn/problems/count-primes </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><p>素数的定义看起来很简单，如果一个数如果只能被 1 和它本身整除，那么这个数就是素数。</p><p>虽然素数的定义并不复杂，恐怕没多少人真的能把素数相关的算法写得高效。</p><p>比如力扣第 204 题「<a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">计数质数</a>」，让你写这样一个函数：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-42-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-42-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>你会如何写这个函数？我想大家应该会这样写：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-62-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-62-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>这样写的话时间复杂度 O(n^2)，问题很大。<strong>首先你用 <code>isPrime</code> 函数来辅助的思路就不够高效；而且就算你要用 <code>isPrime</code> 函数，这样写算法也是存在计算冗余的</strong>。</p><p>先来说下<strong>如果你要判断一个数是不是素数，应该如何写算法</strong>。只需稍微修改一下上面的 <code>isPrime</code> 代码中的 for 循环条件：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>换句话说，<code>i</code> 不需要遍历到 <code>n</code>，而只需要到 <code>sqrt(n)</code> 即可。为什么呢，我们举个例子，假设 <code>n = 12</code>。</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，后两个乘积就是前面两个反过来，反转临界点就在 <code>sqrt(n)</code>。</p><p>换句话说，如果在 <code>[2,sqrt(n)]</code> 这个区间之内没有发现可整除因子，就可以直接断定 <code>n</code> 是素数了，因为在区间 <code>[sqrt(n),n]</code> 也一定不会发现可整除因子。</p><p>现在，<code>isPrime</code> 函数的时间复杂度降为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span></span></span>，<strong>但是我们实现 <code>countPrimes</code> 函数其实并不需要这个函数</strong>，以上只是希望读者明白 <code>sqrt(n)</code> 的含义，因为等会还会用到。</p><h2 id=\"高效实现-countprimes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0-countprimes\"><span>高效实现 <code>countPrimes</code></span></a></h2><p>接下来介绍的方法叫做「素数筛选法」，这个方法是古希腊一位名叫埃拉托色尼的大佬发明的，我们在中学的教课书上见过他的大名，因为他就是第一个通过物体的影子正确计算地球周长的人，被推崇为「地理学之父」。</p><p>回到正题，素数筛选法的核心思路是和上面的常规思路反着来：</p><p>首先从 2 开始，我们知道 2 是一个素数，那么 2 × 2 = 4, 3 × 2 = 6, 4 × 2 = 8... 都不可能是素数了。</p><p>然后我们发现 3 也是素数，那么 3 × 2 = 6, 3 × 3 = 9, 3 × 4 = 12... 也都不可能是素数了。</p><p>Wikipedia 的这个 GIF 很形象：</p><div class=\"img-content\"><img src=\"/algo/images/prime/1.gif\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>看到这里，你是否有点明白这个排除法的逻辑了呢？先看我们的第一版代码：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-121-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-121-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><p>如果上面这段代码你能够理解，那么你已经掌握了整体思路，但是还有两个细微的地方可以优化。</p><p>首先，回想本文开头介绍的 <code>isPrime</code> 素数判定函数，由于因子的对称性，其中的 for 循环只需要遍历 <code>[2,sqrt(n)]</code> 就够了。这里也是类似的，我们外层的 for 循环也只需要遍历到 <code>sqrt(n)</code>：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>除此之外，很难注意到内层的 for 循环也可以优化。我们之前的做法是：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样可以把 <code>i</code> 的整数倍都标记为 <code>false</code>，但是仍然存在计算冗余。</p><p>比如 <code>n = 25</code>，<code>i = 5</code> 时算法会标记 5 × 2 = 10，5 × 3 = 15 等等数字，但是这两个数字已经被 <code>i = 2</code> 和 <code>i = 3</code> 的 2 × 5 和 3 × 5 标记了。</p><p>我们可以稍微优化一下，让 <code>j</code> 从 <code>i * i</code> 开始遍历，而不是从 <code>2 * i</code> 开始：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样，素数计数的算法就高效实现了，其实这个算法有一个名字，叫做 Sieve of Eratosthenes。看下完整的最终代码：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-162-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-162-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_count-primes\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div><p><strong>该算法的时间复杂度比较难算</strong>，显然时间跟这两个嵌套的 for 循环有关，其操作数应该是：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>括号中是素数的倒数。其最终结果是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>，有兴趣的读者可以查一下该算法的时间复杂度证明。</p><p>以上就是素数算法相关的全部内容。怎么样，是不是看似简单的问题却有不少细节可以打磨呀？</p><hr><details class=\"hint-container details\"><summary><strong>引用本文的题目</strong></summary><p><strong>安装 <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> 点开下列题目可直接查看解题思路：</strong></p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></details><hr></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 204. 计数质数 https://leetcode.cn/problems/count-primes </h3></div> <h3 tabindex=\"-1\"> 204. 计数质数 https://leetcode.cn/problems/count-primes </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div> <p class=\"hint-container-title\">本文讲解的例题</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">力扣</th> <th style=\"text-align:center;\">难度</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a></td> <a href=\"https://leetcode.com/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. Count Primes</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a></td> <a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">204. 计数质数</a> <td style=\"text-align:center;\">🟠</td> <p>素数的定义看起来很简单，如果一个数如果只能被 1 和它本身整除，那么这个数就是素数。</p> <p>虽然素数的定义并不复杂，恐怕没多少人真的能把素数相关的算法写得高效。</p> <p>比如力扣第 204 题「<a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">计数质数</a>」，让你写这样一个函数：</p> <a href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\" rel=\"noopener noreferrer\">计数质数</a> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-42-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-42-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-42-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-42-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-42-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-42-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-42-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n)</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-42-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数 </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-42-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 返回区间 [2, n) 中有几个素数 </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 比如 countPrimes(10) 返回 4</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 因为 2,3,5,7 是素数</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-42-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-42-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 返回区间 [2, n) 中有几个素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 比如 countPrimes(10) 返回 4</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 因为 2,3,5,7 是素数</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>你会如何写这个函数？我想大家应该会这样写：</p> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-62-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-62-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-62-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-62-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-62-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-62-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-62-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-62-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i)) count++;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (n % i == </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-62-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime(i):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            count += </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\"># 判断整数 n 是否是素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n % i == </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            # 有其他整除因子</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> False</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> True</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-62-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> == </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-62-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    var</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)) </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">// 判断整数 n 是否是素数</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> % </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> === </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // 有其他整除因子</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\"> true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>这样写的话时间复杂度 O(n^2)，问题很大。<strong>首先你用 <code>isPrime</code> 函数来辅助的思路就不够高效；而且就算你要用 <code>isPrime</code> 函数，这样写算法也是存在计算冗余的</strong>。</p> <strong>首先你用 <code>isPrime</code> 函数来辅助的思路就不够高效；而且就算你要用 <code>isPrime</code> 函数，这样写算法也是存在计算冗余的</strong> <code>isPrime</code> <code>isPrime</code> <p>先来说下<strong>如果你要判断一个数是不是素数，应该如何写算法</strong>。只需稍微修改一下上面的 <code>isPrime</code> 代码中的 for 循环条件：</p> <strong>如果你要判断一个数是不是素数，应该如何写算法</strong> <code>isPrime</code> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> n) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt;= n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>换句话说，<code>i</code> 不需要遍历到 <code>n</code>，而只需要到 <code>sqrt(n)</code> 即可。为什么呢，我们举个例子，假设 <code>n = 12</code>。</p> <code>i</code> <code>n</code> <code>sqrt(n)</code> <code>n = 12</code> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span></span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span> <span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span></span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span> <span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) × </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">sqrt</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span></span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">4</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span> <span class=\"line\"><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span></span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">12</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">6</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> × </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>可以看到，后两个乘积就是前面两个反过来，反转临界点就在 <code>sqrt(n)</code>。</p> <code>sqrt(n)</code> <p>换句话说，如果在 <code>[2,sqrt(n)]</code> 这个区间之内没有发现可整除因子，就可以直接断定 <code>n</code> 是素数了，因为在区间 <code>[sqrt(n),n]</code> 也一定不会发现可整除因子。</p> <code>[2,sqrt(n)]</code> <code>n</code> <code>[sqrt(n),n]</code> <p>现在，<code>isPrime</code> 函数的时间复杂度降为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span></span></span>，<strong>但是我们实现 <code>countPrimes</code> 函数其实并不需要这个函数</strong>，以上只是希望读者明白 <code>sqrt(n)</code> 的含义，因为等会还会用到。</p> <code>isPrime</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <mi>s</mi> <mi>q</mi> <mi>r</mi> <mi>t</mi> <mo stretchy=\"false\">(</mo> <mi>N</mi> <mo stretchy=\"false\">)</mo> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(sqrt(N))</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">))</span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord mathnormal\">s</span> <span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span> <span class=\"mord mathnormal\">t</span> <span class=\"mopen\">(</span> <span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span> <span class=\"mclose\">))</span> <strong>但是我们实现 <code>countPrimes</code> 函数其实并不需要这个函数</strong> <code>countPrimes</code> <code>sqrt(n)</code> <h2 id=\"高效实现-countprimes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0-countprimes\"><span>高效实现 <code>countPrimes</code></span></a></h2> <a class=\"header-anchor\" href=\"#%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0-countprimes\"><span>高效实现 <code>countPrimes</code></span></a> <span>高效实现 <code>countPrimes</code></span> <code>countPrimes</code> <p>接下来介绍的方法叫做「素数筛选法」，这个方法是古希腊一位名叫埃拉托色尼的大佬发明的，我们在中学的教课书上见过他的大名，因为他就是第一个通过物体的影子正确计算地球周长的人，被推崇为「地理学之父」。</p> <p>回到正题，素数筛选法的核心思路是和上面的常规思路反着来：</p> <p>首先从 2 开始，我们知道 2 是一个素数，那么 2 × 2 = 4, 3 × 2 = 6, 4 × 2 = 8... 都不可能是素数了。</p> <p>然后我们发现 3 也是素数，那么 3 × 2 = 6, 3 × 3 = 9, 3 × 4 = 12... 也都不可能是素数了。</p> <p>Wikipedia 的这个 GIF 很形象：</p> <div class=\"img-content\"><img src=\"/algo/images/prime/1.gif\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/prime/1.gif\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>看到这里，你是否有点明白这个排除法的逻辑了呢？先看我们的第一版代码：</p> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-121-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-121-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-121-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-121-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-121-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-121-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-121-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-121-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        // 将数组都初始化为 true</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                // i 的倍数不可能是素数了</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-121-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">        # 将数组都初始化为 true</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">                # i 的倍数不可能是素数了</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i, n, i):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-121-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-121-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将数组都初始化为 true</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">            // i 的倍数不可能是素数了</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>如果上面这段代码你能够理解，那么你已经掌握了整体思路，但是还有两个细微的地方可以优化。</p> <p>首先，回想本文开头介绍的 <code>isPrime</code> 素数判定函数，由于因子的对称性，其中的 for 循环只需要遍历 <code>[2,sqrt(n)]</code> 就够了。这里也是类似的，我们外层的 for 循环也只需要遍历到 <code>sqrt(n)</code>：</p> <code>isPrime</code> <code>[2,sqrt(n)]</code> <code>sqrt(n)</code> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) </span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        ...</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>除此之外，很难注意到内层的 for 循环也可以优化。我们之前的做法是：</p> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * i; j &lt; n; j += i) </span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>这样可以把 <code>i</code> 的整数倍都标记为 <code>false</code>，但是仍然存在计算冗余。</p> <code>i</code> <code>false</code> <p>比如 <code>n = 25</code>，<code>i = 5</code> 时算法会标记 5 × 2 = 10，5 × 3 = 15 等等数字，但是这两个数字已经被 <code>i = 2</code> 和 <code>i = 3</code> 的 2 × 5 和 3 × 5 标记了。</p> <code>n = 25</code> <code>i = 5</code> <code>i = 2</code> <code>i = 3</code> <p>我们可以稍微优化一下，让 <code>j</code> 从 <code>i * i</code> 开始遍历，而不是从 <code>2 * i</code> 开始：</p> <code>j</code> <code>i * i</code> <code>2 * i</code> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i) </span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>这样，素数计数的算法就高效实现了，其实这个算法有一个名字，叫做 Sieve of Eratosthenes。看下完整的最终代码：</p> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-162-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-4\" aria-selected=\"false\">javascript</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-162-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-162-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-162-0\" aria-selected=\"true\">java</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-1\" aria-selected=\"false\">cpp</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-2\" aria-selected=\"false\">python</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-3\" aria-selected=\"false\">go</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-4\" aria-selected=\"false\">javascript</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-162-0\" aria-selected=\"true\">java</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-1\" aria-selected=\"false\">cpp</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-2\" aria-selected=\"false\">python</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-3\" aria-selected=\"false\">go</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-162-4\" aria-selected=\"false\">javascript</button> <div class=\"vp-code-tab active\" id=\"codetab-162-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    public</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">new</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[n];</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        Arrays</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">.</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(isPrime, </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i])</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = i * i; j &lt; n; j += i)</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">        int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (isPrime[i]) count++;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-162-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">public:</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        vector&lt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt; </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n, </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i * i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j = i * i; j &lt; n; j += i) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                    isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">        int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; i &lt; n; i++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[i]) {</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-162-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Solution</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">self</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        isPrime = [</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">True</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] * n</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(n ** </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0.5</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]:</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">                for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> j </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(i * i, n, i):</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                    isPrime[j] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">False</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        count = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> i </span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">in</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> range</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, n):</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> isPrime[i]: </span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">                count += </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> count</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-162-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">make</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">([]</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">)</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">        isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">    count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> := </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++ {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">            count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-162-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> countPrimes</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">new</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> Array</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">).</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">fill</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">true</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">            for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> * </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> += </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">                isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">j</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">] = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">false</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">            }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">        }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">    let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">0</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    for</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">let</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> &lt; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">; </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        if</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> (</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">isPrime</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">i</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">]) </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">++;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    </span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">    return</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> count</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_count-primes\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details id=\"div_count-primes\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>算法可视化面板</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_count-primes\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <p><strong>该算法的时间复杂度比较难算</strong>，显然时间跟这两个嵌套的 for 循环有关，其操作数应该是：</p> <strong>该算法的时间复杂度比较难算</strong> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">  n/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + n/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">7</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + ...</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span><span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">= n × (</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">2</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">3</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/</span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">5</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> + </span> <span style=\"--shiki-light:#098658;--shiki-dark:#B5CEA8;\">1</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">/7...)</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>括号中是素数的倒数。其最终结果是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>，有兴趣的读者可以查一下该算法的时间复杂度证明。</p> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <mi>N</mi> <mo>∗</mo> <mi>l</mi> <mi>o</mi> <mi>g</mi> <mi>l</mi> <mi>o</mi> <mi>g</mi> <mi>N</mi> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(N * loglogN)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span> <span class=\"mspace\" style=\"margin-right:0.2222em;\"></span> <span class=\"mbin\">∗</span> <span class=\"mspace\" style=\"margin-right:0.2222em;\"></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span> <span class=\"mord mathnormal\">o</span> <span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span> <span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span> <span class=\"mord mathnormal\">o</span> <span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span> <span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span> <span class=\"mclose\">)</span> <p>以上就是素数算法相关的全部内容。怎么样，是不是看似简单的问题却有不少细节可以打磨呀？</p> <hr> <details class=\"hint-container details\"><summary><strong>引用本文的题目</strong></summary><p><strong>安装 <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> 点开下列题目可直接查看解题思路：</strong></p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></details> <summary><strong>引用本文的题目</strong></summary> <strong>引用本文的题目</strong> <p><strong>安装 <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> 点开下列题目可直接查看解题思路：</strong></p> <strong>安装 <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> 点开下列题目可直接查看解题思路：</strong> <a href=\"https://labuladong.online/algo/intro/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">我的 Chrome 刷题插件</a> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">力扣</th> <th style=\"text-align:center;\">难度</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a></td> <a href=\"https://leetcode.com/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. Ugly Number II</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a></td> <a href=\"https://leetcode.cn/problems/ugly-number-ii/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">264. 丑数 II</a> <td style=\"text-align:center;\">🟠</td> <tr><td style=\"text-align:center;\">-</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\">-</td> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a></td> <a href=\"https://leetcode.cn/problems/chou-shu-lcof/?show=1\" target=\"_blank\" rel=\"noopener noreferrer\">剑指 Offer 49. 丑数</a> <td style=\"text-align:center;\">🟠</td> <hr> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/frequency-interview/factorial-problems/\" aria-label=\"讲两道常考的阶乘算法题\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->讲两道常考的阶乘算法题</div></a><a class=\"route-link auto-link next\" href=\"/algo/frequency-interview/quick-power/\" aria-label=\"如何高效进行模幂运算\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">如何高效进行模幂运算<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/frequency-interview/factorial-problems/\" aria-label=\"讲两道常考的阶乘算法题\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->讲两道常考的阶乘算法题</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->讲两道常考的阶乘算法题</div> <a class=\"route-link auto-link next\" href=\"/algo/frequency-interview/quick-power/\" aria-label=\"如何高效进行模幂运算\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">如何高效进行模幂运算<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">如何高效进行模幂运算<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}