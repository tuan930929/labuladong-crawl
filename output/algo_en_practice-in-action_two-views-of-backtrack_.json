{
    "url": "https://labuladong.online/algo/en/practice-in-action/two-views-of-backtrack/",
    "title": "Ball and Box: Two Perspectives of Backtracking Enumeration | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Ball and Box: Two Perspectives of Backtracking Enumeration</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 5870 words</span><meta property=\"wordCount\" content=\"5870\"></span></div><hr></div> <h1><!---->Ball and Box: Two Perspectives of Backtracking Enumeration</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 5870 words</span><meta property=\"wordCount\" content=\"5870\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 5870 words</span><meta property=\"wordCount\" content=\"5870\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 5870 words</span> <meta property=\"wordCount\" content=\"5870\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 46. Permutations https://leetcode.com/problems/permutations </h3><h3 tabindex=\"-1\"> 78. Subsets https://leetcode.com/problems/subsets </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should familiarize yourself with:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a></li></ul></div><p>Before diving into this article, you need to be familiar with the <a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a> and <a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a>.</p><p>In these two articles, readers have suggested different ways to write permutation/combination/subset code, such as using <code>swap</code> to achieve full permutations and subset solutions without for loops. I previously avoided discussing these alternative methods to maintain consistency in problem-solving approaches. Introducing too many options early on can be confusing.</p><p>In this article, I will not only introduce the backtracking algorithm methods I haven't covered before but also explain why they work and what the essential differences are between the two approaches.</p><div class=\"hint-container important\"><p class=\"hint-container-title\">Key Takeaways</p><ol><li><p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p></li><li><p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p></li><li><p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p></li></ol><p>The term \"Ball-Box Model\" is something I coined casually. I will use the \"ball\" and \"box\" perspectives to explain, so just understand the concept.</p></div><h2 id=\"brute-force-enumeration-method-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#brute-force-enumeration-method-the-ball-and-box-model\"><span>Brute-Force Enumeration Method: The Ball and Box Model</span></a></h2><p><strong>All brute-force enumeration algorithms start with the ball and box model, without exception</strong>.</p><p>Once you understand this, you can effortlessly apply brute-force enumeration algorithms. Please read the following content carefully and think deeply.</p><p>First, let's review some previously learned knowledge about permutations and combinations:</p><ol><li><p><code>P(n, k)</code> (often written as <code>A(n, k)</code> in many texts) represents the total number of permutations (or arrangements) of selecting <code>k</code> elements from <code>n</code> distinct elements; <code>C(n, k)</code> represents the total number of combinations of selecting <code>k</code> elements from <code>n</code> distinct elements.</p></li><li><p>The main difference between \"permutation\" and \"combination\" is whether the order of elements is considered.</p></li><li><p>The formulas for calculating the total number of permutations and combinations:</p></li></ol><div class=\"img-content\"><img src=\"/algo/images/set-split/math.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><h3 id=\"permutation-p-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#permutation-p-n-k\"><span>Permutation <code>P(n, k)</code></span></a></h3><p>Now, let me ask a question: how is the permutation formula <code>P(n, k)</code> derived? To clarify this, I need to discuss some concepts from combinatorial mathematics.</p><p>Various variations of permutation and combination problems can be abstracted into the \"ball and box model.\" The permutation <code>P(n, k)</code> can be represented by the following scenario:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/7-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>That is, placing <code>n</code> balls, each with a different number to indicate order, into <code>k</code> boxes, each also numbered differently (where <code>n &gt;= k</code>, and each box ends up with exactly one ball). There are <code>P(n, k)</code> different ways to do this.</p><p>Now, when you place balls into boxes, how would you do it? There are two perspectives to consider.</p><p><strong>First, from the perspective of the boxes</strong>, each box must choose one ball.</p><p>In this view, the first box can choose any of the <code>n</code> balls, and then the remaining <code>k - 1</code> boxes need to choose from the <code>n - 1</code> balls left (this is the subproblem <code>P(n - 1, k - 1)</code>):</p><div class=\"img-content\"><img src=\"/algo/images/set-split/8-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p><strong>Alternatively, from the perspective of the balls</strong>, not every ball will be placed in a box, so there are two situations:</p><ol><li><p>The first ball might not be placed in any box, leaving you to place the remaining <code>n - 1</code> balls into <code>k</code> boxes.</p></li><li><p>The first ball could be placed in any of the <code>k</code> boxes, so you would then place the remaining <code>n - 1</code> balls into <code>k - 1</code> boxes.</p></li></ol><p>Combining these two situations, we obtain:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/9-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>As you can see, the two perspectives yield two different recursive formulas, but both lead to the factorial form we are familiar with:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/math1.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>The process of solving these recursive formulas involves more mathematical content, which we will not delve into here. Interested readers are encouraged to study combinatorial mathematics on their own.</p><h3 class=\"hidden-for-toc\" id=\"combination-c-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#combination-c-n-k\"><span>Combination <code>C(n, k)</code></span></a></h3><h2 class=\"hidden-for-toc\" id=\"understand-permutation-problems-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-permutation-problems-with-the-ball-and-box-model\"><span>Understand Permutation Problems with the Ball-and-Box Model</span></a></h2><h2 class=\"hidden-for-toc\" id=\"understand-the-subset-problem-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-the-subset-problem-with-the-ball-and-box-model\"><span>Understand the Subset Problem with the Ball-and-Box Model</span></a></h2><h2 class=\"hidden-for-toc\" id=\"conclusion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#conclusion\"><span>Conclusion</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 46. Permutations https://leetcode.com/problems/permutations </h3><h3 tabindex=\"-1\"> 78. Subsets https://leetcode.com/problems/subsets </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should familiarize yourself with:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a></li></ul></div><p>Before diving into this article, you need to be familiar with the <a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a> and <a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a>.</p><p>In these two articles, readers have suggested different ways to write permutation/combination/subset code, such as using <code>swap</code> to achieve full permutations and subset solutions without for loops. I previously avoided discussing these alternative methods to maintain consistency in problem-solving approaches. Introducing too many options early on can be confusing.</p><p>In this article, I will not only introduce the backtracking algorithm methods I haven't covered before but also explain why they work and what the essential differences are between the two approaches.</p><div class=\"hint-container important\"><p class=\"hint-container-title\">Key Takeaways</p><ol><li><p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p></li><li><p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p></li><li><p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p></li></ol><p>The term \"Ball-Box Model\" is something I coined casually. I will use the \"ball\" and \"box\" perspectives to explain, so just understand the concept.</p></div><h2 id=\"brute-force-enumeration-method-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#brute-force-enumeration-method-the-ball-and-box-model\"><span>Brute-Force Enumeration Method: The Ball and Box Model</span></a></h2><p><strong>All brute-force enumeration algorithms start with the ball and box model, without exception</strong>.</p><p>Once you understand this, you can effortlessly apply brute-force enumeration algorithms. Please read the following content carefully and think deeply.</p><p>First, let's review some previously learned knowledge about permutations and combinations:</p><ol><li><p><code>P(n, k)</code> (often written as <code>A(n, k)</code> in many texts) represents the total number of permutations (or arrangements) of selecting <code>k</code> elements from <code>n</code> distinct elements; <code>C(n, k)</code> represents the total number of combinations of selecting <code>k</code> elements from <code>n</code> distinct elements.</p></li><li><p>The main difference between \"permutation\" and \"combination\" is whether the order of elements is considered.</p></li><li><p>The formulas for calculating the total number of permutations and combinations:</p></li></ol><div class=\"img-content\"><img src=\"/algo/images/set-split/math.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><h3 id=\"permutation-p-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#permutation-p-n-k\"><span>Permutation <code>P(n, k)</code></span></a></h3><p>Now, let me ask a question: how is the permutation formula <code>P(n, k)</code> derived? To clarify this, I need to discuss some concepts from combinatorial mathematics.</p><p>Various variations of permutation and combination problems can be abstracted into the \"ball and box model.\" The permutation <code>P(n, k)</code> can be represented by the following scenario:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/7-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>That is, placing <code>n</code> balls, each with a different number to indicate order, into <code>k</code> boxes, each also numbered differently (where <code>n &gt;= k</code>, and each box ends up with exactly one ball). There are <code>P(n, k)</code> different ways to do this.</p><p>Now, when you place balls into boxes, how would you do it? There are two perspectives to consider.</p><p><strong>First, from the perspective of the boxes</strong>, each box must choose one ball.</p><p>In this view, the first box can choose any of the <code>n</code> balls, and then the remaining <code>k - 1</code> boxes need to choose from the <code>n - 1</code> balls left (this is the subproblem <code>P(n - 1, k - 1)</code>):</p><div class=\"img-content\"><img src=\"/algo/images/set-split/8-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p><strong>Alternatively, from the perspective of the balls</strong>, not every ball will be placed in a box, so there are two situations:</p><ol><li><p>The first ball might not be placed in any box, leaving you to place the remaining <code>n - 1</code> balls into <code>k</code> boxes.</p></li><li><p>The first ball could be placed in any of the <code>k</code> boxes, so you would then place the remaining <code>n - 1</code> balls into <code>k - 1</code> boxes.</p></li></ol><p>Combining these two situations, we obtain:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/9-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>As you can see, the two perspectives yield two different recursive formulas, but both lead to the factorial form we are familiar with:</p><div class=\"img-content\"><img src=\"/algo/images/set-split/math1.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>The process of solving these recursive formulas involves more mathematical content, which we will not delve into here. Interested readers are encouraged to study combinatorial mathematics on their own.</p><h3 class=\"hidden-for-toc\" id=\"combination-c-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#combination-c-n-k\"><span>Combination <code>C(n, k)</code></span></a></h3><h2 class=\"hidden-for-toc\" id=\"understand-permutation-problems-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-permutation-problems-with-the-ball-and-box-model\"><span>Understand Permutation Problems with the Ball-and-Box Model</span></a></h2><h2 class=\"hidden-for-toc\" id=\"understand-the-subset-problem-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-the-subset-problem-with-the-ball-and-box-model\"><span>Understand the Subset Problem with the Ball-and-Box Model</span></a></h2><h2 class=\"hidden-for-toc\" id=\"conclusion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#conclusion\"><span>Conclusion</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 46. Permutations https://leetcode.com/problems/permutations </h3><h3 tabindex=\"-1\"> 78. Subsets https://leetcode.com/problems/subsets </h3></div> <h3 tabindex=\"-1\"> 46. Permutations https://leetcode.com/problems/permutations </h3> <h3 tabindex=\"-1\"> 78. Subsets https://leetcode.com/problems/subsets </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div> <p class=\"hint-container-title\">This article will resolve</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">Difficulty</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a></td> <a href=\"https://leetcode.com/problems/permutations/\" target=\"_blank\" rel=\"noopener noreferrer\">46. Permutations</a> <td style=\"text-align:center;\">ðŸŸ </td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a></td> <a href=\"https://leetcode.com/problems/subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">78. Subsets</a> <td style=\"text-align:center;\">ðŸŸ </td> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should familiarize yourself with:</p><ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a></li></ul></div> <p class=\"hint-container-title\">Prerequisites</p> <p>Before reading this article, you should familiarize yourself with:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a></li><li><a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/binary-tree-summary/\">Binary Tree Series Algorithms (Overview)</a> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a> <li><a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a></li> <a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a> <p>Before diving into this article, you need to be familiar with the <a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a> and <a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a>.</p> <a class=\"route-link\" href=\"/algo/en/essential-technique/backtrack-framework/\">Backtracking Algorithm Core Framework</a> <a class=\"route-link\" href=\"/algo/en/essential-technique/permutation-combination-subset-all-in-one/\">Backtracking Algorithm to Solve All Permutations/Combinations/Subsets</a> <p>In these two articles, readers have suggested different ways to write permutation/combination/subset code, such as using <code>swap</code> to achieve full permutations and subset solutions without for loops. I previously avoided discussing these alternative methods to maintain consistency in problem-solving approaches. Introducing too many options early on can be confusing.</p> <code>swap</code> <p>In this article, I will not only introduce the backtracking algorithm methods I haven't covered before but also explain why they work and what the essential differences are between the two approaches.</p> <div class=\"hint-container important\"><p class=\"hint-container-title\">Key Takeaways</p><ol><li><p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p></li><li><p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p></li><li><p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p></li></ol><p>The term \"Ball-Box Model\" is something I coined casually. I will use the \"ball\" and \"box\" perspectives to explain, so just understand the concept.</p></div> <p class=\"hint-container-title\">Key Takeaways</p> <ol><li><p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p></li><li><p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p></li><li><p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p></li></ol> <li><p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p></li> <p>The essence of the backtracking algorithm's exhaustive thinking is the \"Ball-Box Model.\" All backtracking algorithms stem from this model; there is no other way.</p> <li><p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p></li> <p>The Ball-Box Model inherently offers two exhaustive perspectives: the \"ball\" perspective and the \"box\" perspective, corresponding to two different coding approaches.</p> <li><p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p></li> <p>Theoretically, both perspectives are fundamentally the same. However, in terms of specific code implementation, one method may be more efficient than the other. You should choose the more efficient approach.</p> <p>The term \"Ball-Box Model\" is something I coined casually. I will use the \"ball\" and \"box\" perspectives to explain, so just understand the concept.</p> <h2 id=\"brute-force-enumeration-method-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#brute-force-enumeration-method-the-ball-and-box-model\"><span>Brute-Force Enumeration Method: The Ball and Box Model</span></a></h2> <a class=\"header-anchor\" href=\"#brute-force-enumeration-method-the-ball-and-box-model\"><span>Brute-Force Enumeration Method: The Ball and Box Model</span></a> <span>Brute-Force Enumeration Method: The Ball and Box Model</span> <p><strong>All brute-force enumeration algorithms start with the ball and box model, without exception</strong>.</p> <strong>All brute-force enumeration algorithms start with the ball and box model, without exception</strong> <p>Once you understand this, you can effortlessly apply brute-force enumeration algorithms. Please read the following content carefully and think deeply.</p> <p>First, let's review some previously learned knowledge about permutations and combinations:</p> <ol><li><p><code>P(n, k)</code> (often written as <code>A(n, k)</code> in many texts) represents the total number of permutations (or arrangements) of selecting <code>k</code> elements from <code>n</code> distinct elements; <code>C(n, k)</code> represents the total number of combinations of selecting <code>k</code> elements from <code>n</code> distinct elements.</p></li><li><p>The main difference between \"permutation\" and \"combination\" is whether the order of elements is considered.</p></li><li><p>The formulas for calculating the total number of permutations and combinations:</p></li></ol> <li><p><code>P(n, k)</code> (often written as <code>A(n, k)</code> in many texts) represents the total number of permutations (or arrangements) of selecting <code>k</code> elements from <code>n</code> distinct elements; <code>C(n, k)</code> represents the total number of combinations of selecting <code>k</code> elements from <code>n</code> distinct elements.</p></li> <p><code>P(n, k)</code> (often written as <code>A(n, k)</code> in many texts) represents the total number of permutations (or arrangements) of selecting <code>k</code> elements from <code>n</code> distinct elements; <code>C(n, k)</code> represents the total number of combinations of selecting <code>k</code> elements from <code>n</code> distinct elements.</p> <code>P(n, k)</code> <code>A(n, k)</code> <code>k</code> <code>n</code> <code>C(n, k)</code> <code>k</code> <code>n</code> <li><p>The main difference between \"permutation\" and \"combination\" is whether the order of elements is considered.</p></li> <p>The main difference between \"permutation\" and \"combination\" is whether the order of elements is considered.</p> <li><p>The formulas for calculating the total number of permutations and combinations:</p></li> <p>The formulas for calculating the total number of permutations and combinations:</p> <div class=\"img-content\"><img src=\"/algo/images/set-split/math.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/set-split/math.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <h3 id=\"permutation-p-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#permutation-p-n-k\"><span>Permutation <code>P(n, k)</code></span></a></h3> <a class=\"header-anchor\" href=\"#permutation-p-n-k\"><span>Permutation <code>P(n, k)</code></span></a> <span>Permutation <code>P(n, k)</code></span> <code>P(n, k)</code> <p>Now, let me ask a question: how is the permutation formula <code>P(n, k)</code> derived? To clarify this, I need to discuss some concepts from combinatorial mathematics.</p> <code>P(n, k)</code> <p>Various variations of permutation and combination problems can be abstracted into the \"ball and box model.\" The permutation <code>P(n, k)</code> can be represented by the following scenario:</p> <code>P(n, k)</code> <div class=\"img-content\"><img src=\"/algo/images/set-split/7-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/set-split/7-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>That is, placing <code>n</code> balls, each with a different number to indicate order, into <code>k</code> boxes, each also numbered differently (where <code>n &gt;= k</code>, and each box ends up with exactly one ball). There are <code>P(n, k)</code> different ways to do this.</p> <code>n</code> <code>k</code> <code>n &gt;= k</code> <code>P(n, k)</code> <p>Now, when you place balls into boxes, how would you do it? There are two perspectives to consider.</p> <p><strong>First, from the perspective of the boxes</strong>, each box must choose one ball.</p> <strong>First, from the perspective of the boxes</strong> <p>In this view, the first box can choose any of the <code>n</code> balls, and then the remaining <code>k - 1</code> boxes need to choose from the <code>n - 1</code> balls left (this is the subproblem <code>P(n - 1, k - 1)</code>):</p> <code>n</code> <code>k - 1</code> <code>n - 1</code> <code>P(n - 1, k - 1)</code> <div class=\"img-content\"><img src=\"/algo/images/set-split/8-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/set-split/8-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p><strong>Alternatively, from the perspective of the balls</strong>, not every ball will be placed in a box, so there are two situations:</p> <strong>Alternatively, from the perspective of the balls</strong> <ol><li><p>The first ball might not be placed in any box, leaving you to place the remaining <code>n - 1</code> balls into <code>k</code> boxes.</p></li><li><p>The first ball could be placed in any of the <code>k</code> boxes, so you would then place the remaining <code>n - 1</code> balls into <code>k - 1</code> boxes.</p></li></ol> <li><p>The first ball might not be placed in any box, leaving you to place the remaining <code>n - 1</code> balls into <code>k</code> boxes.</p></li> <p>The first ball might not be placed in any box, leaving you to place the remaining <code>n - 1</code> balls into <code>k</code> boxes.</p> <code>n - 1</code> <code>k</code> <li><p>The first ball could be placed in any of the <code>k</code> boxes, so you would then place the remaining <code>n - 1</code> balls into <code>k - 1</code> boxes.</p></li> <p>The first ball could be placed in any of the <code>k</code> boxes, so you would then place the remaining <code>n - 1</code> balls into <code>k - 1</code> boxes.</p> <code>k</code> <code>n - 1</code> <code>k - 1</code> <p>Combining these two situations, we obtain:</p> <div class=\"img-content\"><img src=\"/algo/images/set-split/9-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/set-split/9-en.jpeg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>As you can see, the two perspectives yield two different recursive formulas, but both lead to the factorial form we are familiar with:</p> <div class=\"img-content\"><img src=\"/algo/images/set-split/math1.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/set-split/math1.png\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>The process of solving these recursive formulas involves more mathematical content, which we will not delve into here. Interested readers are encouraged to study combinatorial mathematics on their own.</p> <h3 class=\"hidden-for-toc\" id=\"combination-c-n-k\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#combination-c-n-k\"><span>Combination <code>C(n, k)</code></span></a></h3> <a class=\"header-anchor\" href=\"#combination-c-n-k\"><span>Combination <code>C(n, k)</code></span></a> <span>Combination <code>C(n, k)</code></span> <code>C(n, k)</code> <h2 class=\"hidden-for-toc\" id=\"understand-permutation-problems-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-permutation-problems-with-the-ball-and-box-model\"><span>Understand Permutation Problems with the Ball-and-Box Model</span></a></h2> <a class=\"header-anchor\" href=\"#understand-permutation-problems-with-the-ball-and-box-model\"><span>Understand Permutation Problems with the Ball-and-Box Model</span></a> <span>Understand Permutation Problems with the Ball-and-Box Model</span> <h2 class=\"hidden-for-toc\" id=\"understand-the-subset-problem-with-the-ball-and-box-model\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#understand-the-subset-problem-with-the-ball-and-box-model\"><span>Understand the Subset Problem with the Ball-and-Box Model</span></a></h2> <a class=\"header-anchor\" href=\"#understand-the-subset-problem-with-the-ball-and-box-model\"><span>Understand the Subset Problem with the Ball-and-Box Model</span></a> <span>Understand the Subset Problem with the Ball-and-Box Model</span> <h2 class=\"hidden-for-toc\" id=\"conclusion\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#conclusion\"><span>Conclusion</span></a></h2> <a class=\"header-anchor\" href=\"#conclusion\"><span>Conclusion</span></a> <span>Conclusion</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/game/minesweeper-ii/\" aria-label=\"Minesweeper Game II\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Minesweeper Game II</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/practice-in-action/generate-parentheses/\" aria-label=\"Backtracking Algorithm Practice: Generating Valid Parentheses\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Backtracking Algorithm Practice: Generating Valid Parentheses<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/game/minesweeper-ii/\" aria-label=\"Minesweeper Game II\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Minesweeper Game II</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Minesweeper Game II</div> <a class=\"route-link auto-link next\" href=\"/algo/en/practice-in-action/generate-parentheses/\" aria-label=\"Backtracking Algorithm Practice: Generating Valid Parentheses\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Backtracking Algorithm Practice: Generating Valid Parentheses<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Backtracking Algorithm Practice: Generating Valid Parentheses<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}