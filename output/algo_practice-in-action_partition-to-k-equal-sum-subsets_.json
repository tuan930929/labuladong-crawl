{
    "url": "https://labuladong.online/algo/practice-in-action/partition-to-k-equal-sum-subsets/",
    "title": "回溯算法实践：集合划分 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->回溯算法实践：集合划分</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 6349 字</span><meta property=\"wordCount\" content=\"6349\"></span></div><hr></div> <h1><!---->回溯算法实践：集合划分</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 6349 字</span><meta property=\"wordCount\" content=\"6349\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 6349 字</span><meta property=\"wordCount\" content=\"6349\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 6349 字</span> <meta property=\"wordCount\" content=\"6349\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 698. 划分为k个相等的子集 https://leetcode.cn/problems/partition-to-k-equal-sum-subsets </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a></li><li><a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a></li></ul></div><p>我之前说过回溯算法是笔试中最好用的算法，只要你没什么思路，就用回溯算法暴力求解，即便不能通过所有测试用例，多少能过一点。回溯算法的技巧也不算难，就是穷举一棵决策树的过程，只要在递归之前「做选择」，在递归之后「撤销选择」就行了。</p><p><strong>但是，就算暴力穷举，不同的思路也有优劣之分</strong>。本文就来看一道非常经典的回溯算法问题，力扣第 698 题「<a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">划分为k个相等的子集</a>」。这道题可以帮你更深刻理解回溯算法的思维，得心应手地写出回溯函数。</p><p>题目非常简单：</p><p>给你输入一个数组 <code>nums</code> 和一个正整数 <code>k</code>，请你判断 <code>nums</code> 是否能够被平分为元素和相同的 <code>k</code> 个子集。</p><p>函数签名如下：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-75-0\" aria-selected=\"true\">java 🟢</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-1\" aria-selected=\"false\">cpp 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-2\" aria-selected=\"false\">python 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-3\" aria-selected=\"false\">go 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-4\" aria-selected=\"false\">javascript 🤖</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-75-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java 🟢</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp 🤖</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python 🤖</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go 🤖</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript 🤖</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div class=\"hint-container info\"><p class=\"hint-container-title\">思考题</p><p>我们之前 <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 写过一次子集划分问题，不过那道题只需要我们把集合划分成两个相等的集合，可以转化成背包问题用动态规划技巧解决。</p><p>为什么划分成两个相等的子集可以转化成背包问题用动态规划思路解决，而划分成 <code>k</code> 个相等的子集就不可以转化成背包问题，只能用回溯算法暴力穷举？请先尝试自己思考。</p></div><details class=\"hint-container details\"><summary>思考题答案</summary><p>为什么划分两个相等的子集可以转化成背包问题？</p><p><a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 的场景中，有一个背包和若干物品，每个物品有<strong>两个选择</strong>，分别是「装进背包」和「不装进背包」。把原集合 <code>S</code> 划分成两个相等子集 <code>S_1, S_2</code> 的场景下，<code>S</code> 中的每个元素也有<strong>两个选择</strong>，分别是「装进 <code>S_1</code>」和「不装进 <code>S_1</code>（装进 <code>S_2</code>）」，这时候的穷举思路其实和背包问题相同。</p><p>但如果你想把 <code>S</code> 划分成 <code>k</code> 个相等的子集，相当于 <code>S</code> 中的每个元素有 <strong><code>k</code> 个选择</strong>，这和标准背包问题的场景有本质区别，是无法套用背包问题的解题思路的。</p></details><h2 class=\"hidden-for-toc\" id=\"题目思路\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%A2%98%E7%9B%AE%E6%80%9D%E8%B7%AF\"><span>题目思路</span></a></h2><h2 class=\"hidden-for-toc\" id=\"以数字的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以数字的视角</span></a></h2><h2 class=\"hidden-for-toc\" id=\"以桶的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%A1%B6%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以桶的视角</span></a></h2><h2 class=\"hidden-for-toc\" id=\"最后总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E%E6%80%BB%E7%BB%93\"><span>最后总结</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 698. 划分为k个相等的子集 https://leetcode.cn/problems/partition-to-k-equal-sum-subsets </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a></li><li><a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a></li></ul></div><p>我之前说过回溯算法是笔试中最好用的算法，只要你没什么思路，就用回溯算法暴力求解，即便不能通过所有测试用例，多少能过一点。回溯算法的技巧也不算难，就是穷举一棵决策树的过程，只要在递归之前「做选择」，在递归之后「撤销选择」就行了。</p><p><strong>但是，就算暴力穷举，不同的思路也有优劣之分</strong>。本文就来看一道非常经典的回溯算法问题，力扣第 698 题「<a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">划分为k个相等的子集</a>」。这道题可以帮你更深刻理解回溯算法的思维，得心应手地写出回溯函数。</p><p>题目非常简单：</p><p>给你输入一个数组 <code>nums</code> 和一个正整数 <code>k</code>，请你判断 <code>nums</code> 是否能够被平分为元素和相同的 <code>k</code> 个子集。</p><p>函数签名如下：</p><div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-75-0\" aria-selected=\"true\">java 🟢</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-1\" aria-selected=\"false\">cpp 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-2\" aria-selected=\"false\">python 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-3\" aria-selected=\"false\">go 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-4\" aria-selected=\"false\">javascript 🤖</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-75-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java 🟢</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp 🤖</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python 🤖</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go 🤖</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript 🤖</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div><div class=\"hint-container info\"><p class=\"hint-container-title\">思考题</p><p>我们之前 <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 写过一次子集划分问题，不过那道题只需要我们把集合划分成两个相等的集合，可以转化成背包问题用动态规划技巧解决。</p><p>为什么划分成两个相等的子集可以转化成背包问题用动态规划思路解决，而划分成 <code>k</code> 个相等的子集就不可以转化成背包问题，只能用回溯算法暴力穷举？请先尝试自己思考。</p></div><details class=\"hint-container details\"><summary>思考题答案</summary><p>为什么划分两个相等的子集可以转化成背包问题？</p><p><a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 的场景中，有一个背包和若干物品，每个物品有<strong>两个选择</strong>，分别是「装进背包」和「不装进背包」。把原集合 <code>S</code> 划分成两个相等子集 <code>S_1, S_2</code> 的场景下，<code>S</code> 中的每个元素也有<strong>两个选择</strong>，分别是「装进 <code>S_1</code>」和「不装进 <code>S_1</code>（装进 <code>S_2</code>）」，这时候的穷举思路其实和背包问题相同。</p><p>但如果你想把 <code>S</code> 划分成 <code>k</code> 个相等的子集，相当于 <code>S</code> 中的每个元素有 <strong><code>k</code> 个选择</strong>，这和标准背包问题的场景有本质区别，是无法套用背包问题的解题思路的。</p></details><h2 class=\"hidden-for-toc\" id=\"题目思路\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%A2%98%E7%9B%AE%E6%80%9D%E8%B7%AF\"><span>题目思路</span></a></h2><h2 class=\"hidden-for-toc\" id=\"以数字的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以数字的视角</span></a></h2><h2 class=\"hidden-for-toc\" id=\"以桶的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%A1%B6%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以桶的视角</span></a></h2><h2 class=\"hidden-for-toc\" id=\"最后总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E%E6%80%BB%E7%BB%93\"><span>最后总结</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 698. 划分为k个相等的子集 https://leetcode.cn/problems/partition-to-k-equal-sum-subsets </h3></div> <h3 tabindex=\"-1\"> 698. 划分为k个相等的子集 https://leetcode.cn/problems/partition-to-k-equal-sum-subsets </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div> <p class=\"hint-container-title\">本文讲解的例题</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">力扣</th> <th style=\"text-align:center;\">难度</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a></td> <a href=\"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. Partition to K Equal Sum Subsets</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a></td> <a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">698. 划分为k个相等的子集</a> <td style=\"text-align:center;\">🟠</td> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a></li><li><a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a></li><li><a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a></li><li><a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/n-ary-tree-traverse-basic/\">多叉树结构及遍历框架</a> <li><a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a></li> <a class=\"route-link\" href=\"/algo/essential-technique/binary-tree-summary/\">二叉树系列算法（纲领篇）</a> <li><a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a></li> <a class=\"route-link\" href=\"/algo/essential-technique/backtrack-framework/\">回溯算法框架套路</a> <li><a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a></li> <a class=\"route-link\" href=\"/algo/practice-in-action/two-views-of-backtrack/\">球盒模型：回溯算法的两种穷举视角</a> <p>我之前说过回溯算法是笔试中最好用的算法，只要你没什么思路，就用回溯算法暴力求解，即便不能通过所有测试用例，多少能过一点。回溯算法的技巧也不算难，就是穷举一棵决策树的过程，只要在递归之前「做选择」，在递归之后「撤销选择」就行了。</p> <p><strong>但是，就算暴力穷举，不同的思路也有优劣之分</strong>。本文就来看一道非常经典的回溯算法问题，力扣第 698 题「<a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">划分为k个相等的子集</a>」。这道题可以帮你更深刻理解回溯算法的思维，得心应手地写出回溯函数。</p> <strong>但是，就算暴力穷举，不同的思路也有优劣之分</strong> <a href=\"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/\" target=\"_blank\" rel=\"noopener noreferrer\">划分为k个相等的子集</a> <p>题目非常简单：</p> <p>给你输入一个数组 <code>nums</code> 和一个正整数 <code>k</code>，请你判断 <code>nums</code> 是否能够被平分为元素和相同的 <code>k</code> 个子集。</p> <code>nums</code> <code>k</code> <code>nums</code> <code>k</code> <p>函数签名如下：</p> <div class=\"vp-code-tabs\"><div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-75-0\" aria-selected=\"true\">java 🟢</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-1\" aria-selected=\"false\">cpp 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-2\" aria-selected=\"false\">python 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-3\" aria-selected=\"false\">go 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-4\" aria-selected=\"false\">javascript 🤖</button></div><!--[--><div class=\"vp-code-tab active\" id=\"codetab-75-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java 🟢</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp 🤖</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python 🤖</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go 🤖</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div><div class=\"vp-code-tab\" id=\"codetab-75-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript 🤖</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div><!--]--></div> <div class=\"vp-code-tabs-nav\" role=\"tablist\"><button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-75-0\" aria-selected=\"true\">java 🟢</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-1\" aria-selected=\"false\">cpp 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-2\" aria-selected=\"false\">python 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-3\" aria-selected=\"false\">go 🤖</button><button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-4\" aria-selected=\"false\">javascript 🤖</button></div> <button type=\"button\" class=\"vp-code-tab-nav active\" role=\"tab\" aria-controls=\"codetab-75-0\" aria-selected=\"true\">java 🟢</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-1\" aria-selected=\"false\">cpp 🤖</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-2\" aria-selected=\"false\">python 🤖</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-3\" aria-selected=\"false\">go 🤖</button> <button type=\"button\" class=\"vp-code-tab-nav\" role=\"tab\" aria-controls=\"codetab-75-4\" aria-selected=\"false\">javascript 🤖</button> <div class=\"vp-code-tab active\" id=\"codetab-75-0\" role=\"tabpanel\" aria-expanded=\"true\"><div class=\"vp-code-tab-title\">java 🟢</div><!--[--><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">java 🟢</div> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">boolean</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] nums, </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> k);</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-75-1\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">cpp 🤖</div><!--[--><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">cpp 🤖</div> <div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">bool</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">vector</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&lt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">&gt;</span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">&amp;</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> k</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">);</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-75-2\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">python 🤖</div><!--[--><div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">python 🤖</div> <div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">def</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: List[</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">], </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">: </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) -&gt; </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">:</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-75-3\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">go 🤖</div><!--[--><div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">go 🤖</div> <div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">func</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> []</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">bool</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"vp-code-tab\" id=\"codetab-75-4\" role=\"tabpanel\" aria-expanded=\"false\"><div class=\"vp-code-tab-title\">javascript 🤖</div><!--[--><div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><!--]--></div> <div class=\"vp-code-tab-title\">javascript 🤖</div> <div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">var</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> canPartitionKSubsets</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> = </span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">function</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">nums</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">k</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">};</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">思考题</p><p>我们之前 <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 写过一次子集划分问题，不过那道题只需要我们把集合划分成两个相等的集合，可以转化成背包问题用动态规划技巧解决。</p><p>为什么划分成两个相等的子集可以转化成背包问题用动态规划思路解决，而划分成 <code>k</code> 个相等的子集就不可以转化成背包问题，只能用回溯算法暴力穷举？请先尝试自己思考。</p></div> <p class=\"hint-container-title\">思考题</p> <p>我们之前 <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 写过一次子集划分问题，不过那道题只需要我们把集合划分成两个相等的集合，可以转化成背包问题用动态规划技巧解决。</p> <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> <p>为什么划分成两个相等的子集可以转化成背包问题用动态规划思路解决，而划分成 <code>k</code> 个相等的子集就不可以转化成背包问题，只能用回溯算法暴力穷举？请先尝试自己思考。</p> <code>k</code> <details class=\"hint-container details\"><summary>思考题答案</summary><p>为什么划分两个相等的子集可以转化成背包问题？</p><p><a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 的场景中，有一个背包和若干物品，每个物品有<strong>两个选择</strong>，分别是「装进背包」和「不装进背包」。把原集合 <code>S</code> 划分成两个相等子集 <code>S_1, S_2</code> 的场景下，<code>S</code> 中的每个元素也有<strong>两个选择</strong>，分别是「装进 <code>S_1</code>」和「不装进 <code>S_1</code>（装进 <code>S_2</code>）」，这时候的穷举思路其实和背包问题相同。</p><p>但如果你想把 <code>S</code> 划分成 <code>k</code> 个相等的子集，相当于 <code>S</code> 中的每个元素有 <strong><code>k</code> 个选择</strong>，这和标准背包问题的场景有本质区别，是无法套用背包问题的解题思路的。</p></details> <summary>思考题答案</summary> <p>为什么划分两个相等的子集可以转化成背包问题？</p> <p><a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> 的场景中，有一个背包和若干物品，每个物品有<strong>两个选择</strong>，分别是「装进背包」和「不装进背包」。把原集合 <code>S</code> 划分成两个相等子集 <code>S_1, S_2</code> 的场景下，<code>S</code> 中的每个元素也有<strong>两个选择</strong>，分别是「装进 <code>S_1</code>」和「不装进 <code>S_1</code>（装进 <code>S_2</code>）」，这时候的穷举思路其实和背包问题相同。</p> <a class=\"route-link\" href=\"/algo/dynamic-programming/knapsack2/\">背包问题之子集划分</a> <strong>两个选择</strong> <code>S</code> <code>S_1, S_2</code> <code>S</code> <strong>两个选择</strong> <code>S_1</code> <code>S_1</code> <code>S_2</code> <p>但如果你想把 <code>S</code> 划分成 <code>k</code> 个相等的子集，相当于 <code>S</code> 中的每个元素有 <strong><code>k</code> 个选择</strong>，这和标准背包问题的场景有本质区别，是无法套用背包问题的解题思路的。</p> <code>S</code> <code>k</code> <code>S</code> <strong><code>k</code> 个选择</strong> <code>k</code> <h2 class=\"hidden-for-toc\" id=\"题目思路\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E9%A2%98%E7%9B%AE%E6%80%9D%E8%B7%AF\"><span>题目思路</span></a></h2> <a class=\"header-anchor\" href=\"#%E9%A2%98%E7%9B%AE%E6%80%9D%E8%B7%AF\"><span>题目思路</span></a> <span>题目思路</span> <h2 class=\"hidden-for-toc\" id=\"以数字的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以数字的视角</span></a></h2> <a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以数字的视角</span></a> <span>以数字的视角</span> <h2 class=\"hidden-for-toc\" id=\"以桶的视角\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%A1%B6%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以桶的视角</span></a></h2> <a class=\"header-anchor\" href=\"#%E4%BB%A5%E6%A1%B6%E7%9A%84%E8%A7%86%E8%A7%92\"><span>以桶的视角</span></a> <span>以桶的视角</span> <h2 class=\"hidden-for-toc\" id=\"最后总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E%E6%80%BB%E7%BB%93\"><span>最后总结</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E%E6%80%BB%E7%BB%93\"><span>最后总结</span></a> <span>最后总结</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/practice-in-action/generate-parentheses/\" aria-label=\"回溯算法实践：括号生成\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->回溯算法实践：括号生成</div></a><a class=\"route-link auto-link next\" href=\"/algo/problem-set/backtrack-i/\" aria-label=\"【练习】回溯算法经典习题 I\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">【练习】回溯算法经典习题 I<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/practice-in-action/generate-parentheses/\" aria-label=\"回溯算法实践：括号生成\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->回溯算法实践：括号生成</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->回溯算法实践：括号生成</div> <a class=\"route-link auto-link next\" href=\"/algo/problem-set/backtrack-i/\" aria-label=\"【练习】回溯算法经典习题 I\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">【练习】回溯算法经典习题 I<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">【练习】回溯算法经典习题 I<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}