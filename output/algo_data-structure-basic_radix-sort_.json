{
    "url": "https://labuladong.online/algo/data-structure-basic/radix-sort/",
    "title": "基数排序（Radix Sort） | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->基数排序（Radix Sort）</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2943 字</span><meta property=\"wordCount\" content=\"2943\"></span></div><hr></div> <h1><!---->基数排序（Radix Sort）</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2943 字</span><meta property=\"wordCount\" content=\"2943\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2943 字</span><meta property=\"wordCount\" content=\"2943\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 2943 字</span> <meta property=\"wordCount\" content=\"2943\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>基数排序是 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 算法的扩展，它的主要思路是对待排序元素的每一位依次进行计数排序。由于计数排序是稳定的，所以对每一位完成计数排序后，所有元素就完成了排序。</p></div><div class=\"viz-template\"><!--[--><p>点击 <code type=\"click\">let maxLen = 0</code> 这一行代码，可以看到算法将数组元素都转化为了非负数；多次点击 <code type=\"click\">countSort(nums, k)</code> 这一行代码，对每一位执行计数排序；最后点击 <code type=\"click\">nums[i] -= offset</code> 这一行代码，将数组元素转化回原来的值，完成排序：</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_radix-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>首先解释一下基数排序（Radix Sort）这个名词。</p><p>基数（Radix）其实就是进制的意思，比如十进制数的基数就是 10，二进制数的基数就是 2。看这个名字就知道这个排序算法肯定和数字的进制有关，进而可以推断，这个算法不是通用排序算法，待排序数据必须是整数，或者能够通过某种规则转化成整数，才能使用基数排序。</p><p>我发现网上的很多资料会把基数排序和桶排序放在一起，认为基数排序是桶排序的应用。</p><p>但我不认同这种看法，我认为基数排序是计数排序的扩展，可以用来解决计数排序空间复杂度过高的问题，和桶排序关系不大。</p><p>现在你已经学习过 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 和 <a class=\"route-link\" href=\"/algo/data-structure-basic/bucket-sort/\">桶排序</a> 了，在我介绍了基数排序的原理后，你也可以自己思考一下，它是到底是计数排序的扩展还是桶排序的扩展。</p><h2 id=\"基数排序的原理\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8E%9F%E7%90%86\"><span>基数排序的原理</span></a></h2><p>基数排序的原理很简单，比方说输入的数组都是三位数 <code>nums = [329, 457, 839, 439, 720, 355, 350]</code>，我们先按照个位数排序，然后按照十位数排序，然后按照百位数排序，最终就完成了整个数组的排序。</p><p><strong>这里面的关键在于，对每一位的排序都必须是稳定排序，否则最终结果就不对了</strong>。</p><p>用这个 <code>nums</code> 数组为例，演示一下基数排序的过程，我把每个数字竖着写，方便查看每一位的排序效果。</p><p>首先是初始状态：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>350</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>按照个位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>  ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再按照十位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span> ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最后按照百位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面就是基数排序的过程，在给出解法代码之前，先解答一些关于基数排序的问题：</p><p>1、为什么对每一位必须使用稳定排序？</p><p>2、使用什么稳定排序比较好，为什么？</p><p>3、如果待排序数组中的数字不全是三位数，怎么办？有负数怎么办？</p><p>4、必须按照从个位数到高位数的顺序进行排序吗？是否可以反过来，从高位数到个位数进行排序？</p><h3 id=\"为什么对每一位必须使用稳定排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%BD%8D%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F\"><span>为什么对每一位必须使用稳定排序</span></a></h3><p>举个很简单的例子：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>56</span></span>\n<span class=\"line\"><span>57</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>个位数已经排好序了，现在要对十位数排序。</p><p>十位数都是 5，稳定排序可以保证这两个 5 的顺序不变，最终的结果就是正确的；而如果使用不稳定排序，这两个 5 的顺序就可能被打乱，最终的结果就不对了。</p><h3 class=\"hidden-for-toc\" id=\"使用什么稳定排序比较好\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E6%AF%94%E8%BE%83%E5%A5%BD\"><span>使用什么稳定排序比较好</span></a></h3><h3 class=\"hidden-for-toc\" id=\"位数不同怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%8D%E6%95%B0%E4%B8%8D%E5%90%8C%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>位数不同怎么办</span></a></h3><h3 class=\"hidden-for-toc\" id=\"有负数怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%89%E8%B4%9F%E6%95%B0%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>有负数怎么办</span></a></h3><h3 class=\"hidden-for-toc\" id=\"必须从低位到高位吗-lsd-和-msd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%BF%85%E9%A1%BB%E4%BB%8E%E4%BD%8E%E4%BD%8D%E5%88%B0%E9%AB%98%E4%BD%8D%E5%90%97-lsd-%E5%92%8C-msd\"><span>必须从低位到高位吗（LSD 和 MSD）</span></a></h3><h3 class=\"hidden-for-toc\" id=\"msd-算法逻辑\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#msd-%E7%AE%97%E6%B3%95%E9%80%BB%E8%BE%91\"><span>MSD 算法逻辑</span></a></h3><h2 class=\"hidden-for-toc\" id=\"lsd-代码实现\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lsd-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span>LSD 代码实现</span></a></h2><h2 class=\"hidden-for-toc\" id=\"时空复杂度及稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>时空复杂度及稳定性</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>基数排序是 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 算法的扩展，它的主要思路是对待排序元素的每一位依次进行计数排序。由于计数排序是稳定的，所以对每一位完成计数排序后，所有元素就完成了排序。</p></div><div class=\"viz-template\"><!--[--><p>点击 <code type=\"click\">let maxLen = 0</code> 这一行代码，可以看到算法将数组元素都转化为了非负数；多次点击 <code type=\"click\">countSort(nums, k)</code> 这一行代码，对每一位执行计数排序；最后点击 <code type=\"click\">nums[i] -= offset</code> 这一行代码，将数组元素转化回原来的值，完成排序：</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_radix-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div><p>首先解释一下基数排序（Radix Sort）这个名词。</p><p>基数（Radix）其实就是进制的意思，比如十进制数的基数就是 10，二进制数的基数就是 2。看这个名字就知道这个排序算法肯定和数字的进制有关，进而可以推断，这个算法不是通用排序算法，待排序数据必须是整数，或者能够通过某种规则转化成整数，才能使用基数排序。</p><p>我发现网上的很多资料会把基数排序和桶排序放在一起，认为基数排序是桶排序的应用。</p><p>但我不认同这种看法，我认为基数排序是计数排序的扩展，可以用来解决计数排序空间复杂度过高的问题，和桶排序关系不大。</p><p>现在你已经学习过 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 和 <a class=\"route-link\" href=\"/algo/data-structure-basic/bucket-sort/\">桶排序</a> 了，在我介绍了基数排序的原理后，你也可以自己思考一下，它是到底是计数排序的扩展还是桶排序的扩展。</p><h2 id=\"基数排序的原理\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8E%9F%E7%90%86\"><span>基数排序的原理</span></a></h2><p>基数排序的原理很简单，比方说输入的数组都是三位数 <code>nums = [329, 457, 839, 439, 720, 355, 350]</code>，我们先按照个位数排序，然后按照十位数排序，然后按照百位数排序，最终就完成了整个数组的排序。</p><p><strong>这里面的关键在于，对每一位的排序都必须是稳定排序，否则最终结果就不对了</strong>。</p><p>用这个 <code>nums</code> 数组为例，演示一下基数排序的过程，我把每个数字竖着写，方便查看每一位的排序效果。</p><p>首先是初始状态：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>350</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>按照个位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>  ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再按照十位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span> ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最后按照百位数进行稳定排序，得到：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面就是基数排序的过程，在给出解法代码之前，先解答一些关于基数排序的问题：</p><p>1、为什么对每一位必须使用稳定排序？</p><p>2、使用什么稳定排序比较好，为什么？</p><p>3、如果待排序数组中的数字不全是三位数，怎么办？有负数怎么办？</p><p>4、必须按照从个位数到高位数的顺序进行排序吗？是否可以反过来，从高位数到个位数进行排序？</p><h3 id=\"为什么对每一位必须使用稳定排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%BD%8D%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F\"><span>为什么对每一位必须使用稳定排序</span></a></h3><p>举个很简单的例子：</p><div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>56</span></span>\n<span class=\"line\"><span>57</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>个位数已经排好序了，现在要对十位数排序。</p><p>十位数都是 5，稳定排序可以保证这两个 5 的顺序不变，最终的结果就是正确的；而如果使用不稳定排序，这两个 5 的顺序就可能被打乱，最终的结果就不对了。</p><h3 class=\"hidden-for-toc\" id=\"使用什么稳定排序比较好\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E6%AF%94%E8%BE%83%E5%A5%BD\"><span>使用什么稳定排序比较好</span></a></h3><h3 class=\"hidden-for-toc\" id=\"位数不同怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%8D%E6%95%B0%E4%B8%8D%E5%90%8C%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>位数不同怎么办</span></a></h3><h3 class=\"hidden-for-toc\" id=\"有负数怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%89%E8%B4%9F%E6%95%B0%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>有负数怎么办</span></a></h3><h3 class=\"hidden-for-toc\" id=\"必须从低位到高位吗-lsd-和-msd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%BF%85%E9%A1%BB%E4%BB%8E%E4%BD%8E%E4%BD%8D%E5%88%B0%E9%AB%98%E4%BD%8D%E5%90%97-lsd-%E5%92%8C-msd\"><span>必须从低位到高位吗（LSD 和 MSD）</span></a></h3><h3 class=\"hidden-for-toc\" id=\"msd-算法逻辑\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#msd-%E7%AE%97%E6%B3%95%E9%80%BB%E8%BE%91\"><span>MSD 算法逻辑</span></a></h3><h2 class=\"hidden-for-toc\" id=\"lsd-代码实现\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lsd-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span>LSD 代码实现</span></a></h2><h2 class=\"hidden-for-toc\" id=\"时空复杂度及稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>时空复杂度及稳定性</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/sort-basic/\">排序算法的关键指标</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>基数排序是 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 算法的扩展，它的主要思路是对待排序元素的每一位依次进行计数排序。由于计数排序是稳定的，所以对每一位完成计数排序后，所有元素就完成了排序。</p></div> <p class=\"hint-container-title\">一句话总结</p> <p>基数排序是 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 算法的扩展，它的主要思路是对待排序元素的每一位依次进行计数排序。由于计数排序是稳定的，所以对每一位完成计数排序后，所有元素就完成了排序。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> <div class=\"viz-template\"><!--[--><p>点击 <code type=\"click\">let maxLen = 0</code> 这一行代码，可以看到算法将数组元素都转化为了非负数；多次点击 <code type=\"click\">countSort(nums, k)</code> 这一行代码，对每一位执行计数排序；最后点击 <code type=\"click\">nums[i] -= offset</code> 这一行代码，将数组元素转化回原来的值，完成排序：</p><!--]--><div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_radix-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div></div> <p>点击 <code type=\"click\">let maxLen = 0</code> 这一行代码，可以看到算法将数组元素都转化为了非负数；多次点击 <code type=\"click\">countSort(nums, k)</code> 这一行代码，对每一位执行计数排序；最后点击 <code type=\"click\">nums[i] -= offset</code> 这一行代码，将数组元素转化回原来的值，完成排序：</p> <code type=\"click\">let maxLen = 0</code> <code type=\"click\">countSort(nums, k)</code> <code type=\"click\">nums[i] -= offset</code> <div data-v-ee1a9bd0><a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a><details id=\"div_radix-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details></div> <a style=\"display:none;\" href=\"\" data-v-ee1a9bd0> Algorithm visualize </a> <details id=\"div_radix-sort\" class=\"hint-container details\" data-v-ee1a9bd0><summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary><div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div></details> <summary style=\"font-size:large;\" data-v-ee1a9bd0><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg>   <strong data-v-ee1a9bd0>算法可视化面板</strong><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg><span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span></summary> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path><path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"m4.415 18.167l7.17-7.17l1.414 1.414l-7.17 7.17z\" opacity=\"0.3\" data-v-ee1a9bd0></path> <path fill=\"currentColor\" d=\"m20 7l.94-2.06L23 4l-2.06-.94L20 1l-.94 2.06L17 4l2.06.94zM8.5 7l.94-2.06L11.5 4l-2.06-.94L8.5 1l-.94 2.06L5.5 4l2.06.94zM20 12.5l-.94 2.06l-2.06.94l2.06.94l.94 2.06l.94-2.06L23 15.5l-2.06-.94zm-2.29-3.38l-2.83-2.83c-.2-.19-.45-.29-.71-.29s-.51.1-.71.29L2.29 17.46a.996.996 0 0 0 0 1.41l2.83 2.83c.2.2.45.3.71.3s.51-.1.71-.29l11.17-11.17c.39-.39.39-1.03 0-1.42M5.83 19.59l-1.41-1.41L11.59 11L13 12.41zM14.41 11L13 9.59l1.17-1.17l1.41 1.41z\" data-v-ee1a9bd0></path> <strong data-v-ee1a9bd0>算法可视化面板</strong> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.9em\" height=\"0.9em\" viewbox=\"0 0 24 24\" style=\"margin-left:auto;margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M20 20v1h1v-1zm-4.293-5.707a1 1 0 0 0-1.414 1.414zM19 14v6h2v-6zm1 5h-6v2h6zm.707.293l-5-5l-1.414 1.414l5 5zM4 20H3v1h1zm5.707-4.293a1 1 0 0 0-1.414-1.414zM3 14v6h2v-6zm1 7h6v-2H4zm.707-.293l5-5l-1.414-1.414l-5 5zM20 4h1V3h-1zm-5.707 4.293a1 1 0 0 0 1.414 1.414zM21 10V4h-2v6zm-1-7h-6v2h6zm-.707.293l-5 5l1.414 1.414l5-5zM4 4V3H3v1zm4.293 5.707a1 1 0 0 0 1.414-1.414zM5 10V4H3v6zM4 5h6V3H4zm-.707-.293l5 5l1.414-1.414l-5-5z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" style=\"margin-right:10px;\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17.65 6.35a7.95 7.95 0 0 0-6.48-2.31c-3.67.37-6.69 3.35-7.1 7.02C3.52 15.91 7.27 20 12 20a7.98 7.98 0 0 0 7.21-4.56c.32-.67-.16-1.44-.9-1.44c-.37 0-.72.2-.88.53a5.994 5.994 0 0 1-6.8 3.31c-2.22-.49-4.01-2.3-4.48-4.52A6.002 6.002 0 0 1 12 6c1.66 0 3.14.69 4.22 1.78l-1.51 1.51c-.63.63-.19 1.71.7 1.71H19c.55 0 1-.45 1-1V6.41c0-.89-1.08-1.34-1.71-.71z\" data-v-ee1a9bd0></path> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewbox=\"0 0 24 24\" data-v-ee1a9bd0><path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path></svg> <path fill=\"currentColor\" d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5m-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4zm-3-4h8v2H8z\" data-v-ee1a9bd0></path> <span style=\"display:none;\" class=\"copy-feedback\" data-v-ee1a9bd0>Link copied!</span> <div class=\"resizable\" style=\"height:70vh;\" data-v-ee1a9bd0><iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe></div> <iframe title=\"algo-visualize panel\" allow=\"clipboard-write; fullscreen;\" id=\"iframe_radix-sort\" src=\"\" width=\"100%\" height=\"100%\" loading=\"lazy\" scrolling=\"auto\" frameborder=\"0\" style=\"overflow:auto;\" data-v-ee1a9bd0></iframe> <p>首先解释一下基数排序（Radix Sort）这个名词。</p> <p>基数（Radix）其实就是进制的意思，比如十进制数的基数就是 10，二进制数的基数就是 2。看这个名字就知道这个排序算法肯定和数字的进制有关，进而可以推断，这个算法不是通用排序算法，待排序数据必须是整数，或者能够通过某种规则转化成整数，才能使用基数排序。</p> <p>我发现网上的很多资料会把基数排序和桶排序放在一起，认为基数排序是桶排序的应用。</p> <p>但我不认同这种看法，我认为基数排序是计数排序的扩展，可以用来解决计数排序空间复杂度过高的问题，和桶排序关系不大。</p> <p>现在你已经学习过 <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> 和 <a class=\"route-link\" href=\"/algo/data-structure-basic/bucket-sort/\">桶排序</a> 了，在我介绍了基数排序的原理后，你也可以自己思考一下，它是到底是计数排序的扩展还是桶排序的扩展。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/counting-sort/\">计数排序</a> <a class=\"route-link\" href=\"/algo/data-structure-basic/bucket-sort/\">桶排序</a> <h2 id=\"基数排序的原理\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8E%9F%E7%90%86\"><span>基数排序的原理</span></a></h2> <a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8E%9F%E7%90%86\"><span>基数排序的原理</span></a> <span>基数排序的原理</span> <p>基数排序的原理很简单，比方说输入的数组都是三位数 <code>nums = [329, 457, 839, 439, 720, 355, 350]</code>，我们先按照个位数排序，然后按照十位数排序，然后按照百位数排序，最终就完成了整个数组的排序。</p> <code>nums = [329, 457, 839, 439, 720, 355, 350]</code> <p><strong>这里面的关键在于，对每一位的排序都必须是稳定排序，否则最终结果就不对了</strong>。</p> <strong>这里面的关键在于，对每一位的排序都必须是稳定排序，否则最终结果就不对了</strong> <p>用这个 <code>nums</code> 数组为例，演示一下基数排序的过程，我把每个数字竖着写，方便查看每一位的排序效果。</p> <code>nums</code> <p>首先是初始状态：</p> <div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>350</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>350</span></span></code></pre> <code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>350</span></span></code> <span class=\"line\"><span>329</span></span> <span>329</span> <span class=\"line\"><span>457</span></span> <span>457</span> <span class=\"line\"><span>839</span></span> <span>839</span> <span class=\"line\"><span>439</span></span> <span>439</span> <span class=\"line\"><span>720</span></span> <span>720</span> <span class=\"line\"><span>355</span></span> <span>355</span> <span class=\"line\"><span>350</span></span> <span>350</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>按照个位数进行稳定排序，得到：</p> <div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>  ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>  ^</span></span></code></pre> <code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>  ^</span></span></code> <span class=\"line\"><span>720</span></span> <span>720</span> <span class=\"line\"><span>350</span></span> <span>350</span> <span class=\"line\"><span>355</span></span> <span>355</span> <span class=\"line\"><span>457</span></span> <span>457</span> <span class=\"line\"><span>329</span></span> <span>329</span> <span class=\"line\"><span>839</span></span> <span>839</span> <span class=\"line\"><span>439</span></span> <span>439</span> <span class=\"line\"><span>  ^</span></span> <span>  ^</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>再按照十位数进行稳定排序，得到：</p> <div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span> ^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span> ^</span></span></code></pre> <code><span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span> ^</span></span></code> <span class=\"line\"><span>720</span></span> <span>720</span> <span class=\"line\"><span>329</span></span> <span>329</span> <span class=\"line\"><span>839</span></span> <span>839</span> <span class=\"line\"><span>439</span></span> <span>439</span> <span class=\"line\"><span>350</span></span> <span>350</span> <span class=\"line\"><span>355</span></span> <span>355</span> <span class=\"line\"><span>457</span></span> <span>457</span> <span class=\"line\"><span> ^</span></span> <span> ^</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>最后按照百位数进行稳定排序，得到：</p> <div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>^</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>^</span></span></code></pre> <code><span class=\"line\"><span>329</span></span>\n<span class=\"line\"><span>350</span></span>\n<span class=\"line\"><span>355</span></span>\n<span class=\"line\"><span>439</span></span>\n<span class=\"line\"><span>457</span></span>\n<span class=\"line\"><span>720</span></span>\n<span class=\"line\"><span>839</span></span>\n<span class=\"line\"><span>^</span></span></code> <span class=\"line\"><span>329</span></span> <span>329</span> <span class=\"line\"><span>350</span></span> <span>350</span> <span class=\"line\"><span>355</span></span> <span>355</span> <span class=\"line\"><span>439</span></span> <span>439</span> <span class=\"line\"><span>457</span></span> <span>457</span> <span class=\"line\"><span>720</span></span> <span>720</span> <span class=\"line\"><span>839</span></span> <span>839</span> <span class=\"line\"><span>^</span></span> <span>^</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>上面就是基数排序的过程，在给出解法代码之前，先解答一些关于基数排序的问题：</p> <p>1、为什么对每一位必须使用稳定排序？</p> <p>2、使用什么稳定排序比较好，为什么？</p> <p>3、如果待排序数组中的数字不全是三位数，怎么办？有负数怎么办？</p> <p>4、必须按照从个位数到高位数的顺序进行排序吗？是否可以反过来，从高位数到个位数进行排序？</p> <h3 id=\"为什么对每一位必须使用稳定排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%BD%8D%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F\"><span>为什么对每一位必须使用稳定排序</span></a></h3> <a class=\"header-anchor\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%BD%8D%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F\"><span>为什么对每一位必须使用稳定排序</span></a> <span>为什么对每一位必须使用稳定排序</span> <p>举个很简单的例子：</p> <div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>56</span></span>\n<span class=\"line\"><span>57</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span>56</span></span>\n<span class=\"line\"><span>57</span></span></code></pre> <code><span class=\"line\"><span>56</span></span>\n<span class=\"line\"><span>57</span></span></code> <span class=\"line\"><span>56</span></span> <span>56</span> <span class=\"line\"><span>57</span></span> <span>57</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>个位数已经排好序了，现在要对十位数排序。</p> <p>十位数都是 5，稳定排序可以保证这两个 5 的顺序不变，最终的结果就是正确的；而如果使用不稳定排序，这两个 5 的顺序就可能被打乱，最终的结果就不对了。</p> <h3 class=\"hidden-for-toc\" id=\"使用什么稳定排序比较好\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E6%AF%94%E8%BE%83%E5%A5%BD\"><span>使用什么稳定排序比较好</span></a></h3> <a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E6%AF%94%E8%BE%83%E5%A5%BD\"><span>使用什么稳定排序比较好</span></a> <span>使用什么稳定排序比较好</span> <h3 class=\"hidden-for-toc\" id=\"位数不同怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E4%BD%8D%E6%95%B0%E4%B8%8D%E5%90%8C%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>位数不同怎么办</span></a></h3> <a class=\"header-anchor\" href=\"#%E4%BD%8D%E6%95%B0%E4%B8%8D%E5%90%8C%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>位数不同怎么办</span></a> <span>位数不同怎么办</span> <h3 class=\"hidden-for-toc\" id=\"有负数怎么办\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%9C%89%E8%B4%9F%E6%95%B0%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>有负数怎么办</span></a></h3> <a class=\"header-anchor\" href=\"#%E6%9C%89%E8%B4%9F%E6%95%B0%E6%80%8E%E4%B9%88%E5%8A%9E\"><span>有负数怎么办</span></a> <span>有负数怎么办</span> <h3 class=\"hidden-for-toc\" id=\"必须从低位到高位吗-lsd-和-msd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%BF%85%E9%A1%BB%E4%BB%8E%E4%BD%8E%E4%BD%8D%E5%88%B0%E9%AB%98%E4%BD%8D%E5%90%97-lsd-%E5%92%8C-msd\"><span>必须从低位到高位吗（LSD 和 MSD）</span></a></h3> <a class=\"header-anchor\" href=\"#%E5%BF%85%E9%A1%BB%E4%BB%8E%E4%BD%8E%E4%BD%8D%E5%88%B0%E9%AB%98%E4%BD%8D%E5%90%97-lsd-%E5%92%8C-msd\"><span>必须从低位到高位吗（LSD 和 MSD）</span></a> <span>必须从低位到高位吗（LSD 和 MSD）</span> <h3 class=\"hidden-for-toc\" id=\"msd-算法逻辑\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#msd-%E7%AE%97%E6%B3%95%E9%80%BB%E8%BE%91\"><span>MSD 算法逻辑</span></a></h3> <a class=\"header-anchor\" href=\"#msd-%E7%AE%97%E6%B3%95%E9%80%BB%E8%BE%91\"><span>MSD 算法逻辑</span></a> <span>MSD 算法逻辑</span> <h2 class=\"hidden-for-toc\" id=\"lsd-代码实现\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lsd-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span>LSD 代码实现</span></a></h2> <a class=\"header-anchor\" href=\"#lsd-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span>LSD 代码实现</span></a> <span>LSD 代码实现</span> <h2 class=\"hidden-for-toc\" id=\"时空复杂度及稳定性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>时空复杂度及稳定性</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7\"><span>时空复杂度及稳定性</span></a> <span>时空复杂度及稳定性</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/data-structure-basic/bucket-sort/\" aria-label=\"博采众长：桶排序\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->博采众长：桶排序</div></a><a class=\"route-link auto-link next\" href=\"/algo/intro/updating-3/\" aria-label=\"正在更新 ing\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">正在更新 ing<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/data-structure-basic/bucket-sort/\" aria-label=\"博采众长：桶排序\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->博采众长：桶排序</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->博采众长：桶排序</div> <a class=\"route-link auto-link next\" href=\"/algo/intro/updating-3/\" aria-label=\"正在更新 ing\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">正在更新 ing<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">正在更新 ing<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}