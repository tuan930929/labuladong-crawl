{
    "url": "https://labuladong.online/algo/en/data-structure/prim/",
    "title": "Prim Minimum Spanning Tree Algorithm | Labuladong Algo Notes",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Prim Minimum Spanning Tree Algorithm</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7721 words</span><meta property=\"wordCount\" content=\"7721\"></span></div><hr></div> <h1><!---->Prim Minimum Spanning Tree Algorithm</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">Original</span><span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7721 words</span><meta property=\"wordCount\" content=\"7721\"></span></div> <span class=\"page-author-info\" aria-label=\"AuthorðŸ–Š\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">Original</span> <span class=\"page-word-info\" aria-label=\"WordsðŸ” \" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>About 7721 words</span><meta property=\"wordCount\" content=\"7721\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>About 7721 words</span> <meta property=\"wordCount\" content=\"7721\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. Connecting Cities With Minimum Cost https://leetcode.com/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. Min Cost to Connect All Points https://leetcode.com/problems/min-cost-to-connect-all-points </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first study:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">One Sentence Summary</p><p>The Prim algorithm is a classic algorithm for finding the minimum spanning tree in an undirected graph.</p><p>You only need to slightly modify Dijkstra's algorithm to get the Prim algorithm.</p></div><p>Previously, we explained the core idea of the <a class=\"route-link\" href=\"/algo/en/data-structure/kruskal/\">Kruskal algorithm</a> for the minimum spanning tree: sort the edges first, and then use the <a class=\"route-link\" href=\"/algo/en/data-structure-basic/union-find-basic/\">union-find data structure</a> to build the minimum spanning tree.</p><p>In terms of approach, the essence of the Prim algorithm is BFS plus a greedy strategy. It sorts and builds the minimum spanning tree at the same time, which is like a dynamic process compared to Kruskal's sort-then-build method.</p><p>From a coding perspective, Prim's algorithm is very similar to Dijkstra's algorithm. You only need to change a few lines of code to turn Dijkstra's algorithm into Prim's algorithm. Therefore, before learning Prim's algorithm, you need to thoroughly understand <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a>.</p><p>This article will first show the implementation of Prim's algorithm, then explain its principle, and why you can directly derive Prim's algorithm from Dijkstra's code.</p><h2 id=\"prim-algorithm-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#prim-algorithm-code\"><span>Prim Algorithm Code</span></a></h2><p>You only need to modify a few lines in the <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra algorithm template</a> to get Prim's algorithm. The modified parts are already highlighted:</p><h2 class=\"hidden-for-toc\" id=\"cut-property-theorem\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#cut-property-theorem\"><span>Cut Property Theorem</span></a></h2><h2 class=\"hidden-for-toc\" id=\"correctness-of-the-algorithm\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#correctness-of-the-algorithm\"><span>Correctness of the Algorithm</span></a></h2><h2 class=\"hidden-for-toc\" id=\"complexity-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#complexity-analysis\"><span>Complexity Analysis</span></a></h2><h2 class=\"hidden-for-toc\" id=\"problem-practice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#problem-practice\"><span>Problem Practice</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. Connecting Cities With Minimum Cost https://leetcode.com/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. Min Cost to Connect All Points https://leetcode.com/problems/min-cost-to-connect-all-points </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first study:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">One Sentence Summary</p><p>The Prim algorithm is a classic algorithm for finding the minimum spanning tree in an undirected graph.</p><p>You only need to slightly modify Dijkstra's algorithm to get the Prim algorithm.</p></div><p>Previously, we explained the core idea of the <a class=\"route-link\" href=\"/algo/en/data-structure/kruskal/\">Kruskal algorithm</a> for the minimum spanning tree: sort the edges first, and then use the <a class=\"route-link\" href=\"/algo/en/data-structure-basic/union-find-basic/\">union-find data structure</a> to build the minimum spanning tree.</p><p>In terms of approach, the essence of the Prim algorithm is BFS plus a greedy strategy. It sorts and builds the minimum spanning tree at the same time, which is like a dynamic process compared to Kruskal's sort-then-build method.</p><p>From a coding perspective, Prim's algorithm is very similar to Dijkstra's algorithm. You only need to change a few lines of code to turn Dijkstra's algorithm into Prim's algorithm. Therefore, before learning Prim's algorithm, you need to thoroughly understand <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a>.</p><p>This article will first show the implementation of Prim's algorithm, then explain its principle, and why you can directly derive Prim's algorithm from Dijkstra's code.</p><h2 id=\"prim-algorithm-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#prim-algorithm-code\"><span>Prim Algorithm Code</span></a></h2><p>You only need to modify a few lines in the <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra algorithm template</a> to get Prim's algorithm. The modified parts are already highlighted:</p><h2 class=\"hidden-for-toc\" id=\"cut-property-theorem\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#cut-property-theorem\"><span>Cut Property Theorem</span></a></h2><h2 class=\"hidden-for-toc\" id=\"correctness-of-the-algorithm\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#correctness-of-the-algorithm\"><span>Correctness of the Algorithm</span></a></h2><h2 class=\"hidden-for-toc\" id=\"complexity-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#complexity-analysis\"><span>Complexity Analysis</span></a></h2><h2 class=\"hidden-for-toc\" id=\"problem-practice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#problem-practice\"><span>Problem Practice</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. Connecting Cities With Minimum Cost https://leetcode.com/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. Min Cost to Connect All Points https://leetcode.com/problems/min-cost-to-connect-all-points </h3></div> <h3 tabindex=\"-1\"> 1135. Connecting Cities With Minimum Cost https://leetcode.com/problems/connecting-cities-with-minimum-cost </h3> <h3 tabindex=\"-1\"> 1584. Min Cost to Connect All Points https://leetcode.com/problems/min-cost-to-connect-all-points </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">This article will resolve</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table></div> <p class=\"hint-container-title\">This article will resolve</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">Difficulty</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">Difficulty</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>ðŸ”’</td> <a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a> <td style=\"text-align:center;\">ðŸŸ </td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\">ðŸŸ </td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td> <a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a> <td style=\"text-align:center;\">ðŸŸ </td> <div class=\"hint-container info\"><p class=\"hint-container-title\">Prerequisites</p><p>Before reading this article, you should first study:</p><ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a></li></ul></div> <p class=\"hint-container-title\">Prerequisites</p> <p>Before reading this article, you should first study:</p> <ul><li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a></li><li><a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a></li></ul> <li><a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/graph-basic/\">Graph Structure Basics and General Implementation</a> <li><a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a></li> <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">One Sentence Summary</p><p>The Prim algorithm is a classic algorithm for finding the minimum spanning tree in an undirected graph.</p><p>You only need to slightly modify Dijkstra's algorithm to get the Prim algorithm.</p></div> <p class=\"hint-container-title\">One Sentence Summary</p> <p>The Prim algorithm is a classic algorithm for finding the minimum spanning tree in an undirected graph.</p> <p>You only need to slightly modify Dijkstra's algorithm to get the Prim algorithm.</p> <p>Previously, we explained the core idea of the <a class=\"route-link\" href=\"/algo/en/data-structure/kruskal/\">Kruskal algorithm</a> for the minimum spanning tree: sort the edges first, and then use the <a class=\"route-link\" href=\"/algo/en/data-structure-basic/union-find-basic/\">union-find data structure</a> to build the minimum spanning tree.</p> <a class=\"route-link\" href=\"/algo/en/data-structure/kruskal/\">Kruskal algorithm</a> <a class=\"route-link\" href=\"/algo/en/data-structure-basic/union-find-basic/\">union-find data structure</a> <p>In terms of approach, the essence of the Prim algorithm is BFS plus a greedy strategy. It sorts and builds the minimum spanning tree at the same time, which is like a dynamic process compared to Kruskal's sort-then-build method.</p> <p>From a coding perspective, Prim's algorithm is very similar to Dijkstra's algorithm. You only need to change a few lines of code to turn Dijkstra's algorithm into Prim's algorithm. Therefore, before learning Prim's algorithm, you need to thoroughly understand <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a>.</p> <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra's Algorithm: Principle and Implementation</a> <p>This article will first show the implementation of Prim's algorithm, then explain its principle, and why you can directly derive Prim's algorithm from Dijkstra's code.</p> <h2 id=\"prim-algorithm-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#prim-algorithm-code\"><span>Prim Algorithm Code</span></a></h2> <a class=\"header-anchor\" href=\"#prim-algorithm-code\"><span>Prim Algorithm Code</span></a> <span>Prim Algorithm Code</span> <p>You only need to modify a few lines in the <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra algorithm template</a> to get Prim's algorithm. The modified parts are already highlighted:</p> <a class=\"route-link\" href=\"/algo/en/data-structure/dijkstra/\">Dijkstra algorithm template</a> <h2 class=\"hidden-for-toc\" id=\"cut-property-theorem\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#cut-property-theorem\"><span>Cut Property Theorem</span></a></h2> <a class=\"header-anchor\" href=\"#cut-property-theorem\"><span>Cut Property Theorem</span></a> <span>Cut Property Theorem</span> <h2 class=\"hidden-for-toc\" id=\"correctness-of-the-algorithm\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#correctness-of-the-algorithm\"><span>Correctness of the Algorithm</span></a></h2> <a class=\"header-anchor\" href=\"#correctness-of-the-algorithm\"><span>Correctness of the Algorithm</span></a> <span>Correctness of the Algorithm</span> <h2 class=\"hidden-for-toc\" id=\"complexity-analysis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#complexity-analysis\"><span>Complexity Analysis</span></a></h2> <a class=\"header-anchor\" href=\"#complexity-analysis\"><span>Complexity Analysis</span></a> <span>Complexity Analysis</span> <h2 class=\"hidden-for-toc\" id=\"problem-practice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#problem-practice\"><span>Problem Practice</span></a></h2> <a class=\"header-anchor\" href=\"#problem-practice\"><span>Problem Practice</span></a> <span>Problem Practice</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">Last Updated:</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time></div> <span class=\"vp-meta-label\">Last Updated:</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>7/21/25, 11:29 AM</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure/kruskal/\" aria-label=\"Kruskal Minimum Spanning Tree Algorithm\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Kruskal Minimum Spanning Tree Algorithm</div></a><a class=\"route-link auto-link next\" href=\"/algo/en/essential-technique/backtrack-framework-2/\" aria-label=\"Backtracking Algorithm Common Patterns and Code Template\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Backtracking Algorithm Common Patterns and Code Template<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/en/data-structure/kruskal/\" aria-label=\"Kruskal Minimum Spanning Tree Algorithm\"><div class=\"hint\"><span class=\"arrow start\"></span>Prev</div><div class=\"link\"><!---->Kruskal Minimum Spanning Tree Algorithm</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>Prev</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->Kruskal Minimum Spanning Tree Algorithm</div> <a class=\"route-link auto-link next\" href=\"/algo/en/essential-technique/backtrack-framework-2/\" aria-label=\"Backtracking Algorithm Common Patterns and Code Template\"><div class=\"hint\">Next<span class=\"arrow end\"></span></div><div class=\"link\">Backtracking Algorithm Common Patterns and Code Template<!----></div></a> <div class=\"hint\">Next<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Backtracking Algorithm Common Patterns and Code Template<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}