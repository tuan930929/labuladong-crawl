{
    "url": "https://labuladong.online/algo/data-structure/eulerian-graph-hierholzer/",
    "title": "Hierholzer 算法寻找欧拉路径 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Hierholzer 算法寻找欧拉路径</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2959 字</span><meta property=\"wordCount\" content=\"2959\"></span></div><hr></div> <h1><!---->Hierholzer 算法寻找欧拉路径</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2959 字</span><meta property=\"wordCount\" content=\"2959\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 2959 字</span><meta property=\"wordCount\" content=\"2959\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 2959 字</span> <meta property=\"wordCount\" content=\"2959\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Hierholzer 算法是用于计算欧拉路径/欧拉回路的算法，其本质就是 <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">遍历图结构<strong>所有边</strong>的 DFS 算法</a> 的<strong>逆后序</strong>遍历结果。</p></div><p>在 <a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a> 中，我们通过经典的一笔画游戏学习了欧拉图的基本概念，探讨了欧拉路径/欧拉回路的判定条件。</p><p>关键就是看节点的度数，这里简单总结一下。如果你忘记了其中的原理，请先回去复习。</p><p>对于无向图：</p><ul><li><p>如果所有节点的度数都是偶数，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个奇数度节点，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个奇数度节点作为起点，遍历所有边后，一定可以到达另一个奇数度节点。</p></li></ul><p>对于有向图：</p><ul><li><p>如果所有节点的入度和出度都相等，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个节点入度和出度不相等，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个入度和出度不相等的节点作为起点，遍历所有边后，一定可以到达另一个入度和出度不相等的节点。</p></li></ul><p>接下来看看 Hierholzer 算法的代码实现，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 时间复杂度内找到欧拉路径/欧拉回路。</p><h2 class=\"hidden-for-toc\" id=\"hierholzer-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#hierholzer-%E7%AE%97%E6%B3%95\"><span>Hierholzer 算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"正确性分析-可选\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%AD%A3%E7%A1%AE%E6%80%A7%E5%88%86%E6%9E%90-%E5%8F%AF%E9%80%89\"><span>正确性分析（可选）</span></a></h2><h2 class=\"hidden-for-toc\" id=\"完成一笔画游戏\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%80%E7%AC%94%E7%94%BB%E6%B8%B8%E6%88%8F\"><span>完成一笔画游戏</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Hierholzer 算法是用于计算欧拉路径/欧拉回路的算法，其本质就是 <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">遍历图结构<strong>所有边</strong>的 DFS 算法</a> 的<strong>逆后序</strong>遍历结果。</p></div><p>在 <a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a> 中，我们通过经典的一笔画游戏学习了欧拉图的基本概念，探讨了欧拉路径/欧拉回路的判定条件。</p><p>关键就是看节点的度数，这里简单总结一下。如果你忘记了其中的原理，请先回去复习。</p><p>对于无向图：</p><ul><li><p>如果所有节点的度数都是偶数，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个奇数度节点，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个奇数度节点作为起点，遍历所有边后，一定可以到达另一个奇数度节点。</p></li></ul><p>对于有向图：</p><ul><li><p>如果所有节点的入度和出度都相等，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个节点入度和出度不相等，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个入度和出度不相等的节点作为起点，遍历所有边后，一定可以到达另一个入度和出度不相等的节点。</p></li></ul><p>接下来看看 Hierholzer 算法的代码实现，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 时间复杂度内找到欧拉路径/欧拉回路。</p><h2 class=\"hidden-for-toc\" id=\"hierholzer-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#hierholzer-%E7%AE%97%E6%B3%95\"><span>Hierholzer 算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"正确性分析-可选\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%AD%A3%E7%A1%AE%E6%80%A7%E5%88%86%E6%9E%90-%E5%8F%AF%E9%80%89\"><span>正确性分析（可选）</span></a></h2><h2 class=\"hidden-for-toc\" id=\"完成一笔画游戏\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%80%E7%AC%94%E7%94%BB%E6%B8%B8%E6%88%8F\"><span>完成一笔画游戏</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-basic/\">图结构的通用实现</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">图结构的 DFS/BFS 遍历</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Hierholzer 算法是用于计算欧拉路径/欧拉回路的算法，其本质就是 <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">遍历图结构<strong>所有边</strong>的 DFS 算法</a> 的<strong>逆后序</strong>遍历结果。</p></div> <p class=\"hint-container-title\">一句话总结</p> <p>Hierholzer 算法是用于计算欧拉路径/欧拉回路的算法，其本质就是 <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">遍历图结构<strong>所有边</strong>的 DFS 算法</a> 的<strong>逆后序</strong>遍历结果。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-traverse-basic/\">遍历图结构<strong>所有边</strong>的 DFS 算法</a> <strong>所有边</strong> <strong>逆后序</strong> <p>在 <a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a> 中，我们通过经典的一笔画游戏学习了欧拉图的基本概念，探讨了欧拉路径/欧拉回路的判定条件。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/eulerian-graph/\">欧拉图及一笔画游戏</a> <p>关键就是看节点的度数，这里简单总结一下。如果你忘记了其中的原理，请先回去复习。</p> <p>对于无向图：</p> <ul><li><p>如果所有节点的度数都是偶数，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个奇数度节点，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个奇数度节点作为起点，遍历所有边后，一定可以到达另一个奇数度节点。</p></li></ul> <li><p>如果所有节点的度数都是偶数，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li> <p>如果所有节点的度数都是偶数，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p> <li><p>如果存在两个奇数度节点，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个奇数度节点作为起点，遍历所有边后，一定可以到达另一个奇数度节点。</p></li> <p>如果存在两个奇数度节点，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个奇数度节点作为起点，遍历所有边后，一定可以到达另一个奇数度节点。</p> <p>对于有向图：</p> <ul><li><p>如果所有节点的入度和出度都相等，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li><li><p>如果存在两个节点入度和出度不相等，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个入度和出度不相等的节点作为起点，遍历所有边后，一定可以到达另一个入度和出度不相等的节点。</p></li></ul> <li><p>如果所有节点的入度和出度都相等，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p></li> <p>如果所有节点的入度和出度都相等，那么起点和终点是同一个节点，存在欧拉回路。我们可以以任意一个节点作为起点，遍历所有边后，一定可以回到起点。</p> <li><p>如果存在两个节点入度和出度不相等，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个入度和出度不相等的节点作为起点，遍历所有边后，一定可以到达另一个入度和出度不相等的节点。</p></li> <p>如果存在两个节点入度和出度不相等，那么起点和终点分别是这两个节点，存在欧拉路径。我们可以任选一个入度和出度不相等的节点作为起点，遍历所有边后，一定可以到达另一个入度和出度不相等的节点。</p> <p>接下来看看 Hierholzer 算法的代码实现，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 时间复杂度内找到欧拉路径/欧拉回路。</p> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> <span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math></span> <math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics></math> <semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(E)</annotation></semantics> <mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow> <mi>O</mi> <mo stretchy=\"false\">(</mo> <mi>E</mi> <mo stretchy=\"false\">)</mo> <annotation encoding=\"application/x-tex\">O(E)</annotation> <span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span> <span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span> <span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span> <span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span> <span class=\"mopen\">(</span> <span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span> <span class=\"mclose\">)</span> <h2 class=\"hidden-for-toc\" id=\"hierholzer-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#hierholzer-%E7%AE%97%E6%B3%95\"><span>Hierholzer 算法</span></a></h2> <a class=\"header-anchor\" href=\"#hierholzer-%E7%AE%97%E6%B3%95\"><span>Hierholzer 算法</span></a> <span>Hierholzer 算法</span> <h2 class=\"hidden-for-toc\" id=\"正确性分析-可选\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%AD%A3%E7%A1%AE%E6%80%A7%E5%88%86%E6%9E%90-%E5%8F%AF%E9%80%89\"><span>正确性分析（可选）</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%AD%A3%E7%A1%AE%E6%80%A7%E5%88%86%E6%9E%90-%E5%8F%AF%E9%80%89\"><span>正确性分析（可选）</span></a> <span>正确性分析（可选）</span> <h2 class=\"hidden-for-toc\" id=\"完成一笔画游戏\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%80%E7%AC%94%E7%94%BB%E6%B8%B8%E6%88%8F\"><span>完成一笔画游戏</span></a></h2> <a class=\"header-anchor\" href=\"#%E5%AE%8C%E6%88%90%E4%B8%80%E7%AC%94%E7%94%BB%E6%B8%B8%E6%88%8F\"><span>完成一笔画游戏</span></a> <span>完成一笔画游戏</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/data-structure/bipartite-graph/\" aria-label=\"二分图判定算法\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->二分图判定算法</div></a><a class=\"route-link auto-link next\" href=\"/algo/problem-set/eulerian-path/\" aria-label=\"【练习】欧拉路径经典习题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">【练习】欧拉路径经典习题<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/data-structure/bipartite-graph/\" aria-label=\"二分图判定算法\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->二分图判定算法</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->二分图判定算法</div> <a class=\"route-link auto-link next\" href=\"/algo/problem-set/eulerian-path/\" aria-label=\"【练习】欧拉路径经典习题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">【练习】欧拉路径经典习题<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">【练习】欧拉路径经典习题<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}