{
    "url": "https://labuladong.online/algo/data-structure/kruskal/",
    "title": "Kruskal 最小生成树算法 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->Kruskal 最小生成树算法</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4958 字</span><meta property=\"wordCount\" content=\"4958\"></span></div><hr></div> <h1><!---->Kruskal 最小生成树算法</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4958 字</span><meta property=\"wordCount\" content=\"4958\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4958 字</span><meta property=\"wordCount\" content=\"4958\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 4958 字</span> <meta property=\"wordCount\" content=\"4958\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. 最低成本联通所有城市 https://leetcode.cn/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. 连接所有点的最小费用 https://leetcode.cn/problems/min-cost-to-connect-all-points </h3><h3 tabindex=\"-1\"> 261. 以图判树 https://leetcode.cn/problems/graph-valid-tree </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Kruskal 算法是求解无向图中最小生成树的经典算法。</p><p>其本质是贪心思想，先排序，再借助 <a class=\"route-link\" href=\"/algo/data-structure-basic/union-find-basic/\">并查集</a> 判断是否形成环。</p></div><p><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a> 讲解了最小生成树的定义及实际运用场景，没看过的话需要先看下。</p><p>最小生成树算法主要有 Prim 算法和 Kruskal 算法两种，这两种算法从原理上讲都是运用贪心思想，但从实现上来说差异还是蛮大的。</p><p>本文先来讲比较简单易懂的 Kruskal 算法，然后在下一篇文章中聊 Prim 算法。</p><p>Kruskal 算法其实很容易理解和记忆，其关键是要熟悉并查集算法，如果不熟悉，建议先看下前文 <a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a>。</p><p>在讲 Kruskal 算法之前，先回顾一下 Union-Find 并查集算法。</p><h2 class=\"hidden-for-toc\" id=\"union-find-并查集算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#union-find-%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%AE%97%E6%B3%95\"><span>Union-Find 并查集算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"kruskal-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#kruskal-%E7%AE%97%E6%B3%95\"><span>Kruskal 算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_1135-最低成本联通所有城市\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1135-%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%81%94%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82\"><span>1135. 最低成本联通所有城市</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_1584-连接所有点的最小费用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1584-%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8\"><span>1584. 连接所有点的最小费用</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. 最低成本联通所有城市 https://leetcode.cn/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. 连接所有点的最小费用 https://leetcode.cn/problems/min-cost-to-connect-all-points </h3><h3 tabindex=\"-1\"> 261. 以图判树 https://leetcode.cn/problems/graph-valid-tree </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a></li></ul></div><div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Kruskal 算法是求解无向图中最小生成树的经典算法。</p><p>其本质是贪心思想，先排序，再借助 <a class=\"route-link\" href=\"/algo/data-structure-basic/union-find-basic/\">并查集</a> 判断是否形成环。</p></div><p><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a> 讲解了最小生成树的定义及实际运用场景，没看过的话需要先看下。</p><p>最小生成树算法主要有 Prim 算法和 Kruskal 算法两种，这两种算法从原理上讲都是运用贪心思想，但从实现上来说差异还是蛮大的。</p><p>本文先来讲比较简单易懂的 Kruskal 算法，然后在下一篇文章中聊 Prim 算法。</p><p>Kruskal 算法其实很容易理解和记忆，其关键是要熟悉并查集算法，如果不熟悉，建议先看下前文 <a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a>。</p><p>在讲 Kruskal 算法之前，先回顾一下 Union-Find 并查集算法。</p><h2 class=\"hidden-for-toc\" id=\"union-find-并查集算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#union-find-%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%AE%97%E6%B3%95\"><span>Union-Find 并查集算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"kruskal-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#kruskal-%E7%AE%97%E6%B3%95\"><span>Kruskal 算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_1135-最低成本联通所有城市\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1135-%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%81%94%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82\"><span>1135. 最低成本联通所有城市</span></a></h2><h2 class=\"hidden-for-toc\" id=\"_1584-连接所有点的最小费用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1584-%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8\"><span>1584. 连接所有点的最小费用</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 1135. 最低成本联通所有城市 https://leetcode.cn/problems/connecting-cities-with-minimum-cost </h3><h3 tabindex=\"-1\"> 1584. 连接所有点的最小费用 https://leetcode.cn/problems/min-cost-to-connect-all-points </h3><h3 tabindex=\"-1\"> 261. 以图判树 https://leetcode.cn/problems/graph-valid-tree </h3></div> <h3 tabindex=\"-1\"> 1135. 最低成本联通所有城市 https://leetcode.cn/problems/connecting-cities-with-minimum-cost </h3> <h3 tabindex=\"-1\"> 1584. 连接所有点的最小费用 https://leetcode.cn/problems/min-cost-to-connect-all-points </h3> <h3 tabindex=\"-1\"> 261. 以图判树 https://leetcode.cn/problems/graph-valid-tree </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div> <p class=\"hint-container-title\">本文讲解的例题</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">力扣</th> <th style=\"text-align:center;\">难度</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a>🔒</td> <a href=\"https://leetcode.com/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. Connecting Cities With Minimum Cost</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a>🔒</td> <a href=\"https://leetcode.cn/problems/connecting-cities-with-minimum-cost/\" target=\"_blank\" rel=\"noopener noreferrer\">1135. 最低成本联通所有城市</a> <td style=\"text-align:center;\">🟠</td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a></td> <a href=\"https://leetcode.com/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. Min Cost to Connect All Points</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a></td> <a href=\"https://leetcode.cn/problems/min-cost-to-connect-all-points/\" target=\"_blank\" rel=\"noopener noreferrer\">1584. 连接所有点的最小费用</a> <td style=\"text-align:center;\">🟠</td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a>🔒</td> <a href=\"https://leetcode.com/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. Graph Valid Tree</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a>🔒</td> <a href=\"https://leetcode.cn/problems/graph-valid-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">261. 以图判树</a> <td style=\"text-align:center;\">🟠</td> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a></li><li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a></li> <a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a> <div class=\"hint-container important\"><p class=\"hint-container-title\">一句话总结</p><p>Kruskal 算法是求解无向图中最小生成树的经典算法。</p><p>其本质是贪心思想，先排序，再借助 <a class=\"route-link\" href=\"/algo/data-structure-basic/union-find-basic/\">并查集</a> 判断是否形成环。</p></div> <p class=\"hint-container-title\">一句话总结</p> <p>Kruskal 算法是求解无向图中最小生成树的经典算法。</p> <p>其本质是贪心思想，先排序，再借助 <a class=\"route-link\" href=\"/algo/data-structure-basic/union-find-basic/\">并查集</a> 判断是否形成环。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/union-find-basic/\">并查集</a> <p><a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a> 讲解了最小生成树的定义及实际运用场景，没看过的话需要先看下。</p> <a class=\"route-link\" href=\"/algo/data-structure-basic/graph-minimum-spanning-tree/\">最小生成树算法概览</a> <p>最小生成树算法主要有 Prim 算法和 Kruskal 算法两种，这两种算法从原理上讲都是运用贪心思想，但从实现上来说差异还是蛮大的。</p> <p>本文先来讲比较简单易懂的 Kruskal 算法，然后在下一篇文章中聊 Prim 算法。</p> <p>Kruskal 算法其实很容易理解和记忆，其关键是要熟悉并查集算法，如果不熟悉，建议先看下前文 <a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a>。</p> <a class=\"route-link\" href=\"/algo/data-structure/union-find/\">Union-Find 并查集算法</a> <p>在讲 Kruskal 算法之前，先回顾一下 Union-Find 并查集算法。</p> <h2 class=\"hidden-for-toc\" id=\"union-find-并查集算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#union-find-%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%AE%97%E6%B3%95\"><span>Union-Find 并查集算法</span></a></h2> <a class=\"header-anchor\" href=\"#union-find-%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%AE%97%E6%B3%95\"><span>Union-Find 并查集算法</span></a> <span>Union-Find 并查集算法</span> <h2 class=\"hidden-for-toc\" id=\"kruskal-算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#kruskal-%E7%AE%97%E6%B3%95\"><span>Kruskal 算法</span></a></h2> <a class=\"header-anchor\" href=\"#kruskal-%E7%AE%97%E6%B3%95\"><span>Kruskal 算法</span></a> <span>Kruskal 算法</span> <h2 class=\"hidden-for-toc\" id=\"_1135-最低成本联通所有城市\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1135-%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%81%94%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82\"><span>1135. 最低成本联通所有城市</span></a></h2> <a class=\"header-anchor\" href=\"#_1135-%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%81%94%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82\"><span>1135. 最低成本联通所有城市</span></a> <span>1135. 最低成本联通所有城市</span> <h2 class=\"hidden-for-toc\" id=\"_1584-连接所有点的最小费用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1584-%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8\"><span>1584. 连接所有点的最小费用</span></a></h2> <a class=\"header-anchor\" href=\"#_1584-%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8\"><span>1584. 连接所有点的最小费用</span></a> <span>1584. 连接所有点的最小费用</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/problem-set/dijkstra/\" aria-label=\"【练习】Dijkstra 算法经典习题\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->【练习】Dijkstra 算法经典习题</div></a><a class=\"route-link auto-link next\" href=\"/algo/data-structure/prim/\" aria-label=\"Prim 最小生成树算法\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">Prim 最小生成树算法<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/problem-set/dijkstra/\" aria-label=\"【练习】Dijkstra 算法经典习题\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->【练习】Dijkstra 算法经典习题</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->【练习】Dijkstra 算法经典习题</div> <a class=\"route-link auto-link next\" href=\"/algo/data-structure/prim/\" aria-label=\"Prim 最小生成树算法\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">Prim 最小生成树算法<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">Prim 最小生成树算法<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}