{
    "url": "https://labuladong.online/algo-visualize/leetcode/remove-duplicates-from-sorted-list/",
    "title": "删除排序链表中的重复元素 | labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } var deleteDuplicates = function (head) {\n    if (head === null) {\n        return null;\n    }\n    var slow = head;\n    // @visualize color *slow #62d95c\n    var fast = head;\n    while (fast !== null) {\n        if (fast.val !== slow.val) {\n            // nums[slow] = nums[fast];\n            slow.next = fast;\n            // slow++;\n            slow = slow.next;\n            // @visualize color *slow #62d95c\n        }\n        // fast++\n        fast = fast.next;\n    }\n    // 断开与后面重复元素的连接\n    slow.next = null;\n    return head;\n};\n\nlet result = deleteDuplicates(LinkedList.createHead([1,3,3,3,4,5]));\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}