{
    "url": "https://labuladong.online/algo-visualize/tutorial/uf-native/",
    "title": "labuladong 算法可视化",
    "content": "You need to enable JavaScript to run this app. 页面加载失败，请尝试清除浏览器缓存并刷新页面。 Error occurred when loading the page, please try to clear browser cache and refresh the page. window.__viz = {\n        data: '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'\n    } // 创建一个未优化的并查集结构，包含 6 个节点\nlet uf = UF.createNaive(6)\n// 显示并查集的底层数组\nuf.showArray()\n\n// 初始的连通分量数量为 6\nconsole.log('Connected components:', uf.count())\n\n// 将节点 1 和节点 2 连接\nuf.union(1, 2)\n\n// 将节点 2 和节点 3 连接\nuf.union(2, 3)\n\n// 将节点 4 和节点 2 连接\nuf.union(4, 2)\n\n\n// 返回当前并查集中连通分量的数量\nconsole.log('Connected components:', uf.count())\n\n// 测试节点 1 和节点 4 的连通性\n// 1 -> 2 -> 4 是连通的，打印 true\nconsole.log('1 <-> 4:', uf.connected(1, 4))\n\n// 测试节点 2 和节点 5 的连通性\n// 2 和 5 不连通，打印 false\nconsole.log('2 <-> 5:', uf.connected(2, 5))\n window.onerror = function (message, source, lineno, colno, error) {\n        const root = document.getElementById('root');\n        if (!root || !root.innerHTML.trim()) {\n            console.log('window on error:', error, message)\n            document.getElementById('error-message').style.display = 'block';\n        }\n    };\n\n    // MutationObserver to monitor changes in #root\n    const observer = new MutationObserver(function (mutations) {\n        const root = document.getElementById('root');\n        if (root && root.innerHTML.trim()) {\n            document.getElementById('error-message').style.display = 'none';\n            window.onerror = null; // Remove the window.onerror listener\n            observer.disconnect(); // Stop observing\n        }\n    });\n\n    // Observe changes in the child list of #root\n    observer.observe(document.getElementById('root'), {\n        childList: true,\n        subtree: true\n    }); \n"
}