{
    "url": "https://labuladong.online/algo/frequency-interview/random-algorithm/",
    "title": "谈谈游戏中的随机算法 | labuladong 的算法笔记",
    "content": "<nav class=\"vp-breadcrumb disable\"></nav> <div class=\"vp-page-title\"><h1><!---->谈谈游戏中的随机算法</h1><div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4184 字</span><meta property=\"wordCount\" content=\"4184\"></span></div><hr></div> <h1><!---->谈谈游戏中的随机算法</h1> <div class=\"page-info\"><span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span><span class=\"page-original-info\">原创</span><span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4184 字</span><meta property=\"wordCount\" content=\"4184\"></span></div> <span class=\"page-author-info\" aria-label=\"作者🖊\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg><span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span><span property=\"author\" content=\"labuladong\"></span></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon author-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"author icon\" name=\"author\"><path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path></svg> <path d=\"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z\"></path> <span><a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a></span> <a class=\"page-author-item\" href=\"https://github.com/labuladong\" target=\"_blank\" rel=\"noopener noreferrer\">labuladong</a> <span property=\"author\" content=\"labuladong\"></span> <span class=\"page-original-info\">原创</span> <span class=\"page-word-info\" aria-label=\"字数🔠\" data-balloon-pos=\"up\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg><span>约 4184 字</span><meta property=\"wordCount\" content=\"4184\"></span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon word-icon\" viewbox=\"0 0 1024 1024\" fill=\"currentColor\" aria-label=\"word icon\" name=\"word\"><path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path><path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path></svg> <path d=\"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z\"></path> <path d=\"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z\"></path> <span>约 4184 字</span> <meta property=\"wordCount\" content=\"4184\"> <hr> <div class=\"\" vp-content><!----><div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 382. 链表随机节点 https://leetcode.cn/problems/linked-list-random-node </h3><h3 tabindex=\"-1\"> 384. 打乱数组 https://leetcode.cn/problems/shuffle-an-array </h3><h3 tabindex=\"-1\"> 398. 随机数索引 https://leetcode.cn/problems/random-pick-index </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li></ul></div><p>没事儿的时候我喜欢玩玩那些经典的 2D 网页小游戏，我发现很多游戏都要涉及地图的随机生成，比如扫雷游戏中雷的位置应该是随机分布的：</p><div class=\"img-content\"><img src=\"/algo/images/random-algo/1.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>再比如经典炸弹人游戏，障碍物的位置也是有一定随机性的：</p><div class=\"img-content\"><img src=\"/algo/images/random-algo/2.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>这些 2D 游戏相较现在的大型 3D 游戏虽然看起来有些简陋，但依然用到很多有趣算法技巧，本文就来深入研究一下地图的随机生成算法。</p><p>2D 游戏的地图肯定可以抽象成一个二维矩阵，就拿扫雷举例吧，我们可以用下面这个类表示扫雷的棋盘：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在开始游戏时，需要在棋盘中随机生成 <code>k</code> 个雷，也就是说需要在 <code>board</code> 中生成 <code>k</code> 个不同的 <code>(x, y)</code> 坐标，且这里面 <code>x, y</code> 都是随机生成的。</p><p>对于这个需求，<strong>首先一个优化就是对二维矩阵进行「降维打击」，把二维数组转化成一维数组</strong>：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样，我们只要在 <code>[0, m * n)</code> 中选取一个随机数，就相当于在二维数组中随机选取了一个元素。</p><p>但问题是，我们现在需要随机选出 <code>k</code> 个<strong>不同的位置</strong>放雷。你可能说，那在 <code>[0, m * n)</code> 中选出来 <code>k</code> 个随机数不就行了？</p><p>是的，但实际操作起来有些麻烦，因为你很难保证随机数不重复。如果出现重复的随机数，你就得再随机选一次，直到找到 <code>k</code> 个不同的随机数。</p><p>如果 <code>k</code> 比较小 <code>m * n</code> 比较大，那出现重复随机数的概率还比较低，但如果 <code>k</code> 和 <code>m * n</code> 的大小接近，那么出现重复随机数的概率非常高，算法的效率就会大幅下降。</p><p>那么，我们有没有更好的办法能够在线性的时间复杂度解决这个问题？其实是有的，而且有很多种解决方案。</p><h2 class=\"hidden-for-toc\" id=\"洗牌算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95\"><span>洗牌算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"水塘抽样算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95\"><span>水塘抽样算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"蒙特卡洛验证法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%AA%8C%E8%AF%81%E6%B3%95\"><span>蒙特卡洛验证法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"拓展延伸\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8B%93%E5%B1%95%E5%BB%B6%E4%BC%B8\"><span>拓展延伸</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div><!----><!----><!----></div> <div id=\"markdown-content\"><div style=\"display:none;\"><h3 tabindex=\"-1\"> 382. 链表随机节点 https://leetcode.cn/problems/linked-list-random-node </h3><h3 tabindex=\"-1\"> 384. 打乱数组 https://leetcode.cn/problems/shuffle-an-array </h3><h3 tabindex=\"-1\"> 398. 随机数索引 https://leetcode.cn/problems/random-pick-index </h3></div><div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div><div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li></ul></div><p>没事儿的时候我喜欢玩玩那些经典的 2D 网页小游戏，我发现很多游戏都要涉及地图的随机生成，比如扫雷游戏中雷的位置应该是随机分布的：</p><div class=\"img-content\"><img src=\"/algo/images/random-algo/1.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>再比如经典炸弹人游戏，障碍物的位置也是有一定随机性的：</p><div class=\"img-content\"><img src=\"/algo/images/random-algo/2.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div><p>这些 2D 游戏相较现在的大型 3D 游戏虽然看起来有些简陋，但依然用到很多有趣算法技巧，本文就来深入研究一下地图的随机生成算法。</p><p>2D 游戏的地图肯定可以抽象成一个二维矩阵，就拿扫雷举例吧，我们可以用下面这个类表示扫雷的棋盘：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在开始游戏时，需要在棋盘中随机生成 <code>k</code> 个雷，也就是说需要在 <code>board</code> 中生成 <code>k</code> 个不同的 <code>(x, y)</code> 坐标，且这里面 <code>x, y</code> 都是随机生成的。</p><p>对于这个需求，<strong>首先一个优化就是对二维矩阵进行「降维打击」，把二维数组转化成一维数组</strong>：</p><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样，我们只要在 <code>[0, m * n)</code> 中选取一个随机数，就相当于在二维数组中随机选取了一个元素。</p><p>但问题是，我们现在需要随机选出 <code>k</code> 个<strong>不同的位置</strong>放雷。你可能说，那在 <code>[0, m * n)</code> 中选出来 <code>k</code> 个随机数不就行了？</p><p>是的，但实际操作起来有些麻烦，因为你很难保证随机数不重复。如果出现重复的随机数，你就得再随机选一次，直到找到 <code>k</code> 个不同的随机数。</p><p>如果 <code>k</code> 比较小 <code>m * n</code> 比较大，那出现重复随机数的概率还比较低，但如果 <code>k</code> 和 <code>m * n</code> 的大小接近，那么出现重复随机数的概率非常高，算法的效率就会大幅下降。</p><p>那么，我们有没有更好的办法能够在线性的时间复杂度解决这个问题？其实是有的，而且有很多种解决方案。</p><h2 class=\"hidden-for-toc\" id=\"洗牌算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95\"><span>洗牌算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"水塘抽样算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95\"><span>水塘抽样算法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"蒙特卡洛验证法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%AA%8C%E8%AF%81%E6%B3%95\"><span>蒙特卡洛验证法</span></a></h2><h2 class=\"hidden-for-toc\" id=\"拓展延伸\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8B%93%E5%B1%95%E5%BB%B6%E4%BC%B8\"><span>拓展延伸</span></a></h2><div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div></div> <div style=\"display:none;\"><h3 tabindex=\"-1\"> 382. 链表随机节点 https://leetcode.cn/problems/linked-list-random-node </h3><h3 tabindex=\"-1\"> 384. 打乱数组 https://leetcode.cn/problems/shuffle-an-array </h3><h3 tabindex=\"-1\"> 398. 随机数索引 https://leetcode.cn/problems/random-pick-index </h3></div> <h3 tabindex=\"-1\"> 382. 链表随机节点 https://leetcode.cn/problems/linked-list-random-node </h3> <h3 tabindex=\"-1\"> 384. 打乱数组 https://leetcode.cn/problems/shuffle-an-array </h3> <h3 tabindex=\"-1\"> 398. 随机数索引 https://leetcode.cn/problems/random-pick-index </h3> <div class=\"hint-container note\"><p class=\"hint-container-title\">本文讲解的例题</p><table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table></div> <p class=\"hint-container-title\">本文讲解的例题</p> <table><thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead><tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody></table> <thead><tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr></thead> <tr><th style=\"text-align:center;\">LeetCode</th><th style=\"text-align:center;\">力扣</th><th style=\"text-align:center;\">难度</th></tr> <th style=\"text-align:center;\">LeetCode</th> <th style=\"text-align:center;\">力扣</th> <th style=\"text-align:center;\">难度</th> <tbody><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr><tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr></tbody> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a></td> <a href=\"https://leetcode.com/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. Linked List Random Node</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a></td> <a href=\"https://leetcode.cn/problems/linked-list-random-node/\" target=\"_blank\" rel=\"noopener noreferrer\">382. 链表随机节点</a> <td style=\"text-align:center;\">🟠</td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a></td> <a href=\"https://leetcode.com/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. Shuffle an Array</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a></td> <a href=\"https://leetcode.cn/problems/shuffle-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">384. 打乱数组</a> <td style=\"text-align:center;\">🟠</td> <tr><td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td><td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td><td style=\"text-align:center;\">🟠</td></tr> <td style=\"text-align:center;\"><a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a></td> <a href=\"https://leetcode.com/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. Random Pick Index</a> <td style=\"text-align:center;\"><a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a></td> <a href=\"https://leetcode.cn/problems/random-pick-index/\" target=\"_blank\" rel=\"noopener noreferrer\">398. 随机数索引</a> <td style=\"text-align:center;\">🟠</td> <div class=\"hint-container info\"><p class=\"hint-container-title\">前置知识</p><p>阅读本文前，你需要先学习：</p><ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li></ul></div> <p class=\"hint-container-title\">前置知识</p> <p>阅读本文前，你需要先学习：</p> <ul><li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li></ul> <li><a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a></li> <a class=\"route-link\" href=\"/algo/data-structure-basic/array-basic/\">数组基础</a> <p>没事儿的时候我喜欢玩玩那些经典的 2D 网页小游戏，我发现很多游戏都要涉及地图的随机生成，比如扫雷游戏中雷的位置应该是随机分布的：</p> <div class=\"img-content\"><img src=\"/algo/images/random-algo/1.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/random-algo/1.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>再比如经典炸弹人游戏，障碍物的位置也是有一定随机性的：</p> <div class=\"img-content\"><img src=\"/algo/images/random-algo/2.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"></div> <img src=\"/algo/images/random-algo/2.jpg\" alt class=\"myimage\" loading=\"lazy\" photo-swipe=\"\"> <p>这些 2D 游戏相较现在的大型 3D 游戏虽然看起来有些简陋，但依然用到很多有趣算法技巧，本文就来深入研究一下地图的随机生成算法。</p> <p>2D 游戏的地图肯定可以抽象成一个二维矩阵，就拿扫雷举例吧，我们可以用下面这个类表示扫雷的棋盘：</p> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 大小为 m * n 的二维棋盘</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[][] </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>在开始游戏时，需要在棋盘中随机生成 <code>k</code> 个雷，也就是说需要在 <code>board</code> 中生成 <code>k</code> 个不同的 <code>(x, y)</code> 坐标，且这里面 <code>x, y</code> 都是随机生成的。</p> <code>k</code> <code>board</code> <code>k</code> <code>(x, y)</code> <code>x, y</code> <p>对于这个需求，<strong>首先一个优化就是对二维矩阵进行「降维打击」，把二维数组转化成一维数组</strong>：</p> <strong>首先一个优化就是对二维矩阵进行「降维打击」，把二维数组转化成一维数组</strong> <div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;\"><pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre><div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div> <pre class=\"shiki shiki-themes light-plus dark-plus vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code></pre> <code><span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span></code> <span class=\"line\"><span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span></span> <span style=\"--shiki-light:#0000FF;--shiki-dark:#569CD6;\">class</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> Game</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> {</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> m</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">n</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 长度为 m * n 的一维棋盘</span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 值为 true 的地方代表有雷，false 代表没有雷</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    boolean</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\">board</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">;</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将二维数组中的坐标 (x, y) 转化为一维数组中的索引</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\"> encode</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> x</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">, </span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> y</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\"> x * n + y;</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"></span> <span class=\"line\"><span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span></span> <span style=\"--shiki-light:#008000;--shiki-dark:#6A9955;\">    // 将一维数组中的索引转化为二维数组中的坐标 (x, y)</span> <span class=\"line\"><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span><span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span><span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span></span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">    int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] </span> <span style=\"--shiki-light:#795E26;--shiki-dark:#DCDCAA;\">decode</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">(</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\">int</span> <span style=\"--shiki-light:#001080;--shiki-dark:#9CDCFE;\"> index</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">) {</span> <span class=\"line\"><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span><span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span><span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span></span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\">        return</span> <span style=\"--shiki-light:#AF00DB;--shiki-dark:#C586C0;\"> new</span> <span style=\"--shiki-light:#267F99;--shiki-dark:#4EC9B0;\"> int</span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">[] {index / n, index % n};</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">    }</span> <span class=\"line\"><span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span></span> <span style=\"--shiki-light:#000000;--shiki-dark:#D4D4D4;\">}</span> <div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0;\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <div class=\"line-number\"></div> <p>这样，我们只要在 <code>[0, m * n)</code> 中选取一个随机数，就相当于在二维数组中随机选取了一个元素。</p> <code>[0, m * n)</code> <p>但问题是，我们现在需要随机选出 <code>k</code> 个<strong>不同的位置</strong>放雷。你可能说，那在 <code>[0, m * n)</code> 中选出来 <code>k</code> 个随机数不就行了？</p> <code>k</code> <strong>不同的位置</strong> <code>[0, m * n)</code> <code>k</code> <p>是的，但实际操作起来有些麻烦，因为你很难保证随机数不重复。如果出现重复的随机数，你就得再随机选一次，直到找到 <code>k</code> 个不同的随机数。</p> <code>k</code> <p>如果 <code>k</code> 比较小 <code>m * n</code> 比较大，那出现重复随机数的概率还比较低，但如果 <code>k</code> 和 <code>m * n</code> 的大小接近，那么出现重复随机数的概率非常高，算法的效率就会大幅下降。</p> <code>k</code> <code>m * n</code> <code>k</code> <code>m * n</code> <p>那么，我们有没有更好的办法能够在线性的时间复杂度解决这个问题？其实是有的，而且有很多种解决方案。</p> <h2 class=\"hidden-for-toc\" id=\"洗牌算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95\"><span>洗牌算法</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95\"><span>洗牌算法</span></a> <span>洗牌算法</span> <h2 class=\"hidden-for-toc\" id=\"水塘抽样算法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95\"><span>水塘抽样算法</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95\"><span>水塘抽样算法</span></a> <span>水塘抽样算法</span> <h2 class=\"hidden-for-toc\" id=\"蒙特卡洛验证法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%AA%8C%E8%AF%81%E6%B3%95\"><span>蒙特卡洛验证法</span></a></h2> <a class=\"header-anchor\" href=\"#%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%AA%8C%E8%AF%81%E6%B3%95\"><span>蒙特卡洛验证法</span></a> <span>蒙特卡洛验证法</span> <h2 class=\"hidden-for-toc\" id=\"拓展延伸\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%8B%93%E5%B1%95%E5%BB%B6%E4%BC%B8\"><span>拓展延伸</span></a></h2> <a class=\"header-anchor\" href=\"#%E6%8B%93%E5%B1%95%E5%BB%B6%E4%BC%B8\"><span>拓展延伸</span></a> <span>拓展延伸</span> <div id=\"hidden_part\" class=\"paywall\"><div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div></div> <div><div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div><p>loading...</p></div> <div class=\"css-1p3hq3p ant-spin ant-spin-spinning\" aria-live=\"polite\" aria-busy=\"true\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span><!----></div> <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <i class=\"ant-spin-dot-item\"></i> <p>loading...</p> <footer class=\"vp-page-meta\"><!----><div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div></footer> <div class=\"vp-meta-item git-info\"><div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div><!----></div> <div class=\"update-time\"><span class=\"vp-meta-label\">最近更新：</span><time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time></div> <span class=\"vp-meta-label\">最近更新：</span> <time class=\"vp-meta-info\" datetime=\"2025-07-21T03:29:25.280Z\" data-allow-mismatch>2025/7/21 11:29</time> <nav class=\"vp-page-nav\"><a class=\"route-link auto-link prev\" href=\"/algo/game/minesweeper/\" aria-label=\"【游戏】扫雷游戏地图生成器\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->【游戏】扫雷游戏地图生成器</div></a><a class=\"route-link auto-link next\" href=\"/algo/frequency-interview/factorial-problems/\" aria-label=\"讲两道常考的阶乘算法题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">讲两道常考的阶乘算法题<!----></div></a></nav> <a class=\"route-link auto-link prev\" href=\"/algo/game/minesweeper/\" aria-label=\"【游戏】扫雷游戏地图生成器\"><div class=\"hint\"><span class=\"arrow start\"></span>上一页</div><div class=\"link\"><!---->【游戏】扫雷游戏地图生成器</div></a> <div class=\"hint\"><span class=\"arrow start\"></span>上一页</div> <span class=\"arrow start\"></span> <div class=\"link\"><!---->【游戏】扫雷游戏地图生成器</div> <a class=\"route-link auto-link next\" href=\"/algo/frequency-interview/factorial-problems/\" aria-label=\"讲两道常考的阶乘算法题\"><div class=\"hint\">下一页<span class=\"arrow end\"></span></div><div class=\"link\">讲两道常考的阶乘算法题<!----></div></a> <div class=\"hint\">下一页<span class=\"arrow end\"></span></div> <span class=\"arrow end\"></span> <div class=\"link\">讲两道常考的阶乘算法题<!----></div> <div style=\"justify-content:center;display:flex;\" data-v-95bd7423><div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div></div> <div class=\"artalkCommentsContainer\" data-v-95bd7423><div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div><div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div></div> <div id=\"artalkComments\" style=\"display:none;\" data-v-95bd7423></div> <div style=\"margin-bottom:10px;\" data-v-95bd7423><!----></div>"
}